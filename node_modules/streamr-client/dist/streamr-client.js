module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 28);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/interopRequireDefault");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/classCallCheck");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/regenerator");

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/asyncToGenerator");

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/createClass");

/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/possibleConstructorReturn");

/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/getPrototypeOf");

/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/inherits");

/***/ }),
/* 8 */
/***/ (function(module, exports) {

module.exports = require("debug");

/***/ }),
/* 9 */
/***/ (function(module, exports) {

module.exports = require("streamr-client-protocol");

/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = require("ethers");

/***/ }),
/* 11 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/assertThisInitialized");

/***/ }),
/* 12 */
/***/ (function(module, exports) {

module.exports = require("eventemitter3");

/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/wrapNativeSuper");

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(2));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(15));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(3));

var _nodeFetch = _interopRequireDefault(__webpack_require__(26));

var _debug = _interopRequireDefault(__webpack_require__(8));

var _AuthFetchError = _interopRequireDefault(__webpack_require__(39));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var debug = (0, _debug["default"])('StreamrClient:utils');

var authFetch =
/*#__PURE__*/
function () {
  var _ref = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee(url, session) {
    var opts,
        requireNewToken,
        response,
        body,
        _args = arguments;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            opts = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};
            requireNewToken = _args.length > 3 && _args[3] !== undefined ? _args[3] : false;
            debug('authFetch: ', url, opts);
            _context.t0 = _nodeFetch["default"];
            _context.t1 = url;
            _context.t2 = _objectSpread;
            _context.t3 = {};
            _context.t4 = opts;
            _context.t5 = _objectSpread;
            _context.t6 = {};

            if (!(session && !session.options.unauthenticated)) {
              _context.next = 19;
              break;
            }

            _context.t8 = "Bearer ";
            _context.next = 14;
            return session.getSessionToken(requireNewToken);

          case 14:
            _context.t9 = _context.sent;
            _context.t10 = _context.t8.concat.call(_context.t8, _context.t9);
            _context.t7 = {
              Authorization: _context.t10
            };
            _context.next = 20;
            break;

          case 19:
            _context.t7 = {};

          case 20:
            _context.t11 = _context.t7;
            _context.t12 = {};
            _context.t13 = opts.headers;
            _context.t14 = (0, _context.t5)(_context.t6, _context.t11, _context.t12, _context.t13);
            _context.t15 = {
              headers: _context.t14
            };
            _context.t16 = (0, _context.t2)(_context.t3, _context.t4, _context.t15);
            _context.next = 28;
            return (0, _context.t0)(_context.t1, _context.t16);

          case 28:
            response = _context.sent;
            _context.next = 31;
            return response.text();

          case 31:
            body = _context.sent;

            if (!response.ok) {
              _context.next = 42;
              break;
            }

            _context.prev = 33;
            return _context.abrupt("return", JSON.parse(body || '{}'));

          case 37:
            _context.prev = 37;
            _context.t17 = _context["catch"](33);
            throw new _AuthFetchError["default"](_context.t17.message, response, body);

          case 40:
            _context.next = 47;
            break;

          case 42:
            if (!([400, 401].includes(response.status) && !requireNewToken)) {
              _context.next = 46;
              break;
            }

            return _context.abrupt("return", authFetch(url, session, opts, true));

          case 46:
            throw new _AuthFetchError["default"]("Request to ".concat(url, " returned with error code ").concat(response.status, "."), response, body);

          case 47:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[33, 37]]);
  }));

  return function authFetch(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

var _default = authFetch;
exports["default"] = _default;
module.exports = exports.default;

/***/ }),
/* 15 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/defineProperty");

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(1));

var _createClass2 = _interopRequireDefault(__webpack_require__(4));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(5));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(6));

var _inherits2 = _interopRequireDefault(__webpack_require__(7));

var _eventemitter = _interopRequireDefault(__webpack_require__(12));

var _debug = _interopRequireDefault(__webpack_require__(8));

var debug = (0, _debug["default"])('StreamrClient::Subscription');
var requestId = 0;

function generateSubscriptionId() {
  var id = requestId;
  requestId += 1;
  return id.toString();
}

var DEFAULT_PROPAGATION_TIMEOUT = 5000;
var DEFAULT_RESEND_TIMEOUT = 5000;
/*
'interface' containing the default parameters and functionalities common to every subscription (Combined, RealTime and Historical)
 */

var Subscription =
/*#__PURE__*/
function (_EventEmitter) {
  (0, _inherits2["default"])(Subscription, _EventEmitter);

  function Subscription(streamId, streamPartition, callback, groupKeys) {
    var _this;

    var propagationTimeout = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : DEFAULT_PROPAGATION_TIMEOUT;
    var resendTimeout = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : DEFAULT_RESEND_TIMEOUT;
    (0, _classCallCheck2["default"])(this, Subscription);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Subscription).call(this));

    if (!streamId) {
      throw new Error('No stream id given!');
    }

    if (!callback) {
      throw new Error('No callback given!');
    }

    _this.streamId = streamId;
    _this.streamPartition = streamPartition;
    _this.id = generateSubscriptionId();
    _this.groupKeys = groupKeys || {};
    _this.propagationTimeout = propagationTimeout;
    _this.resendTimeout = resendTimeout;
    _this.state = Subscription.State.unsubscribed;
    return _this;
  }

  (0, _createClass2["default"])(Subscription, [{
    key: "getState",
    value: function getState() {
      return this.state;
    }
  }, {
    key: "setState",
    value: function setState(state) {
      debug("Subscription: Stream ".concat(this.streamId, " state changed ").concat(this.state, " => ").concat(state));
      this.state = state;
      this.emit(state);
    }
  }]);
  return Subscription;
}(_eventemitter["default"]);

exports["default"] = Subscription;
Subscription.State = {
  unsubscribed: 'unsubscribed',
  subscribing: 'subscribing',
  subscribed: 'subscribed',
  unsubscribing: 'unsubscribing'
};
module.exports = exports.default;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(2));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(3));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(1));

var _createClass2 = _interopRequireDefault(__webpack_require__(4));

var _authFetch = _interopRequireDefault(__webpack_require__(14));

var Stream =
/*#__PURE__*/
function () {
  function Stream(client, props) {
    (0, _classCallCheck2["default"])(this, Stream);
    this._client = client;
    Object.assign(this, props);
  }

  (0, _createClass2["default"])(Stream, [{
    key: "update",
    value: function () {
      var _update = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee() {
        var json;
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return (0, _authFetch["default"])("".concat(this._client.options.restUrl, "/streams/").concat(this.id), this._client.session, {
                  method: 'PUT',
                  body: JSON.stringify(this.toObject())
                });

              case 2:
                json = _context.sent;
                return _context.abrupt("return", json ? new Stream(this._client, json) : undefined);

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function update() {
        return _update.apply(this, arguments);
      }

      return update;
    }()
  }, {
    key: "toObject",
    value: function toObject() {
      var _this = this;

      var result = {};
      Object.keys(this).forEach(function (key) {
        if (!key.startsWith('_')) {
          result[key] = _this[key];
        }
      });
      return result;
    }
  }, {
    key: "delete",
    value: function _delete() {
      return (0, _authFetch["default"])("".concat(this._client.options.restUrl, "/streams/").concat(this.id), this._client.session, {
        method: 'DELETE'
      });
    }
  }, {
    key: "getPermissions",
    value: function getPermissions() {
      return (0, _authFetch["default"])("".concat(this._client.options.restUrl, "/streams/").concat(this.id, "/permissions"), this._client.session);
    }
  }, {
    key: "hasPermission",
    value: function () {
      var _hasPermission = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee2(operation, userId) {
        var permissions;
        return _regenerator["default"].wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.getPermissions();

              case 2:
                permissions = _context2.sent;
                return _context2.abrupt("return", permissions.find(function (p) {
                  return p.operation === operation && (userId == null && p.anonymous || userId != null && p.user === userId);
                }));

              case 4:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function hasPermission(_x, _x2) {
        return _hasPermission.apply(this, arguments);
      }

      return hasPermission;
    }()
  }, {
    key: "grantPermission",
    value: function grantPermission(operation, userId) {
      var permissionObject = {
        operation: operation
      };

      if (userId != null) {
        permissionObject.user = userId;
      } else {
        permissionObject.anonymous = true;
      }

      return (0, _authFetch["default"])("".concat(this._client.options.restUrl, "/streams/").concat(this.id, "/permissions"), this._client.session, {
        method: 'POST',
        body: JSON.stringify(permissionObject)
      });
    }
  }, {
    key: "revokePermission",
    value: function revokePermission(permissionId) {
      return (0, _authFetch["default"])("".concat(this._client.options.restUrl, "/streams/").concat(this.id, "/permissions/").concat(permissionId), this._client.session, {
        method: 'DELETE'
      });
    }
  }, {
    key: "detectFields",
    value: function detectFields() {
      return (0, _authFetch["default"])("".concat(this._client.options.restUrl, "/streams/").concat(this.id, "/detectFields"), this._client.session);
    }
  }, {
    key: "publish",
    value: function publish() {
      var _this$_client;

      for (var _len = arguments.length, theArgs = new Array(_len), _key = 0; _key < _len; _key++) {
        theArgs[_key] = arguments[_key];
      }

      return (_this$_client = this._client).publish.apply(_this$_client, [this.id].concat(theArgs));
    }
  }]);
  return Stream;
}();

exports["default"] = Stream;
module.exports = exports.default;

/***/ }),
/* 18 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/interopRequireWildcard");

/***/ }),
/* 19 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/typeof");

/***/ }),
/* 20 */
/***/ (function(module, exports) {

module.exports = require("qs");

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(2));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(3));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(1));

var _createClass2 = _interopRequireDefault(__webpack_require__(4));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(5));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(6));

var _inherits2 = _interopRequireDefault(__webpack_require__(7));

var _AbstractSubscription2 = _interopRequireDefault(__webpack_require__(22));

var HistoricalSubscription =
/*#__PURE__*/
function (_AbstractSubscription) {
  (0, _inherits2["default"])(HistoricalSubscription, _AbstractSubscription);

  function HistoricalSubscription(streamId, streamPartition, callback, options, groupKeys, propagationTimeout, resendTimeout) {
    var _this;

    var orderMessages = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : true;
    (0, _classCallCheck2["default"])(this, HistoricalSubscription);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(HistoricalSubscription).call(this, streamId, streamPartition, callback, groupKeys, propagationTimeout, resendTimeout, orderMessages));
    _this.resendOptions = options;

    if (!_this.resendOptions || !_this.resendOptions.from && !_this.resendOptions.last) {
      throw new Error('Resend options (either "from", "from" and "to", or "last") must be defined in a historical subscription.');
    }

    if (_this.resendOptions.from != null && _this.resendOptions.last != null) {
      throw new Error("Multiple resend options active! Please use only one: ".concat(JSON.stringify(_this.resendOptions)));
    }

    if (_this.resendOptions.msgChainId != null && typeof _this.resendOptions.publisherId === 'undefined') {
      throw new Error('publisherId must be defined as well if msgChainId is defined.');
    }

    if (_this.resendOptions.from == null && _this.resendOptions.to != null) {
      throw new Error('"from" must be defined as well if "to" is defined.');
    }

    return _this;
  }

  (0, _createClass2["default"])(HistoricalSubscription, [{
    key: "handleBroadcastMessage",
    value: function () {
      var _handleBroadcastMessage = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee(msg, verifyFn) {
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return _AbstractSubscription2["default"].validate(msg, verifyFn);

              case 2:
                this.emit('message received', msg);

              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function handleBroadcastMessage(_x, _x2) {
        return _handleBroadcastMessage.apply(this, arguments);
      }

      return handleBroadcastMessage;
    }()
    /* eslint-disable class-methods-use-this */

  }, {
    key: "hasResendOptions",
    value: function hasResendOptions() {
      return true;
    }
  }, {
    key: "isResending",
    value: function isResending() {
      return true;
    }
  }, {
    key: "setResending",
    value: function setResending() {}
    /* eslint-enable class-methods-use-this */

  }, {
    key: "getResendOptions",
    value: function getResendOptions() {
      return this.resendOptions;
    }
  }, {
    key: "finishResend",
    value: function finishResend() {
      if (Object.keys(this.pendingResendRequestIds).length === 0) {
        this.emit('initial_resend_done');
      }
    }
  }]);
  return HistoricalSubscription;
}(_AbstractSubscription2["default"]);

exports["default"] = HistoricalSubscription;
module.exports = exports.default;

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(2));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(3));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(1));

var _createClass2 = _interopRequireDefault(__webpack_require__(4));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(5));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(6));

var _inherits2 = _interopRequireDefault(__webpack_require__(7));

var _debug = _interopRequireDefault(__webpack_require__(8));

var _streamrClientProtocol = __webpack_require__(9);

var _VerificationFailedError = _interopRequireDefault(__webpack_require__(32));

var _InvalidSignatureError = _interopRequireDefault(__webpack_require__(33));

var _EncryptionUtil = _interopRequireDefault(__webpack_require__(23));

var _Subscription2 = _interopRequireDefault(__webpack_require__(16));

var OrderingUtil = _streamrClientProtocol.Utils.OrderingUtil;
var debug = (0, _debug["default"])('StreamrClient::AbstractSubscription');

var AbstractSubscription =
/*#__PURE__*/
function (_Subscription) {
  (0, _inherits2["default"])(AbstractSubscription, _Subscription);

  function AbstractSubscription(streamId, streamPartition, callback, groupKeys, propagationTimeout, resendTimeout) {
    var _this;

    var orderMessages = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : true;
    (0, _classCallCheck2["default"])(this, AbstractSubscription);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(AbstractSubscription).call(this, streamId, streamPartition, callback, groupKeys, propagationTimeout, resendTimeout));
    _this.callback = callback;
    _this.pendingResendRequestIds = {};
    _this._lastMessageHandlerPromise = {};
    _this.orderingUtil = orderMessages ? new OrderingUtil(streamId, streamPartition, function (orderedMessage) {
      _this._handleInOrder(orderedMessage);
    }, function (from, to, publisherId, msgChainId) {
      _this.emit('gap', from, to, publisherId, msgChainId);
    }, _this.propagationTimeout, _this.resendTimeout) : undefined;
    /** * Message handlers ** */

    _this.on('unsubscribed', function () {
      _this._clearGaps();

      _this.setResending(false);
    });

    _this.on('disconnected', function () {
      _this.setState(_Subscription2["default"].State.unsubscribed);

      _this._clearGaps();

      _this.setResending(false);
    });

    _this.on('error', function () {
      _this._clearGaps();
    });

    return _this;
  }

  (0, _createClass2["default"])(AbstractSubscription, [{
    key: "addPendingResendRequestId",
    value: function addPendingResendRequestId(requestId) {
      this.pendingResendRequestIds[requestId] = true;
    }
  }, {
    key: "_handleInOrder",
    value: function _handleInOrder(orderedMessage) {
      var newGroupKey = _EncryptionUtil["default"].decryptStreamMessage(orderedMessage, this.groupKeys[orderedMessage.getPublisherId()]);

      if (newGroupKey) {
        this.groupKeys[orderedMessage.getPublisherId()] = newGroupKey;
      }

      this.callback(orderedMessage.getParsedContent(), orderedMessage);

      if (orderedMessage.isByeMessage()) {
        this.emit('done');
      }
    }
  }, {
    key: "handleResentMessage",
    value: function () {
      var _handleResentMessage = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee(msg, requestId, verifyFn) {
        var _this2 = this;

        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", this._catchAndEmitErrors(function () {
                  if (!_this2.isResending()) {
                    throw new Error("There is no resend in progress, but received resent message ".concat(msg.serialize()));
                  } else {
                    var handleMessagePromise = _this2._handleMessage(msg, verifyFn);

                    _this2._lastMessageHandlerPromise[requestId] = handleMessagePromise;
                    return handleMessagePromise;
                  }
                }));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function handleResentMessage(_x, _x2, _x3) {
        return _handleResentMessage.apply(this, arguments);
      }

      return handleResentMessage;
    }()
  }, {
    key: "handleResending",
    value: function () {
      var _handleResending = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee2(response) {
        var _this3 = this;

        return _regenerator["default"].wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", this._catchAndEmitErrors(function () {
                  if (!_this3.pendingResendRequestIds[response.requestId]) {
                    throw new Error("Received unexpected ResendResponseResending message ".concat(response.serialize()));
                  }

                  _this3.emit('resending', response);
                }));

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function handleResending(_x4) {
        return _handleResending.apply(this, arguments);
      }

      return handleResending;
    }()
  }, {
    key: "handleResent",
    value: function () {
      var _handleResent = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee4(response) {
        var _this4 = this;

        return _regenerator["default"].wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                return _context4.abrupt("return", this._catchAndEmitErrors(
                /*#__PURE__*/
                (0, _asyncToGenerator2["default"])(
                /*#__PURE__*/
                _regenerator["default"].mark(function _callee3() {
                  return _regenerator["default"].wrap(function _callee3$(_context3) {
                    while (1) {
                      switch (_context3.prev = _context3.next) {
                        case 0:
                          if (_this4.pendingResendRequestIds[response.requestId]) {
                            _context3.next = 2;
                            break;
                          }

                          throw new Error("Received unexpected ResendResponseResent message ".concat(response.serialize()));

                        case 2:
                          if (_this4._lastMessageHandlerPromise[response.requestId]) {
                            _context3.next = 4;
                            break;
                          }

                          throw new Error('Attempting to handle ResendResponseResent, but no messages have been received!');

                        case 4:
                          _context3.next = 6;
                          return _this4._lastMessageHandlerPromise[response.requestId];

                        case 6:
                          try {
                            _this4.emit('resent', response);
                          } finally {
                            _this4.cleanupResponse(response);
                          }

                        case 7:
                        case "end":
                          return _context3.stop();
                      }
                    }
                  }, _callee3);
                }))));

              case 1:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function handleResent(_x5) {
        return _handleResent.apply(this, arguments);
      }

      return handleResent;
    }()
  }, {
    key: "handleNoResend",
    value: function () {
      var _handleNoResend = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee6(response) {
        var _this5 = this;

        return _regenerator["default"].wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                return _context6.abrupt("return", this._catchAndEmitErrors(
                /*#__PURE__*/
                (0, _asyncToGenerator2["default"])(
                /*#__PURE__*/
                _regenerator["default"].mark(function _callee5() {
                  return _regenerator["default"].wrap(function _callee5$(_context5) {
                    while (1) {
                      switch (_context5.prev = _context5.next) {
                        case 0:
                          if (_this5.pendingResendRequestIds[response.requestId]) {
                            _context5.next = 2;
                            break;
                          }

                          throw new Error("Received unexpected ResendResponseNoResend message ".concat(response.serialize()));

                        case 2:
                          try {
                            _this5.emit('no_resend', response);
                          } finally {
                            _this5.cleanupResponse(response);
                          }

                        case 3:
                        case "end":
                          return _context5.stop();
                      }
                    }
                  }, _callee5);
                }))));

              case 1:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function handleNoResend(_x6) {
        return _handleNoResend.apply(this, arguments);
      }

      return handleNoResend;
    }()
  }, {
    key: "cleanupResponse",
    value: function cleanupResponse(response) {
      delete this.pendingResendRequestIds[response.requestId];
      delete this._lastMessageHandlerPromise[response.requestId];

      if (Object.keys(this.pendingResendRequestIds).length === 0) {
        this.finishResend();
      }
    }
  }, {
    key: "_clearGaps",
    value: function _clearGaps() {
      if (this.orderingUtil) {
        this.orderingUtil.clearGaps();
      }
    }
  }, {
    key: "stop",
    value: function stop() {
      this._clearGaps();
    }
  }, {
    key: "getState",
    value: function getState() {
      return this.state;
    }
  }, {
    key: "setState",
    value: function setState(state) {
      debug("Subscription: Stream ".concat(this.streamId, " state changed ").concat(this.state, " => ").concat(state));
      this.state = state;
      this.emit(state);
    }
  }, {
    key: "handleError",
    value: function handleError(err) {
      /**
       * If parsing the (expected) message failed, we should still mark it as received. Otherwise the
       * gap detection will think a message was lost, and re-request the failing message.
       */
      if (err instanceof _streamrClientProtocol.Errors.InvalidJsonError && err.streamMessage && this.orderingUtil) {
        this.orderingUtil.markMessageExplicitly(err.streamMessage);
      }

      this.emit('error', err);
    }
  }, {
    key: "_catchAndEmitErrors",
    value: function () {
      var _catchAndEmitErrors2 = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee7(fn) {
        return _regenerator["default"].wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.prev = 0;
                _context7.next = 3;
                return fn();

              case 3:
                return _context7.abrupt("return", _context7.sent);

              case 6:
                _context7.prev = 6;
                _context7.t0 = _context7["catch"](0);
                console.error(_context7.t0);
                this.emit('error', _context7.t0); // Swallow rejection

                return _context7.abrupt("return", Promise.resolve());

              case 11:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this, [[0, 6]]);
      }));

      function _catchAndEmitErrors(_x7) {
        return _catchAndEmitErrors2.apply(this, arguments);
      }

      return _catchAndEmitErrors;
    }()
  }, {
    key: "_handleMessage",
    value: function () {
      var _handleMessage2 = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee8(msg, verifyFn) {
        return _regenerator["default"].wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _context8.next = 2;
                return AbstractSubscription.validate(msg, verifyFn);

              case 2:
                this.emit('message received');

                if (this.orderingUtil) {
                  this.orderingUtil.add(msg);
                } else {
                  this._handleInOrder(msg);
                }

              case 4:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function _handleMessage(_x8, _x9) {
        return _handleMessage2.apply(this, arguments);
      }

      return _handleMessage;
    }()
  }], [{
    key: "validate",
    value: function () {
      var _validate = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee9(msg, verifyFn) {
        var valid;
        return _regenerator["default"].wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.prev = 0;
                _context9.next = 3;
                return verifyFn();

              case 3:
                valid = _context9.sent;
                _context9.next = 9;
                break;

              case 6:
                _context9.prev = 6;
                _context9.t0 = _context9["catch"](0);
                throw new _VerificationFailedError["default"](msg, _context9.t0);

              case 9:
                if (valid) {
                  _context9.next = 11;
                  break;
                }

                throw new _InvalidSignatureError["default"](msg);

              case 11:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9, null, [[0, 6]]);
      }));

      function validate(_x10, _x11) {
        return _validate.apply(this, arguments);
      }

      return validate;
    }()
  }]);
  return AbstractSubscription;
}(_Subscription2["default"]);

exports["default"] = AbstractSubscription;
module.exports = exports.default;

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(1));

var _createClass2 = _interopRequireDefault(__webpack_require__(4));

var _crypto = _interopRequireDefault(__webpack_require__(24));

var _ethers = __webpack_require__(10);

var _streamrClientProtocol = __webpack_require__(9);

var _UnableToDecryptError = _interopRequireDefault(__webpack_require__(34));

var StreamMessage = _streamrClientProtocol.MessageLayer.StreamMessage;

var EncryptionUtil =
/*#__PURE__*/
function () {
  function EncryptionUtil() {
    (0, _classCallCheck2["default"])(this, EncryptionUtil);
  }

  (0, _createClass2["default"])(EncryptionUtil, null, [{
    key: "encrypt",

    /*
    Both 'data' and 'groupKey' must be Buffers. Returns a hex string without the '0x' prefix.
     */
    value: function encrypt(data, groupKey) {
      var iv = _crypto["default"].randomBytes(16); // always need a fresh IV when using CTR mode


      var cipher = _crypto["default"].createCipheriv('aes-256-ctr', groupKey, iv);

      return _ethers.ethers.utils.hexlify(iv).slice(2) + cipher.update(data, null, 'hex') + cipher["final"]('hex');
    }
    /*
    'ciphertext' must be a hex string (without '0x' prefix), 'groupKey' must be a Buffer. Returns a Buffer.
     */

  }, {
    key: "decrypt",
    value: function decrypt(ciphertext, groupKey) {
      var iv = _ethers.ethers.utils.arrayify("0x".concat(ciphertext.slice(0, 32)));

      var decipher = _crypto["default"].createDecipheriv('aes-256-ctr', groupKey, iv);

      return Buffer.concat([decipher.update(ciphertext.slice(32), 'hex', null), decipher["final"](null)]);
    }
    /*
    Sets the content of 'streamMessage' with the encryption result of the old content with 'groupKey'.
     */

  }, {
    key: "encryptStreamMessage",
    value: function encryptStreamMessage(streamMessage, groupKey) {
      /* eslint-disable no-param-reassign */
      streamMessage.encryptionType = StreamMessage.ENCRYPTION_TYPES.AES;
      streamMessage.serializedContent = this.encrypt(Buffer.from(streamMessage.getSerializedContent(), 'utf8'), groupKey);
      streamMessage.parsedContent = undefined;
      /* eslint-enable no-param-reassign */
    }
    /*
    Sets the content of 'streamMessage' with the encryption result of a plaintext with 'groupKey'. The
    plaintext is the concatenation of 'newGroupKey' and the old serialized content of 'streamMessage'.
     */

  }, {
    key: "encryptStreamMessageAndNewKey",
    value: function encryptStreamMessageAndNewKey(newGroupKey, streamMessage, groupKey) {
      /* eslint-disable no-param-reassign */
      streamMessage.encryptionType = StreamMessage.ENCRYPTION_TYPES.NEW_KEY_AND_AES;
      var plaintext = Buffer.concat([newGroupKey, Buffer.from(streamMessage.getSerializedContent(), 'utf8')]);
      streamMessage.serializedContent = EncryptionUtil.encrypt(plaintext, groupKey);
      streamMessage.parsedContent = undefined;
      /* eslint-enable no-param-reassign */
    }
    /*
    Decrypts the serialized content of 'streamMessage' with 'groupKey'. If the resulting plaintext is the concatenation
    of a new group key and a message content, sets the content of 'streamMessage' with that message content and returns
    the key. If the resulting plaintext is only a message content, sets the content of 'streamMessage' with that
    message content and returns null.
     */

  }, {
    key: "decryptStreamMessage",
    value: function decryptStreamMessage(streamMessage, groupKey) {
      /* eslint-disable no-param-reassign */
      if (streamMessage.encryptionType === StreamMessage.ENCRYPTION_TYPES.AES) {
        streamMessage.encryptionType = StreamMessage.ENCRYPTION_TYPES.NONE;
        var serializedContent = this.decrypt(streamMessage.getSerializedContent(), groupKey).toString();

        try {
          streamMessage.parsedContent = JSON.parse(serializedContent);
          streamMessage.serializedContent = serializedContent;
        } catch (err) {
          throw new _UnableToDecryptError["default"](streamMessage);
        }
      } else if (streamMessage.encryptionType === StreamMessage.ENCRYPTION_TYPES.NEW_KEY_AND_AES) {
        streamMessage.encryptionType = StreamMessage.ENCRYPTION_TYPES.NONE;
        var plaintext = this.decrypt(streamMessage.getSerializedContent(), groupKey);

        var _serializedContent = plaintext.slice(32).toString();

        try {
          streamMessage.parsedContent = JSON.parse(_serializedContent);
          streamMessage.serializedContent = _serializedContent;
        } catch (err) {
          throw new _UnableToDecryptError["default"](streamMessage);
        }

        return plaintext.slice(0, 32);
      }

      return null;
      /* eslint-enable no-param-reassign */
    }
  }]);
  return EncryptionUtil;
}();

exports["default"] = EncryptionUtil;
module.exports = exports.default;

/***/ }),
/* 24 */
/***/ (function(module, exports) {

module.exports = require("crypto");

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(2));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(3));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(1));

var _createClass2 = _interopRequireDefault(__webpack_require__(4));

var _streamrClientProtocol = __webpack_require__(9);

var _ethers = __webpack_require__(10);

// eslint-disable-next-line import/order
var StreamMessage = _streamrClientProtocol.MessageLayer.StreamMessage;
var SIGNATURE_TYPES = StreamMessage.SIGNATURE_TYPES;

var debug = __webpack_require__(8)('StreamrClient::Signer');

var Signer =
/*#__PURE__*/
function () {
  function Signer() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    (0, _classCallCheck2["default"])(this, Signer);
    this.options = options;

    if (this.options.privateKey) {
      var wallet = new _ethers.ethers.Wallet(this.options.privateKey);
      this.address = wallet.address;

      this.sign = function (d) {
        return wallet.signMessage(d);
      };
    } else if (this.options.provider) {
      var provider = new _ethers.ethers.providers.Web3Provider(this.options.provider);
      var signer = provider.getSigner();
      this.address = signer.address;

      this.sign =
      /*#__PURE__*/
      function () {
        var _ref = (0, _asyncToGenerator2["default"])(
        /*#__PURE__*/
        _regenerator["default"].mark(function _callee(d) {
          return _regenerator["default"].wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  return _context.abrupt("return", signer.signMessage(d));

                case 1:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        return function (_x) {
          return _ref.apply(this, arguments);
        };
      }();
    } else {
      throw new Error('Need either "privateKey" or "provider".');
    }
  }

  (0, _createClass2["default"])(Signer, [{
    key: "signData",
    value: function () {
      var _signData = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee2(data) {
        var signatureType,
            _args2 = arguments;
        return _regenerator["default"].wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                signatureType = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : SIGNATURE_TYPES.ETH;

                if (!(signatureType === SIGNATURE_TYPES.ETH_LEGACY || signatureType === SIGNATURE_TYPES.ETH)) {
                  _context2.next = 3;
                  break;
                }

                return _context2.abrupt("return", this.sign(data));

              case 3:
                throw new Error("Unrecognized signature type: ".concat(signatureType));

              case 4:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function signData(_x2) {
        return _signData.apply(this, arguments);
      }

      return signData;
    }()
  }, {
    key: "signStreamMessage",
    value: function () {
      var _signStreamMessage = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee3(streamMessage) {
        var signatureType,
            payload,
            _args3 = arguments;
        return _regenerator["default"].wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                signatureType = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : SIGNATURE_TYPES.ETH;

                if (!(streamMessage.version !== 31)) {
                  _context3.next = 3;
                  break;
                }

                throw new Error('Needs to be a StreamMessageV31');

              case 3:
                if (streamMessage.getTimestamp()) {
                  _context3.next = 5;
                  break;
                }

                throw new Error('Timestamp is required as part of the data to sign.');

              case 5:
                payload = Signer.getPayloadToSign(streamMessage, this.address, signatureType);
                /* eslint-disable no-param-reassign */

                _context3.next = 8;
                return this.signData(payload, signatureType);

              case 8:
                streamMessage.signature = _context3.sent;
                streamMessage.signatureType = signatureType;
                streamMessage.messageId.publisherId = this.address;
                /* eslint-enable no-param-reassign */

              case 11:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function signStreamMessage(_x3) {
        return _signStreamMessage.apply(this, arguments);
      }

      return signStreamMessage;
    }()
  }], [{
    key: "getPayloadToSign",
    value: function getPayloadToSign(msg) {
      var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : msg.getPublisherId();
      var signatureType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : SIGNATURE_TYPES.ETH;

      if (signatureType === SIGNATURE_TYPES.ETH) {
        var prev = '';

        if (msg.prevMsgRef) {
          prev = "".concat(msg.prevMsgRef.timestamp).concat(msg.prevMsgRef.sequenceNumber);
        }

        return "".concat(msg.getStreamId()).concat(msg.getStreamPartition()).concat(msg.getTimestamp()).concat(msg.messageId.sequenceNumber) + "".concat(address.toLowerCase()).concat(msg.messageId.msgChainId).concat(prev).concat(msg.getSerializedContent());
      }

      if (signatureType === SIGNATURE_TYPES.ETH_LEGACY) {
        // verification of messages signed by old clients
        return "".concat(msg.getStreamId()).concat(msg.getTimestamp()).concat(msg.getPublisherId().toLowerCase()).concat(msg.getSerializedContent());
      }

      throw new Error("Unrecognized signature type: ".concat(signatureType));
    }
  }, {
    key: "verifySignature",
    value: function verifySignature(data, signature, address) {
      var signatureType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : SIGNATURE_TYPES.ETH;

      if (signatureType === SIGNATURE_TYPES.ETH_LEGACY || signatureType === SIGNATURE_TYPES.ETH) {
        return _ethers.ethers.utils.verifyMessage(data, signature).toLowerCase() === address.toLowerCase();
      }

      throw new Error("Unrecognized signature type: ".concat(signatureType));
    }
  }, {
    key: "verifyStreamMessage",
    value: function verifyStreamMessage(msg) {
      var payload = this.getPayloadToSign(msg, msg.getPublisherId(), msg.signatureType);
      var result = this.verifySignature(payload, msg.signature, msg.getPublisherId(), msg.signatureType);
      debug('verifyStreamMessage: pass: %o, message: %o', result, msg);
      return result;
    }
  }, {
    key: "createSigner",
    value: function createSigner(options, publishWithSignature) {
      if (publishWithSignature === 'never') {
        return undefined;
      }

      if (publishWithSignature === 'auto' && !options.privateKey && !options.provider) {
        return undefined;
      }

      if (publishWithSignature === 'auto' || publishWithSignature === 'always') {
        return new Signer(options);
      }

      throw new Error("Unknown parameter value: ".concat(publishWithSignature));
    }
  }]);
  return Signer;
}();

exports["default"] = Signer;
module.exports = exports.default;

/***/ }),
/* 26 */
/***/ (function(module, exports) {

module.exports = require("node-fetch");

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(2));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(3));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(1));

var _createClass2 = _interopRequireDefault(__webpack_require__(4));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(5));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(6));

var _inherits2 = _interopRequireDefault(__webpack_require__(7));

var _debug = _interopRequireDefault(__webpack_require__(8));

var _AbstractSubscription2 = _interopRequireDefault(__webpack_require__(22));

var debug = (0, _debug["default"])('StreamrClient::Subscription');

var RealTimeSubscription =
/*#__PURE__*/
function (_AbstractSubscription) {
  (0, _inherits2["default"])(RealTimeSubscription, _AbstractSubscription);

  function RealTimeSubscription(streamId, streamPartition, callback, groupKeys, propagationTimeout, resendTimeout) {
    var _this;

    var orderMessages = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : true;
    (0, _classCallCheck2["default"])(this, RealTimeSubscription);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(RealTimeSubscription).call(this, streamId, streamPartition, callback, groupKeys, propagationTimeout, resendTimeout, orderMessages));
    _this.resending = false;
    return _this;
  } // All the handle* methods should:
  // - return a promise for consistency
  // - swallow exceptions and emit them as 'error' events


  (0, _createClass2["default"])(RealTimeSubscription, [{
    key: "handleBroadcastMessage",
    value: function () {
      var _handleBroadcastMessage = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee(msg, verifyFn) {
        var _this2 = this;

        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", this._catchAndEmitErrors(function () {
                  return _this2._handleMessage(msg, verifyFn);
                }));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function handleBroadcastMessage(_x, _x2) {
        return _handleBroadcastMessage.apply(this, arguments);
      }

      return handleBroadcastMessage;
    }()
  }, {
    key: "finishResend",
    value: function finishResend() {
      this.setResending(false);
    }
    /* eslint-disable class-methods-use-this */

  }, {
    key: "hasResendOptions",
    value: function hasResendOptions() {
      return false;
    }
  }, {
    key: "getResendOptions",
    value: function getResendOptions() {
      return {};
    }
    /* eslint-enable class-methods-use-this */

  }, {
    key: "isResending",
    value: function isResending() {
      return this.resending;
    }
  }, {
    key: "setResending",
    value: function setResending(resending) {
      debug("Subscription: Stream ".concat(this.streamId, " resending: ").concat(resending));
      this.resending = resending;
    }
  }]);
  return RealTimeSubscription;
}(_AbstractSubscription2["default"]);

exports["default"] = RealTimeSubscription;
module.exports = exports.default;

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(18);

var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(15));

var _StreamrClient = _interopRequireDefault(__webpack_require__(29));

var StreamEndpoints = _interopRequireWildcard(__webpack_require__(48));

var LoginEndpoints = _interopRequireWildcard(__webpack_require__(51));

var CommunityEndpoints = _interopRequireWildcard(__webpack_require__(52));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

// Mixin the rest endpoints to the StreamrClient
Object.assign(_StreamrClient["default"].prototype, _objectSpread({}, StreamEndpoints, {}, LoginEndpoints, {}, CommunityEndpoints));
var _default = _StreamrClient["default"];
exports["default"] = _default;
module.exports = exports.default;

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _typeof2 = _interopRequireDefault(__webpack_require__(19));

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(30));

var _regenerator = _interopRequireDefault(__webpack_require__(2));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(3));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(1));

var _createClass2 = _interopRequireDefault(__webpack_require__(4));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(5));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(6));

var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(11));

var _inherits2 = _interopRequireDefault(__webpack_require__(7));

var _eventemitter = _interopRequireDefault(__webpack_require__(12));

var _debug = _interopRequireDefault(__webpack_require__(8));

var _qs = _interopRequireDefault(__webpack_require__(20));

var _once = _interopRequireDefault(__webpack_require__(31));

var _ethers = __webpack_require__(10);

var _streamrClientProtocol = __webpack_require__(9);

var _HistoricalSubscription = _interopRequireDefault(__webpack_require__(21));

var _Connection = _interopRequireDefault(__webpack_require__(35));

var _Session = _interopRequireDefault(__webpack_require__(37));

var _Signer = _interopRequireDefault(__webpack_require__(25));

var _SubscribedStreamPartition = _interopRequireDefault(__webpack_require__(38));

var _Stream = _interopRequireDefault(__webpack_require__(17));

var _FailedToPublishError = _interopRequireDefault(__webpack_require__(40));

var _MessageCreationUtil = _interopRequireDefault(__webpack_require__(41));

var _utils = __webpack_require__(44);

var _RealTimeSubscription = _interopRequireDefault(__webpack_require__(27));

var _CombinedSubscription = _interopRequireDefault(__webpack_require__(45));

var _Subscription = _interopRequireDefault(__webpack_require__(16));

var _ResendUtil = _interopRequireDefault(__webpack_require__(47));

var BroadcastMessage = _streamrClientProtocol.ControlLayer.BroadcastMessage,
    UnicastMessage = _streamrClientProtocol.ControlLayer.UnicastMessage,
    SubscribeRequest = _streamrClientProtocol.ControlLayer.SubscribeRequest,
    SubscribeResponse = _streamrClientProtocol.ControlLayer.SubscribeResponse,
    UnsubscribeRequest = _streamrClientProtocol.ControlLayer.UnsubscribeRequest,
    UnsubscribeResponse = _streamrClientProtocol.ControlLayer.UnsubscribeResponse,
    ResendResponseResending = _streamrClientProtocol.ControlLayer.ResendResponseResending,
    ResendResponseNoResend = _streamrClientProtocol.ControlLayer.ResendResponseNoResend,
    ResendResponseResent = _streamrClientProtocol.ControlLayer.ResendResponseResent,
    ResendLastRequest = _streamrClientProtocol.ControlLayer.ResendLastRequest,
    ResendFromRequest = _streamrClientProtocol.ControlLayer.ResendFromRequest,
    ResendRangeRequest = _streamrClientProtocol.ControlLayer.ResendRangeRequest,
    ErrorResponse = _streamrClientProtocol.ControlLayer.ErrorResponse,
    ControlMessage = _streamrClientProtocol.ControlLayer.ControlMessage;
var StreamMessage = _streamrClientProtocol.MessageLayer.StreamMessage;
var debug = (0, _debug["default"])('StreamrClient');

var StreamrClient =
/*#__PURE__*/
function (_EventEmitter) {
  (0, _inherits2["default"])(StreamrClient, _EventEmitter);

  function StreamrClient(options, connection) {
    var _this;

    (0, _classCallCheck2["default"])(this, StreamrClient);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(StreamrClient).call(this)); // Default options

    _this.options = {
      // The server to connect to
      url: 'wss://streamr.network/api/v1/ws',
      restUrl: 'https://streamr.network/api/v1',
      // Automatically connect on first subscribe
      autoConnect: true,
      // Automatically disconnect on last unsubscribe
      autoDisconnect: true,
      orderMessages: true,
      auth: {},
      publishWithSignature: 'auto',
      verifySignatures: 'auto',
      retryResendAfter: 5000,
      gapFillTimeout: 5000,
      maxPublishQueueSize: 10000,
      publisherGroupKeys: {},
      // {streamId: groupKey}
      subscriberGroupKeys: {},
      // {streamId: {publisherId: groupKey}}
      streamrNodeAddress: '0xf3E5A65851C3779f468c9EcB32E6f25D9D68601a',
      streamrOperatorAddress: '0xc0aa4dC0763550161a6B59fa430361b5a26df28C',
      tokenAddress: '0x0Cf0Ee63788A0849fE5297F3407f701E122cC023'
    };
    _this.subscribedStreamPartitions = {};
    Object.assign(_this.options, options || {});

    var parts = _this.options.url.split('?');

    if (parts.length === 1) {
      // there is no query string
      var controlLayer = "controlLayerVersion=".concat(ControlMessage.LATEST_VERSION);
      var messageLayer = "messageLayerVersion=".concat(StreamMessage.LATEST_VERSION);
      _this.options.url = "".concat(_this.options.url, "?").concat(controlLayer, "&").concat(messageLayer);
    } else {
      var queryObj = _qs["default"].parse(parts[1]);

      if (!queryObj.controlLayerVersion) {
        _this.options.url = "".concat(_this.options.url, "&controlLayerVersion=1");
      }

      if (!queryObj.messageLayerVersion) {
        _this.options.url = "".concat(_this.options.url, "&messageLayerVersion=31");
      }
    } // Backwards compatibility for option 'authKey' => 'apiKey'


    if (_this.options.authKey && !_this.options.apiKey) {
      _this.options.apiKey = _this.options.authKey;
    }

    if (_this.options.apiKey) {
      _this.options.auth.apiKey = _this.options.apiKey;
    }

    if (_this.options.auth.privateKey && !_this.options.auth.privateKey.startsWith('0x')) {
      _this.options.auth.privateKey = "0x".concat(_this.options.auth.privateKey);
    }

    _this.publishQueue = [];
    _this.session = new _Session["default"]((0, _assertThisInitialized2["default"])(_this), _this.options.auth);
    _this.signer = _Signer["default"].createSigner(_this.options.auth, _this.options.publishWithSignature); // Event handling on connection object

    _this.connection = connection || new _Connection["default"](_this.options);

    if (_this.session.isUnauthenticated()) {
      _this.msgCreationUtil = null;
    } else {
      _this.msgCreationUtil = new _MessageCreationUtil["default"](_this.options.auth, _this.signer, _this.getUserInfo()["catch"](function (err) {
        return _this.emit('error', err);
      }), function (streamId) {
        return _this.getStream(streamId)["catch"](function (err) {
          return _this.emit('error', err);
        });
      }, _this.options.publisherGroupKeys);
    }

    _this.resendUtil = new _ResendUtil["default"]();

    _this.resendUtil.on('error', function (err) {
      return _this.emit('error', err);
    });

    _this.on('error', function (error) {
      console.error(error);

      _this.ensureDisconnected();
    }); // Broadcast messages to all subs listening on stream-partition


    _this.connection.on(BroadcastMessage.TYPE, function (msg) {
      var stream = _this._getSubscribedStreamPartition(msg.streamMessage.getStreamId(), msg.streamMessage.getStreamPartition());

      if (stream) {
        var verifyFn = (0, _once["default"])(function () {
          return stream.verifyStreamMessage(msg.streamMessage);
        }); // ensure verification occurs only once
        // sub.handleBroadcastMessage never rejects: on any error it emits an 'error' event on the Subscription

        stream.getSubscriptions().forEach(function (sub) {
          return sub.handleBroadcastMessage(msg.streamMessage, verifyFn);
        });
      } else {
        debug('WARN: message received for stream with no subscriptions: %s', msg.streamMessage.getStreamId());
      }
    }); // Unicast messages to a specific subscription only


    _this.connection.on(UnicastMessage.TYPE,
    /*#__PURE__*/
    function () {
      var _ref = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee(msg) {
        var stream, sub;
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                stream = _this._getSubscribedStreamPartition(msg.streamMessage.getStreamId(), msg.streamMessage.getStreamPartition());

                if (stream) {
                  sub = _this.resendUtil.getSubFromResendResponse(msg);

                  if (sub && stream.getSubscription(sub.id)) {
                    // sub.handleResentMessage never rejects: on any error it emits an 'error' event on the Subscription
                    sub.handleResentMessage(msg.streamMessage, msg.requestId, (0, _once["default"])(function () {
                      return stream.verifyStreamMessage(msg.streamMessage);
                    }) // ensure verification occurs only once
                    );
                  } else {
                    debug('WARN: request id not found for stream: %s, sub: %s', msg.streamMessage.getStreamId(), msg.requestId);
                  }
                } else {
                  debug('WARN: message received for stream with no subscriptions: %s', msg.streamMessage.getStreamId());
                }

              case 2:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }());

    _this.connection.on(SubscribeResponse.TYPE, function (response) {
      var stream = _this._getSubscribedStreamPartition(response.streamId, response.streamPartition);

      if (stream) {
        stream.setSubscribing(false);
        stream.getSubscriptions().filter(function (sub) {
          return !sub.resending;
        }).forEach(function (sub) {
          return sub.setState(_Subscription["default"].State.subscribed);
        });
      }

      debug('Client subscribed: streamId: %s, streamPartition: %s', response.streamId, response.streamPartition);
    });

    _this.connection.on(UnsubscribeResponse.TYPE, function (response) {
      debug('Client unsubscribed: streamId: %s, streamPartition: %s', response.streamId, response.streamPartition);

      var stream = _this._getSubscribedStreamPartition(response.streamId, response.streamPartition);

      if (stream) {
        stream.getSubscriptions().forEach(function (sub) {
          _this._removeSubscription(sub);

          sub.setState(_Subscription["default"].State.unsubscribed);
        });
      }

      _this._checkAutoDisconnect();
    }); // Route resending state messages to corresponding Subscriptions


    _this.connection.on(ResendResponseResending.TYPE, function (response) {
      var stream = _this._getSubscribedStreamPartition(response.streamId, response.streamPartition);

      var sub = _this.resendUtil.getSubFromResendResponse(response);

      if (stream && sub && stream.getSubscription(sub.id)) {
        stream.getSubscription(sub.id).handleResending(response);
      } else {
        debug('resent: Subscription %s is gone already', response.requestId);
      }
    });

    _this.connection.on(ResendResponseNoResend.TYPE, function (response) {
      var stream = _this._getSubscribedStreamPartition(response.streamId, response.streamPartition);

      var sub = _this.resendUtil.getSubFromResendResponse(response);

      _this.resendUtil.deleteDoneSubsByResponse(response);

      if (stream && sub && stream.getSubscription(sub.id)) {
        stream.getSubscription(sub.id).handleNoResend(response);
      } else {
        debug('resent: Subscription %s is gone already', response.requestId);
      }
    });

    _this.connection.on(ResendResponseResent.TYPE, function (response) {
      var stream = _this._getSubscribedStreamPartition(response.streamId, response.streamPartition);

      var sub = _this.resendUtil.getSubFromResendResponse(response);

      _this.resendUtil.deleteDoneSubsByResponse(response);

      if (stream && sub && stream.getSubscription(sub.id)) {
        stream.getSubscription(sub.id).handleResent(response);
      } else {
        debug('resent: Subscription %s is gone already', response.requestId);
      }
    }); // On connect/reconnect, send pending subscription requests


    _this.connection.on('connected', function () {
      debug('Connected!');

      _this.emit('connected'); // Check pending subscriptions


      Object.keys(_this.subscribedStreamPartitions).forEach(function (key) {
        _this.subscribedStreamPartitions[key].getSubscriptions().forEach(function (sub) {
          if (sub.getState() !== _Subscription["default"].State.subscribed) {
            _this._resendAndSubscribe(sub);
          }
        });
      }); // Check pending publish requests

      var publishQueueCopy = _this.publishQueue.slice(0);

      _this.publishQueue = [];
      publishQueueCopy.forEach(function (publishFn) {
        return publishFn();
      });
    });

    _this.connection.on('disconnected', function () {
      debug('Disconnected.');

      _this.emit('disconnected');

      Object.keys(_this.subscribedStreamPartitions).forEach(function (key) {
        var stream = _this.subscribedStreamPartitions[key];
        stream.setSubscribing(false);
        stream.getSubscriptions().forEach(function (sub) {
          sub.setState(_Subscription["default"].State.unsubscribed);
        });
      });
    });

    _this.connection.on(ErrorResponse.TYPE, function (err) {
      var errorObject = new Error(err.errorMessage);

      _this.emit('error', errorObject);

      console.error(errorObject);
    });

    _this.connection.on('error', function (err) {
      // If there is an error parsing a json message in a stream, fire error events on the relevant subs
      if (err instanceof _streamrClientProtocol.Errors.InvalidJsonError) {
        var stream = _this._getSubscribedStreamPartition(err.streamMessage.getStreamId(), err.streamMessage.getStreamPartition());

        if (stream) {
          stream.getSubscriptions().forEach(function (sub) {
            return sub.handleError(err);
          });
        } else {
          debug('WARN: InvalidJsonError received for stream with no subscriptions: %s', err.streamId);
        }
      } else {
        // if it looks like an error emit as-is, otherwise wrap in new Error
        var errorObject = err && err.stack && err.message ? err : new Error(err);

        _this.emit('error', errorObject);

        console.error(errorObject);
      }
    });

    return _this;
  }

  (0, _createClass2["default"])(StreamrClient, [{
    key: "_getSubscribedStreamPartition",
    value: function _getSubscribedStreamPartition(streamId, streamPartition) {
      var key = streamId + streamPartition;
      return this.subscribedStreamPartitions[key];
    }
  }, {
    key: "_getSubscribedStreamPartitionsForStream",
    value: function _getSubscribedStreamPartitionsForStream(streamId) {
      // TODO: pretty crude method, could improve
      return Object.values(this.subscribedStreamPartitions).filter(function (stream) {
        return stream.streamId === streamId;
      });
    }
  }, {
    key: "_addSubscribedStreamPartition",
    value: function _addSubscribedStreamPartition(subscribedStreamPartition) {
      var key = subscribedStreamPartition.streamId + subscribedStreamPartition.streamPartition;
      this.subscribedStreamPartitions[key] = subscribedStreamPartition;
    }
  }, {
    key: "_deleteSubscribedStreamPartition",
    value: function _deleteSubscribedStreamPartition(subscribedStreamPartition) {
      var key = subscribedStreamPartition.streamId + subscribedStreamPartition.streamPartition;
      delete this.subscribedStreamPartitions[key];
    }
  }, {
    key: "_addSubscription",
    value: function _addSubscription(sub) {
      var sp = this._getSubscribedStreamPartition(sub.streamId, sub.streamPartition);

      if (!sp) {
        sp = new _SubscribedStreamPartition["default"](this, sub.streamId, sub.streamPartition);

        this._addSubscribedStreamPartition(sp);
      }

      sp.addSubscription(sub);
    }
  }, {
    key: "_removeSubscription",
    value: function _removeSubscription(sub) {
      var sp = this._getSubscribedStreamPartition(sub.streamId, sub.streamPartition);

      if (sp) {
        sp.removeSubscription(sub);

        if (sp.getSubscriptions().length === 0) {
          this._deleteSubscribedStreamPartition(sp);
        }
      }
    }
  }, {
    key: "getSubscriptions",
    value: function getSubscriptions(streamId, streamPartition) {
      var subs = [];

      if (streamPartition) {
        var sp = this._getSubscribedStreamPartition(streamId, streamPartition);

        if (sp) {
          subs = sp.getSubscriptions();
        }
      } else {
        var sps = this._getSubscribedStreamPartitionsForStream(streamId);

        sps.forEach(function (sp) {
          return sp.getSubscriptions().forEach(function (sub) {
            return subs.push(sub);
          });
        });
      }

      return subs;
    }
  }, {
    key: "publish",
    value: function () {
      var _publish = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee3(streamObjectOrId, data) {
        var _this2 = this;

        var timestamp,
            partitionKey,
            groupKey,
            streamId,
            timestampAsNumber,
            _ref2,
            _ref3,
            sessionToken,
            streamMessage,
            published,
            _args3 = arguments;

        return _regenerator["default"].wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                timestamp = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : new Date();
                partitionKey = _args3.length > 3 && _args3[3] !== undefined ? _args3[3] : null;
                groupKey = _args3.length > 4 ? _args3[4] : undefined;

                if (!this.session.isUnauthenticated()) {
                  _context3.next = 5;
                  break;
                }

                throw new Error('Need to be authenticated to publish.');

              case 5:
                if (!(streamObjectOrId instanceof _Stream["default"])) {
                  _context3.next = 9;
                  break;
                }

                streamId = streamObjectOrId.id;
                _context3.next = 14;
                break;

              case 9:
                if (!(typeof streamObjectOrId === 'string')) {
                  _context3.next = 13;
                  break;
                }

                streamId = streamObjectOrId;
                _context3.next = 14;
                break;

              case 13:
                throw new Error("First argument must be a Stream object or the stream id! Was: ".concat(streamObjectOrId));

              case 14:
                timestampAsNumber = timestamp instanceof Date ? timestamp.getTime() : new Date(timestamp).getTime();
                _context3.next = 17;
                return Promise.all([this.session.getSessionToken(), this.msgCreationUtil.createStreamMessage(streamObjectOrId, data, timestampAsNumber, partitionKey, groupKey)]);

              case 17:
                _ref2 = _context3.sent;
                _ref3 = (0, _slicedToArray2["default"])(_ref2, 2);
                sessionToken = _ref3[0];
                streamMessage = _ref3[1];

                if (!this.isConnected()) {
                  _context3.next = 23;
                  break;
                }

                return _context3.abrupt("return", this._requestPublish(streamMessage, sessionToken));

              case 23:
                if (!this.options.autoConnect) {
                  _context3.next = 30;
                  break;
                }

                if (!(this.publishQueue.length >= this.options.maxPublishQueueSize)) {
                  _context3.next = 26;
                  break;
                }

                throw new _FailedToPublishError["default"](streamId, data, "publishQueue exceeded maxPublishQueueSize=".concat(this.options.maxPublishQueueSize));

              case 26:
                published = new Promise(function (resolve, reject) {
                  _this2.publishQueue.push(
                  /*#__PURE__*/
                  (0, _asyncToGenerator2["default"])(
                  /*#__PURE__*/
                  _regenerator["default"].mark(function _callee2() {
                    var publishRequest;
                    return _regenerator["default"].wrap(function _callee2$(_context2) {
                      while (1) {
                        switch (_context2.prev = _context2.next) {
                          case 0:
                            _context2.prev = 0;
                            _context2.next = 3;
                            return _this2._requestPublish(streamMessage, sessionToken);

                          case 3:
                            publishRequest = _context2.sent;
                            _context2.next = 12;
                            break;

                          case 6:
                            _context2.prev = 6;
                            _context2.t0 = _context2["catch"](0);
                            debug("Error: ".concat(_context2.t0));

                            _this2.emit('error', _context2.t0);

                            reject(_context2.t0);
                            return _context2.abrupt("return");

                          case 12:
                            resolve(publishRequest);

                          case 13:
                          case "end":
                            return _context2.stop();
                        }
                      }
                    }, _callee2, null, [[0, 6]]);
                  })));
                }); // be sure to trigger connection *after* queueing publish

                _context3.next = 29;
                return this.ensureConnected();

              case 29:
                return _context3.abrupt("return", published);

              case 30:
                throw new _FailedToPublishError["default"](streamId, data, 'Wait for the "connected" event before calling publish, or set autoConnect to true!');

              case 31:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function publish(_x2, _x3) {
        return _publish.apply(this, arguments);
      }

      return publish;
    }()
  }, {
    key: "resend",
    value: function () {
      var _resend = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee4(optionsOrStreamId, callback) {
        var options, sub;
        return _regenerator["default"].wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                options = this._validateParameters(optionsOrStreamId, callback);

                if (options.stream) {
                  _context4.next = 3;
                  break;
                }

                throw new Error('subscribe: Invalid arguments: options.stream is not given');

              case 3:
                _context4.next = 5;
                return this.ensureConnected();

              case 5:
                sub = new _HistoricalSubscription["default"](options.stream, options.partition || 0, callback, options.resend, this.options.subscriberGroupKeys[options.stream], this.options.gapFillTimeout, this.options.retryResendAfter, this.options.orderMessages); // TODO remove _addSubscription after uncoupling Subscription and Resend

                this._addSubscription(sub);

                _context4.next = 9;
                return this._requestResend(sub);

              case 9:
                return _context4.abrupt("return", sub);

              case 10:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function resend(_x4, _x5) {
        return _resend.apply(this, arguments);
      }

      return resend;
    }() // eslint-disable-next-line class-methods-use-this

  }, {
    key: "_validateParameters",
    value: function _validateParameters(optionsOrStreamId, callback) {
      if (!optionsOrStreamId) {
        throw new Error('subscribe/resend: Invalid arguments: options is required!');
      } else if (!callback) {
        throw new Error('subscribe/resend: Invalid arguments: callback is required!');
      } // Backwards compatibility for giving a streamId as first argument


      var options;

      if (typeof optionsOrStreamId === 'string') {
        options = {
          stream: optionsOrStreamId
        };
      } else if ((0, _typeof2["default"])(optionsOrStreamId) === 'object') {
        options = optionsOrStreamId;
      } else {
        throw new Error("subscribe/resend: options must be an object! Given: ".concat(optionsOrStreamId));
      }

      return options;
    }
  }, {
    key: "subscribe",
    value: function subscribe(optionsOrStreamId, callback, legacyOptions) {
      var _this3 = this;

      var options = this._validateParameters(optionsOrStreamId, callback); // Backwards compatibility for giving an options object as third argument


      Object.assign(options, legacyOptions);

      if (!options.stream) {
        throw new Error('subscribe: Invalid arguments: options.stream is not given');
      }

      if (options.groupKeys) {
        this.options.subscriberGroupKeys[options.stream] = options.groupKeys;
      } // Create the Subscription object and bind handlers


      var sub;

      if (options.resend) {
        sub = new _CombinedSubscription["default"](options.stream, options.partition || 0, callback, options.resend, this.options.subscriberGroupKeys[options.stream], this.options.gapFillTimeout, this.options.retryResendAfter, this.options.orderMessages);
      } else {
        sub = new _RealTimeSubscription["default"](options.stream, options.partition || 0, callback, this.options.subscriberGroupKeys[options.stream], this.options.gapFillTimeout, this.options.retryResendAfter, this.options.orderMessages);
      }

      sub.on('gap', function (from, to, publisherId, msgChainId) {
        if (!sub.resending) {
          _this3._requestResend(sub, {
            from: from,
            to: to,
            publisherId: publisherId,
            msgChainId: msgChainId
          });
        }
      });
      sub.on('done', function () {
        debug('done event for sub %d', sub.id);

        _this3.unsubscribe(sub);
      }); // Add to lookups

      this._addSubscription(sub); // If connected, emit a subscribe request


      if (this.isConnected()) {
        this._resendAndSubscribe(sub);
      } else if (this.options.autoConnect) {
        this.ensureConnected();
      }

      return sub;
    }
  }, {
    key: "unsubscribe",
    value: function unsubscribe(sub) {
      if (!sub || !sub.streamId) {
        throw new Error('unsubscribe: please give a Subscription object as an argument!');
      }

      var sp = this._getSubscribedStreamPartition(sub.streamId, sub.streamPartition); // If this is the last subscription for this stream-partition, unsubscribe the client too


      if (sp && sp.getSubscriptions().length === 1 && this.isConnected() && sub.getState() === _Subscription["default"].State.subscribed) {
        sub.setState(_Subscription["default"].State.unsubscribing);

        this._requestUnsubscribe(sub);
      } else if (sub.getState() !== _Subscription["default"].State.unsubscribing && sub.getState() !== _Subscription["default"].State.unsubscribed) {
        // Else the sub can be cleaned off immediately
        this._removeSubscription(sub);

        sub.setState(_Subscription["default"].State.unsubscribed);

        this._checkAutoDisconnect();
      }
    }
  }, {
    key: "unsubscribeAll",
    value: function unsubscribeAll(streamId, streamPartition) {
      var _this4 = this;

      if (!streamId) {
        throw new Error('unsubscribeAll: a stream id is required!');
      } else if (typeof streamId !== 'string') {
        throw new Error('unsubscribe: stream id must be a string!');
      }

      var streamPartitions = []; // Unsubscribe all subs for the given stream-partition

      if (streamPartition) {
        var sp = this._getSubscribedStreamPartition(streamId, streamPartition);

        if (sp) {
          streamPartitions = [sp];
        }
      } else {
        streamPartitions = this._getSubscribedStreamPartitionsForStream(streamId);
      }

      streamPartitions.forEach(function (sp) {
        sp.getSubscriptions().forEach(function (sub) {
          _this4.unsubscribe(sub);
        });
      });
    }
  }, {
    key: "isConnected",
    value: function isConnected() {
      return this.connection.state === _Connection["default"].State.CONNECTED;
    }
  }, {
    key: "isConnecting",
    value: function isConnecting() {
      return this.connection.state === _Connection["default"].State.CONNECTING;
    }
  }, {
    key: "isDisconnecting",
    value: function isDisconnecting() {
      return this.connection.state === _Connection["default"].State.DISCONNECTING;
    }
  }, {
    key: "isDisconnected",
    value: function isDisconnected() {
      return this.connection.state === _Connection["default"].State.DISCONNECTED;
    }
  }, {
    key: "reconnect",
    value: function reconnect() {
      return this.connect();
    }
  }, {
    key: "connect",
    value: function connect() {
      if (this.isConnected()) {
        return Promise.reject(new Error('Already connected!'));
      }

      if (this.connection.state === _Connection["default"].State.CONNECTING) {
        return Promise.reject(new Error('Already connecting!'));
      }

      debug('Connecting to %s', this.options.url);
      return this.connection.connect();
    }
  }, {
    key: "pause",
    value: function pause() {
      return this.connection.disconnect();
    }
  }, {
    key: "disconnect",
    value: function disconnect() {
      if (this.msgCreationUtil) {
        this.msgCreationUtil.stop();
      }

      this.subscribedStreamPartitions = {};
      return this.connection.disconnect();
    }
  }, {
    key: "logout",
    value: function logout() {
      return this.session.logout();
    }
  }, {
    key: "getPublisherId",
    value: function getPublisherId() {
      return this.msgCreationUtil.getPublisherId();
    }
    /**
     * Starts new connection if disconnected.
     * Waits for connection if connecting.
     * No-op if already connected.
     */

  }, {
    key: "ensureConnected",
    value: function () {
      var _ensureConnected = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee5() {
        var _this5 = this;

        return _regenerator["default"].wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                if (!this.isConnected()) {
                  _context5.next = 2;
                  break;
                }

                return _context5.abrupt("return", Promise.resolve());

              case 2:
                if (!this.isConnecting()) {
                  this.connect()["catch"](function (err) {
                    return _this5.emit('error', err);
                  });
                }

                return _context5.abrupt("return", (0, _utils.waitFor)(this, 'connected'));

              case 4:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function ensureConnected() {
        return _ensureConnected.apply(this, arguments);
      }

      return ensureConnected;
    }()
    /**
     * Starts disconnection if connected.
     * Waits for disconnection if disconnecting.
     * No-op if already disconnected.
     */

  }, {
    key: "ensureDisconnected",
    value: function () {
      var _ensureDisconnected = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee6() {
        return _regenerator["default"].wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                if (!this.isDisconnected()) {
                  _context6.next = 2;
                  break;
                }

                return _context6.abrupt("return", Promise.resolve());

              case 2:
                if (!this.isDisconnecting()) {
                  _context6.next = 4;
                  break;
                }

                return _context6.abrupt("return", (0, _utils.waitFor)(this, 'disconnected'));

              case 4:
                return _context6.abrupt("return", this.disconnect());

              case 5:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function ensureDisconnected() {
        return _ensureDisconnected.apply(this, arguments);
      }

      return ensureDisconnected;
    }()
  }, {
    key: "_checkAutoDisconnect",
    value: function _checkAutoDisconnect() {
      // Disconnect if no longer subscribed to any streams
      if (this.options.autoDisconnect && Object.keys(this.subscribedStreamPartitions).length === 0) {
        debug('Disconnecting due to no longer being subscribed to any streams');
        this.disconnect();
      }
    }
  }, {
    key: "_resendAndSubscribe",
    value: function _resendAndSubscribe(sub) {
      var _this6 = this;

      if (sub.getState() !== _Subscription["default"].State.subscribing && !sub.resending) {
        sub.setState(_Subscription["default"].State.subscribing);

        this._requestSubscribe(sub); // Once subscribed, ask for a resend


        sub.once('subscribed',
        /*#__PURE__*/
        (0, _asyncToGenerator2["default"])(
        /*#__PURE__*/
        _regenerator["default"].mark(function _callee7() {
          var handler;
          return _regenerator["default"].wrap(function _callee7$(_context7) {
            while (1) {
              switch (_context7.prev = _context7.next) {
                case 0:
                  if (!sub.hasResendOptions()) {
                    _context7.next = 8;
                    break;
                  }

                  _context7.next = 3;
                  return _this6._requestResend(sub);

                case 3:
                  // once a message is received, gap filling in Subscription.js will check if this satisfies the resend and request
                  // another resend if it doesn't. So we can anyway clear this resend request.
                  handler = function handler() {
                    sub.removeListener('initial_resend_done', handler);
                    sub.removeListener('message received', handler);
                    sub.removeListener('unsubscribed', handler);
                    sub.removeListener('error', handler);
                  };

                  sub.once('initial_resend_done', handler);
                  sub.once('message received', handler);
                  sub.once('unsubscribed', handler);
                  sub.once('error', handler);

                case 8:
                case "end":
                  return _context7.stop();
              }
            }
          }, _callee7);
        })));
      }
    }
  }, {
    key: "_requestSubscribe",
    value: function () {
      var _requestSubscribe2 = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee8(sub) {
        var sp, subscribedSubs, sessionToken, request;
        return _regenerator["default"].wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                sp = this._getSubscribedStreamPartition(sub.streamId, sub.streamPartition);
                subscribedSubs = sp.getSubscriptions().filter(function (it) {
                  return it.getState() === _Subscription["default"].State.subscribed;
                });
                _context8.next = 4;
                return this.session.getSessionToken();

              case 4:
                sessionToken = _context8.sent;

                // If this is the first subscription for this stream-partition, send a subscription request to the server
                if (!sp.isSubscribing() && subscribedSubs.length === 0) {
                  request = SubscribeRequest.create(sub.streamId, sub.streamPartition, sessionToken);
                  debug('_requestSubscribe: subscribing client: %o', request);
                  sp.setSubscribing(true);
                  this.connection.send(request);
                } else if (subscribedSubs.length > 0) {
                  // If there already is a subscribed subscription for this stream, this new one will just join it immediately
                  debug('_requestSubscribe: another subscription for same stream: %s, insta-subscribing', sub.streamId);
                  setTimeout(function () {
                    sub.setState(_Subscription["default"].State.subscribed);
                  });
                }

              case 6:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function _requestSubscribe(_x6) {
        return _requestSubscribe2.apply(this, arguments);
      }

      return _requestSubscribe;
    }()
  }, {
    key: "_requestUnsubscribe",
    value: function _requestUnsubscribe(sub) {
      debug('Client unsubscribing stream %o partition %o', sub.streamId, sub.streamPartition);
      this.connection.send(UnsubscribeRequest.create(sub.streamId, sub.streamPartition));
    }
  }, {
    key: "_requestResend",
    value: function () {
      var _requestResend2 = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee9(sub, resendOptions) {
        var requestId, options, sessionToken, request;
        return _regenerator["default"].wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                sub.setResending(true);
                requestId = this.resendUtil.registerResendRequestForSub(sub);
                options = resendOptions || sub.getResendOptions();
                _context9.next = 5;
                return this.session.getSessionToken();

              case 5:
                sessionToken = _context9.sent;

                if (this.isConnected()) {
                  _context9.next = 8;
                  break;
                }

                return _context9.abrupt("return");

              case 8:
                if (options.last > 0) {
                  request = ResendLastRequest.create(sub.streamId, sub.streamPartition, requestId, options.last, sessionToken);
                } else if (options.from && !options.to) {
                  request = ResendFromRequest.create(sub.streamId, sub.streamPartition, requestId, [options.from.timestamp, options.from.sequenceNumber], options.publisherId || null, options.msgChainId || null, sessionToken);
                } else if (options.from && options.to) {
                  request = ResendRangeRequest.create(sub.streamId, sub.streamPartition, requestId, [options.from.timestamp, options.from.sequenceNumber], [options.to.timestamp, options.to.sequenceNumber], options.publisherId || null, options.msgChainId || null, sessionToken);
                }

                if (request) {
                  debug('_requestResend: %o', request);
                  this.connection.send(request);
                } else {
                  this.handleError("Can't _requestResend without resendOptions");
                }

              case 10:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));

      function _requestResend(_x7, _x8) {
        return _requestResend2.apply(this, arguments);
      }

      return _requestResend;
    }()
  }, {
    key: "_requestPublish",
    value: function _requestPublish(streamMessage, sessionToken) {
      var request = _streamrClientProtocol.ControlLayer.PublishRequest.create(streamMessage, sessionToken);

      debug('_requestPublish: %o', request);
      return this.connection.send(request);
    }
  }, {
    key: "handleError",
    value: function handleError(msg) {
      debug(msg);
      this.emit('error', msg);
    }
  }], [{
    key: "generateEthereumAccount",
    value: function generateEthereumAccount() {
      var wallet = _ethers.Wallet.createRandom();

      return {
        address: wallet.address,
        privateKey: wallet.privateKey
      };
    }
  }]);
  return StreamrClient;
}(_eventemitter["default"]);

exports["default"] = StreamrClient;
module.exports = exports.default;

/***/ }),
/* 30 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/slicedToArray");

/***/ }),
/* 31 */
/***/ (function(module, exports) {

module.exports = require("once");

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(1));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(5));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(6));

var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(11));

var _inherits2 = _interopRequireDefault(__webpack_require__(7));

var _wrapNativeSuper2 = _interopRequireDefault(__webpack_require__(13));

var VerificationFailedError =
/*#__PURE__*/
function (_Error) {
  (0, _inherits2["default"])(VerificationFailedError, _Error);

  function VerificationFailedError(streamMessage, cause) {
    var _this;

    (0, _classCallCheck2["default"])(this, VerificationFailedError);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(VerificationFailedError).call(this, "Verification failed for message: ".concat(streamMessage.serialize(), ", cause: ").concat(cause)));
    _this.streamMessage = streamMessage;
    _this.cause = cause;

    if (Error.captureStackTrace) {
      Error.captureStackTrace((0, _assertThisInitialized2["default"])(_this), _this.constructor);
    }

    return _this;
  }

  return VerificationFailedError;
}((0, _wrapNativeSuper2["default"])(Error));

exports["default"] = VerificationFailedError;
module.exports = exports.default;

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(1));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(5));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(6));

var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(11));

var _inherits2 = _interopRequireDefault(__webpack_require__(7));

var _wrapNativeSuper2 = _interopRequireDefault(__webpack_require__(13));

var InvalidSignatureError =
/*#__PURE__*/
function (_Error) {
  (0, _inherits2["default"])(InvalidSignatureError, _Error);

  function InvalidSignatureError(streamMessage) {
    var _this;

    (0, _classCallCheck2["default"])(this, InvalidSignatureError);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(InvalidSignatureError).call(this, "Invalid message signature: ".concat(streamMessage.serialize())));
    _this.streamMessage = streamMessage;

    if (Error.captureStackTrace) {
      Error.captureStackTrace((0, _assertThisInitialized2["default"])(_this), _this.constructor);
    }

    return _this;
  }

  return InvalidSignatureError;
}((0, _wrapNativeSuper2["default"])(Error));

exports["default"] = InvalidSignatureError;
module.exports = exports.default;

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(1));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(5));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(6));

var _inherits2 = _interopRequireDefault(__webpack_require__(7));

var _wrapNativeSuper2 = _interopRequireDefault(__webpack_require__(13));

var UnableToDecryptError =
/*#__PURE__*/
function (_Error) {
  (0, _inherits2["default"])(UnableToDecryptError, _Error);

  function UnableToDecryptError(streamMessage) {
    var _this;

    (0, _classCallCheck2["default"])(this, UnableToDecryptError);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(UnableToDecryptError).call(this, "Unable to decrypt ".concat(streamMessage.getSerializedContent())));
    _this.streamMessage = streamMessage;
    return _this;
  }

  return UnableToDecryptError;
}((0, _wrapNativeSuper2["default"])(Error));

exports["default"] = UnableToDecryptError;
module.exports = exports.default;

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(1));

var _createClass2 = _interopRequireDefault(__webpack_require__(4));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(5));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(6));

var _inherits2 = _interopRequireDefault(__webpack_require__(7));

var _eventemitter = _interopRequireDefault(__webpack_require__(12));

var _debug = _interopRequireDefault(__webpack_require__(8));

var _ws = _interopRequireDefault(__webpack_require__(36));

var _streamrClientProtocol = __webpack_require__(9);

var debug = (0, _debug["default"])('StreamrClient::Connection');

var Connection =
/*#__PURE__*/
function (_EventEmitter) {
  (0, _inherits2["default"])(Connection, _EventEmitter);

  function Connection(options, socket) {
    var _this;

    (0, _classCallCheck2["default"])(this, Connection);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Connection).call(this));

    if (!options.url) {
      throw new Error('URL is not defined!');
    }

    _this.options = options;
    _this.state = Connection.State.DISCONNECTED;
    _this.socket = socket;
    _this._reconnectTimeout = null;
    return _this;
  }

  (0, _createClass2["default"])(Connection, [{
    key: "updateState",
    value: function updateState(state) {
      this.state = state;
      this.emit(state);
    }
  }, {
    key: "connect",
    value: function connect() {
      var _this2 = this;

      if (this.state === Connection.State.CONNECTING) {
        return Promise.reject(new Error('Already connecting!'));
      }

      if (this.state === Connection.State.CONNECTED) {
        return Promise.reject(new Error('Already connected!'));
      }

      if (this.state === Connection.State.DISCONNECTING) {
        return new Promise(function (resolve) {
          _this2.once('disconnected', function () {
            return resolve(_this2.connect());
          });
        });
      }

      if (!this.socket || this.socket.readyState === _ws["default"].CLOSED) {
        try {
          debug('Trying to open new websocket to %s', this.options.url);
          this.socket = new _ws["default"](this.options.url);
        } catch (err) {
          this.emit('error', err);
          debug(err);
          return Promise.reject(err);
        }
      }

      this.socket.binaryType = 'arraybuffer';
      this.socket.events = new _eventemitter["default"]();

      this.socket.onopen = function () {
        return _this2.socket.events.emit('open');
      };

      this.socket.onclose = function () {
        return _this2.socket.events.emit('close');
      };

      this.socket.onerror = function () {
        return _this2.socket.events.emit('error');
      };

      this.updateState(Connection.State.CONNECTING);
      this.socket.events.on('open', function () {
        debug('Connected to ', _this2.options.url);

        _this2.updateState(Connection.State.CONNECTED);
      });
      this.socket.events.on('error', function (err) {
        debug('Error in websocket.');

        if (err) {
          console.error(err);
        }

        _this2.socket.close();
      });
      this.socket.events.on('close', function () {
        if (_this2.state !== Connection.State.DISCONNECTING) {
          debug('Connection lost. Attempting to reconnect');
          clearTimeout(_this2._reconnectTimeout);
          _this2._reconnectTimeout = setTimeout(function () {
            _this2.connect()["catch"](function (err) {
              console.error(err);
            });
          }, 2000);
        }

        _this2.updateState(Connection.State.DISCONNECTED);
      });

      this.socket.onmessage = function (messageEvent) {
        var controlMessage;

        try {
          debug('<< %s', messageEvent.data);
          controlMessage = _streamrClientProtocol.ControlLayer.ControlMessage.deserialize(messageEvent.data);
        } catch (err) {
          _this2.emit('error', err);

          return;
        }

        _this2.emit(controlMessage.type, controlMessage);
      };

      return new Promise(function (resolve) {
        _this2.socket.events.once('open', function () {
          resolve();
        });
      });
    }
  }, {
    key: "disconnect",
    value: function disconnect() {
      var _this3 = this;

      if (this.state === Connection.State.DISCONNECTING) {
        return Promise.reject(new Error('Already disconnecting!'));
      }

      if (this.state === Connection.State.DISCONNECTED) {
        return Promise.reject(new Error('Already disconnected!'));
      }

      if (this.socket === undefined) {
        return Promise.reject(new Error('Something is wrong: socket is undefined!'));
      }

      if (this.state === Connection.State.CONNECTING) {
        return new Promise(function (resolve) {
          _this3.once('connected', function () {
            return resolve(_this3.disconnect()["catch"](function (err) {
              return console.error(err);
            }));
          });
        });
      }

      return new Promise(function (resolve) {
        _this3.updateState(Connection.State.DISCONNECTING);

        _this3.socket.events.once('close', resolve);

        _this3.socket.close();
      });
    }
  }, {
    key: "send",
    value: function send(controlLayerRequest) {
      try {
        var serialized = controlLayerRequest.serialize();
        debug('>> %s', serialized);
        this.socket.send(serialized);
      } catch (err) {
        this.emit('error', err);
      }

      return controlLayerRequest;
    }
  }]);
  return Connection;
}(_eventemitter["default"]);

Connection.State = {
  DISCONNECTED: 'disconnected',
  CONNECTING: 'connecting',
  CONNECTED: 'connected',
  DISCONNECTING: 'disconnecting'
};
var _default = Connection;
exports["default"] = _default;
module.exports = exports.default;

/***/ }),
/* 36 */
/***/ (function(module, exports) {

module.exports = require("ws");

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(2));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(3));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(1));

var _createClass2 = _interopRequireDefault(__webpack_require__(4));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(5));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(6));

var _inherits2 = _interopRequireDefault(__webpack_require__(7));

var _eventemitter = _interopRequireDefault(__webpack_require__(12));

var _ethers = __webpack_require__(10);

var Session =
/*#__PURE__*/
function (_EventEmitter) {
  (0, _inherits2["default"])(Session, _EventEmitter);

  function Session(client, options) {
    var _this;

    (0, _classCallCheck2["default"])(this, Session);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Session).call(this));
    _this._client = client;
    _this.options = options || {};
    _this.state = Session.State.LOGGED_OUT;

    if (typeof _this.options.privateKey !== 'undefined') {
      var wallet = new _ethers.ethers.Wallet(_this.options.privateKey);
      _this.loginFunction =
      /*#__PURE__*/
      (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee() {
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", _this._client.loginWithChallengeResponse(function (d) {
                  return wallet.signMessage(d);
                }, wallet.address));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));
    } else if (typeof _this.options.provider !== 'undefined') {
      var provider = new _ethers.ethers.providers.Web3Provider(_this.options.provider);
      var signer = provider.getSigner();
      _this.loginFunction =
      /*#__PURE__*/
      (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee2() {
        return _regenerator["default"].wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.t0 = _this._client;

                _context2.t1 = function (d) {
                  return signer.signMessage(d);
                };

                _context2.next = 4;
                return signer.getAddress();

              case 4:
                _context2.t2 = _context2.sent;
                return _context2.abrupt("return", _context2.t0.loginWithChallengeResponse.call(_context2.t0, _context2.t1, _context2.t2));

              case 6:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));
    } else if (typeof _this.options.apiKey !== 'undefined') {
      _this.loginFunction =
      /*#__PURE__*/
      (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee3() {
        return _regenerator["default"].wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                return _context3.abrupt("return", _this._client.loginWithApiKey(_this.options.apiKey));

              case 1:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));
    } else if (typeof _this.options.username !== 'undefined' && typeof _this.options.password !== 'undefined') {
      _this.loginFunction =
      /*#__PURE__*/
      (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee4() {
        return _regenerator["default"].wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                return _context4.abrupt("return", _this._client.loginWithUsernamePassword(_this.options.username, _this.options.password));

              case 1:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));
    } else {
      if (!_this.options.sessionToken) {
        _this.options.unauthenticated = true;
      }

      _this.loginFunction =
      /*#__PURE__*/
      (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee5() {
        return _regenerator["default"].wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                throw new Error('Need either "privateKey", "provider", "apiKey", "username"+"password" or "sessionToken" to login.');

              case 1:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }));
    }

    return _this;
  }

  (0, _createClass2["default"])(Session, [{
    key: "isUnauthenticated",
    value: function isUnauthenticated() {
      return this.options.unauthenticated;
    }
  }, {
    key: "updateState",
    value: function updateState(newState) {
      this.state = newState;
      this.emit(newState);
    }
  }, {
    key: "getSessionToken",
    value: function () {
      var _getSessionToken = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee6() {
        var _this2 = this;

        var requireNewToken,
            _args6 = arguments;
        return _regenerator["default"].wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                requireNewToken = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : false;

                if (!(this.options.sessionToken && !requireNewToken)) {
                  _context6.next = 3;
                  break;
                }

                return _context6.abrupt("return", this.options.sessionToken);

              case 3:
                if (!this.options.unauthenticated) {
                  _context6.next = 5;
                  break;
                }

                return _context6.abrupt("return", undefined);

              case 5:
                if (this.state !== Session.State.LOGGING_IN) {
                  if (this.state === Session.State.LOGGING_OUT) {
                    this.sessionTokenPromise = new Promise(function (resolve) {
                      _this2.once(Session.State.LOGGED_OUT, function () {
                        return resolve(_this2.getSessionToken(requireNewToken));
                      });
                    });
                  } else {
                    this.updateState(Session.State.LOGGING_IN);
                    this.sessionTokenPromise = this.loginFunction().then(function (tokenObj) {
                      _this2.options.sessionToken = tokenObj.token;

                      _this2.updateState(Session.State.LOGGED_IN);

                      return tokenObj.token;
                    })["catch"](function (err) {
                      _this2.updateState(Session.State.LOGGED_OUT);

                      throw err;
                    });
                  }
                }

                return _context6.abrupt("return", this.sessionTokenPromise);

              case 7:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function getSessionToken() {
        return _getSessionToken.apply(this, arguments);
      }

      return getSessionToken;
    }()
  }, {
    key: "logout",
    value: function () {
      var _logout = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee7() {
        var _this3 = this;

        return _regenerator["default"].wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                if (!(this.state === Session.State.LOGGED_OUT)) {
                  _context7.next = 2;
                  break;
                }

                return _context7.abrupt("return", Promise.reject(new Error('Already logged out!')));

              case 2:
                if (!(this.state === Session.State.LOGGING_OUT)) {
                  _context7.next = 4;
                  break;
                }

                return _context7.abrupt("return", Promise.reject(new Error('Already logging out!')));

              case 4:
                if (!(this.state === Session.State.LOGGING_IN)) {
                  _context7.next = 6;
                  break;
                }

                return _context7.abrupt("return", new Promise(function (resolve) {
                  _this3.once(Session.State.LOGGED_IN, function () {
                    return resolve(_this3.logout());
                  });
                }));

              case 6:
                this.updateState(Session.State.LOGGING_OUT);
                return _context7.abrupt("return", this._client.logoutEndpoint().then(function () {
                  _this3.options.sessionToken = undefined;

                  _this3.updateState(Session.State.LOGGED_OUT);
                }));

              case 8:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function logout() {
        return _logout.apply(this, arguments);
      }

      return logout;
    }()
  }]);
  return Session;
}(_eventemitter["default"]);

exports["default"] = Session;
Session.State = {
  LOGGING_OUT: 'logging out',
  LOGGED_OUT: 'logged out',
  LOGGING_IN: 'logging in',
  LOGGED_IN: 'logged in'
};
module.exports = exports.default;

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(2));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(3));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(1));

var _createClass2 = _interopRequireDefault(__webpack_require__(4));

var _debug = _interopRequireDefault(__webpack_require__(8));

var _Signer = _interopRequireDefault(__webpack_require__(25));

var debug = (0, _debug["default"])('StreamrClient::SubscribedStreamPartition');
var PUBLISHERS_EXPIRATION_TIME = 30 * 60 * 1000; // 30 minutes

var SubscribedStreamPartition =
/*#__PURE__*/
function () {
  function SubscribedStreamPartition(client, streamId, streamPartition) {
    (0, _classCallCheck2["default"])(this, SubscribedStreamPartition);
    this._client = client;
    this.streamId = streamId;
    this.streamPartition = streamPartition;
    this.subscriptions = {};
    this.isPublisherPromises = {};
  }

  (0, _createClass2["default"])(SubscribedStreamPartition, [{
    key: "getPublishers",
    value: function () {
      var _getPublishers = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee() {
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!this.publishersPromise || Date.now() - this.lastUpdated > PUBLISHERS_EXPIRATION_TIME) {
                  this.publishersPromise = this._client.getStreamPublishers(this.streamId).then(function (publishers) {
                    var map = {};
                    publishers.forEach(function (p) {
                      map[p] = true;
                    });
                    return map;
                  });
                  this.lastUpdated = Date.now();
                }

                return _context.abrupt("return", this.publishersPromise);

              case 2:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function getPublishers() {
        return _getPublishers.apply(this, arguments);
      }

      return getPublishers;
    }()
  }, {
    key: "_isPublisher",
    value: function () {
      var _isPublisher2 = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee2(publisherId) {
        return _regenerator["default"].wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!this.isPublisherPromises[publisherId]) {
                  this.isPublisherPromises[publisherId] = this._client.isStreamPublisher(this.streamId, publisherId);
                }

                return _context2.abrupt("return", this.isPublisherPromises[publisherId]);

              case 2:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function _isPublisher(_x) {
        return _isPublisher2.apply(this, arguments);
      }

      return _isPublisher;
    }()
  }, {
    key: "isValidPublisher",
    value: function () {
      var _isValidPublisher = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee3(publisherId) {
        var cache, isValid;
        return _regenerator["default"].wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.getPublishers();

              case 2:
                cache = _context3.sent;

                if (!cache[publisherId]) {
                  _context3.next = 5;
                  break;
                }

                return _context3.abrupt("return", cache[publisherId]);

              case 5:
                _context3.next = 7;
                return this._isPublisher(publisherId);

              case 7:
                isValid = _context3.sent;
                cache[publisherId] = isValid;
                return _context3.abrupt("return", isValid);

              case 10:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function isValidPublisher(_x2) {
        return _isValidPublisher.apply(this, arguments);
      }

      return isValidPublisher;
    }()
  }, {
    key: "verifyStreamMessage",
    value: function () {
      var _verifyStreamMessage = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee4(msg) {
        var isValid, _isValid;

        return _regenerator["default"].wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                if (!(msg.version !== 31)) {
                  _context4.next = 3;
                  break;
                }

                debug("Can handle only StreamMessageV31, not version ".concat(msg.version));
                return _context4.abrupt("return", false);

              case 3:
                if (!(this._client.options.verifySignatures === 'always')) {
                  _context4.next = 12;
                  break;
                }

                if (!(msg.signatureType && msg.signatureType !== 0 && msg.signature)) {
                  _context4.next = 11;
                  break;
                }

                _context4.next = 7;
                return this.isValidPublisher(msg.getPublisherId().toLowerCase());

              case 7:
                isValid = _context4.sent;

                if (isValid) {
                  _context4.next = 10;
                  break;
                }

                return _context4.abrupt("return", false);

              case 10:
                return _context4.abrupt("return", _Signer["default"].verifyStreamMessage(msg));

              case 11:
                return _context4.abrupt("return", false);

              case 12:
                if (!(this._client.options.verifySignatures === 'never')) {
                  _context4.next = 14;
                  break;
                }

                return _context4.abrupt("return", true);

              case 14:
                if (!(msg.signatureType && msg.signatureType !== 0 && msg.signature)) {
                  _context4.next = 21;
                  break;
                }

                _context4.next = 17;
                return this.isValidPublisher(msg.getPublisherId().toLowerCase());

              case 17:
                _isValid = _context4.sent;

                if (_isValid) {
                  _context4.next = 20;
                  break;
                }

                return _context4.abrupt("return", false);

              case 20:
                return _context4.abrupt("return", _Signer["default"].verifyStreamMessage(msg));

              case 21:
                _context4.next = 23;
                return this.getVerifySignatures();

              case 23:
                return _context4.abrupt("return", !_context4.sent);

              case 24:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function verifyStreamMessage(_x3) {
        return _verifyStreamMessage.apply(this, arguments);
      }

      return verifyStreamMessage;
    }()
  }, {
    key: "getStream",
    value: function () {
      var _getStream = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee5() {
        return _regenerator["default"].wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                if (!this.streamPromise) {
                  this.streamPromise = this._client.getStream(this.streamId);
                }

                return _context5.abrupt("return", this.streamPromise);

              case 2:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function getStream() {
        return _getStream.apply(this, arguments);
      }

      return getStream;
    }()
  }, {
    key: "getVerifySignatures",
    value: function () {
      var _getVerifySignatures = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee6() {
        var stream;
        return _regenerator["default"].wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                if (!(this.requireSignedData === undefined)) {
                  _context6.next = 5;
                  break;
                }

                _context6.next = 3;
                return this.getStream();

              case 3:
                stream = _context6.sent;
                this.requireSignedData = stream.requireSignedData;

              case 5:
                return _context6.abrupt("return", this.requireSignedData);

              case 6:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function getVerifySignatures() {
        return _getVerifySignatures.apply(this, arguments);
      }

      return getVerifySignatures;
    }()
  }, {
    key: "getSubscription",
    value: function getSubscription(requestId) {
      return this.subscriptions[requestId];
    }
  }, {
    key: "getSubscriptions",
    value: function getSubscriptions() {
      return Object.values(this.subscriptions) || [];
    }
  }, {
    key: "isSubscribing",
    value: function isSubscribing() {
      return this.subscribing;
    }
  }, {
    key: "setSubscribing",
    value: function setSubscribing(value) {
      this.subscribing = value;
    }
  }, {
    key: "emptySubscriptionsSet",
    value: function emptySubscriptionsSet() {
      return Object.keys(this.subscriptions).length === 0;
    }
  }, {
    key: "addSubscription",
    value: function addSubscription(sub) {
      this.subscriptions[sub.id] = sub;
    }
  }, {
    key: "removeSubscription",
    value: function removeSubscription(sub) {
      if (this.subscriptions[sub.id]) {
        this.subscriptions[sub.id].stop();
        delete this.subscriptions[sub.id];
      }
    }
  }]);
  return SubscribedStreamPartition;
}();

exports["default"] = SubscribedStreamPartition;
SubscribedStreamPartition.PUBLISHERS_EXPIRATION_TIME = PUBLISHERS_EXPIRATION_TIME;
module.exports = exports.default;

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(1));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(5));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(6));

var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(11));

var _inherits2 = _interopRequireDefault(__webpack_require__(7));

var _wrapNativeSuper2 = _interopRequireDefault(__webpack_require__(13));

var AuthFetchError =
/*#__PURE__*/
function (_Error) {
  (0, _inherits2["default"])(AuthFetchError, _Error);

  function AuthFetchError(message, response, body) {
    var _this;

    (0, _classCallCheck2["default"])(this, AuthFetchError);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(AuthFetchError).call(this, message));
    _this.response = response;
    _this.body = body;

    if (Error.captureStackTrace) {
      Error.captureStackTrace((0, _assertThisInitialized2["default"])(_this), _this.constructor);
    }

    return _this;
  }

  return AuthFetchError;
}((0, _wrapNativeSuper2["default"])(Error));

exports["default"] = AuthFetchError;
module.exports = exports.default;

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(1));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(5));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(6));

var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(11));

var _inherits2 = _interopRequireDefault(__webpack_require__(7));

var _wrapNativeSuper2 = _interopRequireDefault(__webpack_require__(13));

var FailedToPublishError =
/*#__PURE__*/
function (_Error) {
  (0, _inherits2["default"])(FailedToPublishError, _Error);

  function FailedToPublishError(streamId, msg, reason) {
    var _this;

    (0, _classCallCheck2["default"])(this, FailedToPublishError);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(FailedToPublishError).call(this, "Failed to publish to stream ".concat(streamId, " due to: ").concat(reason, ". Message was: ").concat(msg)));
    _this.streamId = streamId;
    _this.msg = msg;
    _this.reason = reason;

    if (Error.captureStackTrace) {
      Error.captureStackTrace((0, _assertThisInitialized2["default"])(_this), _this.constructor);
    }

    return _this;
  }

  return FailedToPublishError;
}((0, _wrapNativeSuper2["default"])(Error));

exports["default"] = FailedToPublishError;
module.exports = exports.default;

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _typeof2 = _interopRequireDefault(__webpack_require__(19));

var _regenerator = _interopRequireDefault(__webpack_require__(2));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(3));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(1));

var _createClass2 = _interopRequireDefault(__webpack_require__(4));

var _crypto = _interopRequireDefault(__webpack_require__(24));

var _receptacle = _interopRequireDefault(__webpack_require__(42));

var _randomstring = _interopRequireDefault(__webpack_require__(43));

var _streamrClientProtocol = __webpack_require__(9);

var _ethers = __webpack_require__(10);

var _Stream = _interopRequireDefault(__webpack_require__(17));

var _EncryptionUtil = _interopRequireDefault(__webpack_require__(23));

var StreamMessage = _streamrClientProtocol.MessageLayer.StreamMessage;

var MessageCreationUtil =
/*#__PURE__*/
function () {
  function MessageCreationUtil(auth, signer, userInfoPromise, getStreamFunction) {
    var groupKeys = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    (0, _classCallCheck2["default"])(this, MessageCreationUtil);
    this.auth = auth;
    this._signer = signer;
    this.userInfoPromise = userInfoPromise;
    this.getStreamFunction = getStreamFunction;
    this.cachedStreams = new _receptacle["default"]({
      max: 10000
    });
    this.publishedStreams = {};
    Object.values(groupKeys).forEach(function (key) {
      return MessageCreationUtil.validateGroupKey(key);
    });
    this.groupKeys = groupKeys;
    this.msgChainId = _randomstring["default"].generate(20);
    this.cachedHashes = {};
  }

  (0, _createClass2["default"])(MessageCreationUtil, [{
    key: "stop",
    value: function stop() {
      this.cachedStreams.clear();
    }
  }, {
    key: "getUsername",
    value: function () {
      var _getUsername = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee() {
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!this.usernamePromise) {
                  // In the edge case where StreamrClient.auth.apiKey is an anonymous key, userInfo.id is that anonymous key
                  this.usernamePromise = this.userInfoPromise.then(function (userInfo) {
                    return userInfo.username || userInfo.id;
                  });
                }

                return _context.abrupt("return", this.usernamePromise);

              case 2:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function getUsername() {
        return _getUsername.apply(this, arguments);
      }

      return getUsername;
    }()
  }, {
    key: "getStream",
    value: function () {
      var _getStream = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee2(streamId) {
        var streamPromise, success;
        return _regenerator["default"].wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (this.cachedStreams.get(streamId)) {
                  _context2.next = 6;
                  break;
                }

                streamPromise = this.getStreamFunction(streamId).then(function (stream) {
                  return {
                    id: stream.id,
                    partitions: stream.partitions
                  };
                });
                success = this.cachedStreams.set(streamId, streamPromise, {
                  ttl: 30 * 60 * 1000,
                  // 30 minutes
                  refresh: true // reset ttl on access

                });

                if (success) {
                  _context2.next = 6;
                  break;
                }

                console.warn("Could not store stream with id ".concat(streamId, " in local cache."));
                return _context2.abrupt("return", streamPromise);

              case 6:
                return _context2.abrupt("return", this.cachedStreams.get(streamId));

              case 7:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function getStream(_x) {
        return _getStream.apply(this, arguments);
      }

      return getStream;
    }()
  }, {
    key: "getPublisherId",
    value: function () {
      var _getPublisherId = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee3() {
        var provider, hexString, _hexString, _hexString2;

        return _regenerator["default"].wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (this.publisherId) {
                  _context3.next = 38;
                  break;
                }

                if (!(this.auth.privateKey !== undefined)) {
                  _context3.next = 5;
                  break;
                }

                this.publisherId = _ethers.ethers.utils.computeAddress(this.auth.privateKey);
                _context3.next = 38;
                break;

              case 5:
                if (!(this.auth.provider !== undefined)) {
                  _context3.next = 10;
                  break;
                }

                provider = new _ethers.ethers.providers.Web3Provider(this.auth.provider);
                this.publisherId = provider.getSigner().address;
                _context3.next = 38;
                break;

              case 10:
                if (!(this.auth.apiKey !== undefined)) {
                  _context3.next = 21;
                  break;
                }

                _context3.t0 = _ethers.ethers.utils;
                _context3.t1 = Buffer;
                _context3.next = 15;
                return this.getUsername();

              case 15:
                _context3.t2 = _context3.sent;
                _context3.t3 = _context3.t1.from.call(_context3.t1, _context3.t2, 'utf8');
                hexString = _context3.t0.hexlify.call(_context3.t0, _context3.t3);
                this.publisherId = _ethers.ethers.utils.sha256(hexString);
                _context3.next = 38;
                break;

              case 21:
                if (!(this.auth.username !== undefined)) {
                  _context3.next = 26;
                  break;
                }

                _hexString = _ethers.ethers.utils.hexlify(Buffer.from(this.auth.username, 'utf8'));
                this.publisherId = _ethers.ethers.utils.sha256(_hexString);
                _context3.next = 38;
                break;

              case 26:
                if (!(this.auth.sessionToken !== undefined)) {
                  _context3.next = 37;
                  break;
                }

                _context3.t4 = _ethers.ethers.utils;
                _context3.t5 = Buffer;
                _context3.next = 31;
                return this.getUsername();

              case 31:
                _context3.t6 = _context3.sent;
                _context3.t7 = _context3.t5.from.call(_context3.t5, _context3.t6, 'utf8');
                _hexString2 = _context3.t4.hexlify.call(_context3.t4, _context3.t7);
                this.publisherId = _ethers.ethers.utils.sha256(_hexString2);
                _context3.next = 38;
                break;

              case 37:
                throw new Error('Need either "privateKey", "provider", "apiKey", "username"+"password" or "sessionToken" to derive the publisher Id.');

              case 38:
                return _context3.abrupt("return", this.publisherId);

              case 39:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function getPublisherId() {
        return _getPublisherId.apply(this, arguments);
      }

      return getPublisherId;
    }()
  }, {
    key: "getNextSequenceNumber",
    value: function getNextSequenceNumber(key, timestamp) {
      if (timestamp !== this.getPrevTimestamp(key)) {
        return 0;
      }

      return this.getPrevSequenceNumber(key) + 1;
    }
  }, {
    key: "getPrevMsgRef",
    value: function getPrevMsgRef(key) {
      var prevTimestamp = this.getPrevTimestamp(key);

      if (!prevTimestamp) {
        return null;
      }

      var prevSequenceNumber = this.getPrevSequenceNumber(key);
      return [prevTimestamp, prevSequenceNumber];
    }
  }, {
    key: "getPrevTimestamp",
    value: function getPrevTimestamp(key) {
      return this.publishedStreams[key].prevTimestamp;
    }
  }, {
    key: "getPrevSequenceNumber",
    value: function getPrevSequenceNumber(key) {
      return this.publishedStreams[key].prevSequenceNumber;
    }
  }, {
    key: "createStreamMessage",
    value: function () {
      var _createStreamMessage = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee4(streamObjectOrId, data) {
        var timestamp,
            partitionKey,
            groupKey,
            stream,
            streamPartition,
            publisherId,
            key,
            sequenceNumber,
            streamMessage,
            _args4 = arguments;
        return _regenerator["default"].wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                timestamp = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : Date.now();
                partitionKey = _args4.length > 3 && _args4[3] !== undefined ? _args4[3] : null;
                groupKey = _args4.length > 4 ? _args4[4] : undefined;

                if (!((0, _typeof2["default"])(data) !== 'object')) {
                  _context4.next = 5;
                  break;
                }

                throw new Error("Message data must be an object! Was: ".concat(data));

              case 5:
                if (groupKey) {
                  MessageCreationUtil.validateGroupKey(groupKey);
                }

                if (!(streamObjectOrId instanceof _Stream["default"])) {
                  _context4.next = 10;
                  break;
                }

                _context4.t0 = streamObjectOrId;
                _context4.next = 13;
                break;

              case 10:
                _context4.next = 12;
                return this.getStream(streamObjectOrId);

              case 12:
                _context4.t0 = _context4.sent;

              case 13:
                stream = _context4.t0;
                streamPartition = this.computeStreamPartition(stream.partitions, partitionKey);
                _context4.next = 17;
                return this.getPublisherId();

              case 17:
                publisherId = _context4.sent;
                key = stream.id + streamPartition;

                if (!this.publishedStreams[key]) {
                  this.publishedStreams[key] = {
                    prevTimestamp: null,
                    prevSequenceNumber: 0
                  };
                }

                sequenceNumber = this.getNextSequenceNumber(key, timestamp);
                streamMessage = StreamMessage.create([stream.id, streamPartition, timestamp, sequenceNumber, publisherId, this.msgChainId], this.getPrevMsgRef(key), StreamMessage.CONTENT_TYPES.MESSAGE, StreamMessage.ENCRYPTION_TYPES.NONE, data, StreamMessage.SIGNATURE_TYPES.NONE, null);
                this.publishedStreams[key].prevTimestamp = timestamp;
                this.publishedStreams[key].prevSequenceNumber = sequenceNumber;

                if (groupKey && this.groupKeys[stream.id] && groupKey !== this.groupKeys[stream.id]) {
                  _EncryptionUtil["default"].encryptStreamMessageAndNewKey(groupKey, streamMessage, this.groupKeys[stream.id]);

                  this.groupKeys[stream.id] = groupKey;
                } else if (groupKey || this.groupKeys[stream.id]) {
                  if (groupKey) {
                    this.groupKeys[stream.id] = groupKey;
                  }

                  _EncryptionUtil["default"].encryptStreamMessage(streamMessage, this.groupKeys[stream.id]);
                }

                if (!this._signer) {
                  _context4.next = 28;
                  break;
                }

                _context4.next = 28;
                return this._signer.signStreamMessage(streamMessage);

              case 28:
                return _context4.abrupt("return", streamMessage);

              case 29:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function createStreamMessage(_x2, _x3) {
        return _createStreamMessage.apply(this, arguments);
      }

      return createStreamMessage;
    }()
  }, {
    key: "hash",
    value: function hash(stringToHash) {
      if (this.cachedHashes[stringToHash] === undefined) {
        this.cachedHashes[stringToHash] = _crypto["default"].createHash('md5').update(stringToHash).digest();
      }

      return this.cachedHashes[stringToHash];
    }
  }, {
    key: "computeStreamPartition",
    value: function computeStreamPartition(partitionCount, partitionKey) {
      if (!partitionCount) {
        throw new Error('partitionCount is falsey!');
      } else if (partitionCount === 1) {
        // Fast common case
        return 0;
      } else if (partitionKey) {
        var buffer = this.hash(partitionKey);
        var intHash = buffer.readInt32LE();
        return Math.abs(intHash) % partitionCount;
      } else {
        // Fallback to random partition if no key
        return Math.floor(Math.random() * partitionCount);
      }
    }
  }], [{
    key: "validateGroupKey",
    value: function validateGroupKey(groupKey) {
      if (!(groupKey instanceof Buffer)) {
        throw new Error("Group key must be a Buffer: ".concat(groupKey));
      }

      if (groupKey.length !== 32) {
        throw new Error("Group key must have a size of 256 bits, not ".concat(groupKey.length * 8));
      }
    }
  }]);
  return MessageCreationUtil;
}();

exports["default"] = MessageCreationUtil;
module.exports = exports.default;

/***/ }),
/* 42 */
/***/ (function(module, exports) {

module.exports = require("receptacle");

/***/ }),
/* 43 */
/***/ (function(module, exports) {

module.exports = require("randomstring");

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.waitFor = waitFor;

/**
 * Converts a .once event listener into a promise.
 * Rejects if an 'error' event is received before resolving.
 */
function waitFor(emitter, event) {
  return new Promise(function (resolve, reject) {
    var onError;

    var onEvent = function onEvent(value) {
      emitter.off('error', onError);
      resolve(value);
    };

    onError = function onError(error) {
      emitter.off(event, onEvent);
      reject(error);
    };

    emitter.once(event, onEvent);
    emitter.once('error', onError);
  });
}

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(2));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(3));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(1));

var _createClass2 = _interopRequireDefault(__webpack_require__(4));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(5));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(6));

var _get2 = _interopRequireDefault(__webpack_require__(46));

var _inherits2 = _interopRequireDefault(__webpack_require__(7));

var _HistoricalSubscription = _interopRequireDefault(__webpack_require__(21));

var _RealTimeSubscription = _interopRequireDefault(__webpack_require__(27));

var _Subscription2 = _interopRequireDefault(__webpack_require__(16));

var CombinedSubscription =
/*#__PURE__*/
function (_Subscription) {
  (0, _inherits2["default"])(CombinedSubscription, _Subscription);

  function CombinedSubscription(streamId, streamPartition, callback, options, groupKeys, propagationTimeout, resendTimeout) {
    var _this;

    var orderMessages = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : true;
    (0, _classCallCheck2["default"])(this, CombinedSubscription);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(CombinedSubscription).call(this, streamId, streamPartition, callback, groupKeys, propagationTimeout, resendTimeout));
    _this.sub = new _HistoricalSubscription["default"](streamId, streamPartition, callback, options, groupKeys, _this.propagationTimeout, _this.resendTimeout, orderMessages);
    _this.realTimeMsgsQueue = [];

    _this.sub.on('message received', function (msg) {
      if (msg) {
        _this.realTimeMsgsQueue.push(msg);
      }
    });

    _this.sub.on('initial_resend_done',
    /*#__PURE__*/
    (0, _asyncToGenerator2["default"])(
    /*#__PURE__*/
    _regenerator["default"].mark(function _callee() {
      var realTime;
      return _regenerator["default"].wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              realTime = new _RealTimeSubscription["default"](streamId, streamPartition, callback, groupKeys, _this.propagationTimeout, _this.resendTimeout, orderMessages);

              if (_this.sub.orderingUtil) {
                realTime.orderingUtil.orderedChains = _this.sub.orderingUtil.orderedChains;
                Object.keys(_this.sub.orderingUtil.orderedChains).forEach(function (key) {
                  realTime.orderingUtil.orderedChains[key].inOrderHandler = realTime.orderingUtil.inOrderHandler;
                  realTime.orderingUtil.orderedChains[key].gapHandler = realTime.orderingUtil.gapHandler;
                });
              }

              _this._bindListeners(realTime);

              _context.next = 5;
              return Promise.all(_this.realTimeMsgsQueue.map(function (msg) {
                return realTime.handleBroadcastMessage(msg, function () {
                  return true;
                });
              }));

            case 5:
              _this.sub = realTime;

            case 6:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    })));

    _this._bindListeners(_this.sub);

    return _this;
  }

  (0, _createClass2["default"])(CombinedSubscription, [{
    key: "_bindListeners",
    value: function _bindListeners(sub) {
      var _this2 = this;

      sub.on('done', function () {
        return _this2.emit('done');
      });
      sub.on('gap', function (from, to, publisherId, msgChainId) {
        return _this2.emit('gap', from, to, publisherId, msgChainId);
      });
      sub.on('error', function (err) {
        return _this2.emit('error', err);
      });
      sub.on('resending', function (response) {
        return _this2.emit('resending', response);
      });
      sub.on('resent', function (response) {
        return _this2.emit('resent', response);
      });
      sub.on('no_resend', function (response) {
        return _this2.emit('no_resend', response);
      });
      sub.on('initial_resend_done', function (response) {
        return _this2.emit('initial_resend_done', response);
      });
      sub.on('message received', function () {
        return _this2.emit('message received');
      });
      Object.keys(_Subscription2["default"].State).forEach(function (state) {
        return _this2.sub.on(state, function () {
          return _this2.emit(state);
        });
      });
    }
  }, {
    key: "stop",
    value: function stop() {
      return this.sub.stop();
    }
  }, {
    key: "addPendingResendRequestId",
    value: function addPendingResendRequestId(requestId) {
      this.sub.addPendingResendRequestId(requestId);
    }
  }, {
    key: "handleResentMessage",
    value: function () {
      var _handleResentMessage = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee2(msg, requestId, verifyFn) {
        return _regenerator["default"].wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", this.sub.handleResentMessage(msg, requestId, verifyFn));

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function handleResentMessage(_x, _x2, _x3) {
        return _handleResentMessage.apply(this, arguments);
      }

      return handleResentMessage;
    }()
  }, {
    key: "handleResending",
    value: function () {
      var _handleResending = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee3(response) {
        return _regenerator["default"].wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                return _context3.abrupt("return", this.sub.handleResending(response));

              case 1:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function handleResending(_x4) {
        return _handleResending.apply(this, arguments);
      }

      return handleResending;
    }()
  }, {
    key: "handleResent",
    value: function () {
      var _handleResent = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee4(response) {
        return _regenerator["default"].wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                return _context4.abrupt("return", this.sub.handleResent(response));

              case 1:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function handleResent(_x5) {
        return _handleResent.apply(this, arguments);
      }

      return handleResent;
    }()
  }, {
    key: "handleNoResend",
    value: function () {
      var _handleNoResend = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee5(response) {
        return _regenerator["default"].wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                return _context5.abrupt("return", this.sub.handleNoResend(response));

              case 1:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function handleNoResend(_x6) {
        return _handleNoResend.apply(this, arguments);
      }

      return handleNoResend;
    }()
  }, {
    key: "handleBroadcastMessage",
    value: function () {
      var _handleBroadcastMessage = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee6(msg, verifyFn) {
        return _regenerator["default"].wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                return _context6.abrupt("return", this.sub.handleBroadcastMessage(msg, verifyFn));

              case 1:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function handleBroadcastMessage(_x7, _x8) {
        return _handleBroadcastMessage.apply(this, arguments);
      }

      return handleBroadcastMessage;
    }()
  }, {
    key: "finishResend",
    value: function finishResend() {
      return this.sub.finishResend();
    }
  }, {
    key: "hasResendOptions",
    value: function hasResendOptions() {
      return this.sub.hasResendOptions();
    }
  }, {
    key: "getResendOptions",
    value: function getResendOptions() {
      return this.sub.getResendOptions();
    }
  }, {
    key: "setResending",
    value: function setResending(resending) {
      return this.sub.setResending(resending);
    }
  }, {
    key: "setState",
    value: function setState(state) {
      (0, _get2["default"])((0, _getPrototypeOf2["default"])(CombinedSubscription.prototype), "setState", this).call(this, state);
      this.sub.state = state;
    }
  }, {
    key: "handleError",
    value: function handleError(err) {
      return this.sub.handleError(err);
    }
  }]);
  return CombinedSubscription;
}(_Subscription2["default"]);

exports["default"] = CombinedSubscription;
module.exports = exports.default;

/***/ }),
/* 46 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/get");

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(1));

var _createClass2 = _interopRequireDefault(__webpack_require__(4));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(5));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(6));

var _inherits2 = _interopRequireDefault(__webpack_require__(7));

var _eventemitter = _interopRequireDefault(__webpack_require__(12));

var _streamrClientProtocol = __webpack_require__(9);

var ResendUtil =
/*#__PURE__*/
function (_EventEmitter) {
  (0, _inherits2["default"])(ResendUtil, _EventEmitter);

  function ResendUtil() {
    var _this;

    (0, _classCallCheck2["default"])(this, ResendUtil);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(ResendUtil).call(this));
    _this.subForRequestId = {};
    _this.counter = 0;
    return _this;
  }

  (0, _createClass2["default"])(ResendUtil, [{
    key: "generateRequestId",
    value: function generateRequestId() {
      var id = this.counter;
      this.counter += 1;
      return id.toString();
    }
  }, {
    key: "_subForRequestIdExists",
    value: function _subForRequestIdExists(requestId) {
      return requestId in this.subForRequestId;
    }
  }, {
    key: "getSubFromResendResponse",
    value: function getSubFromResendResponse(response) {
      if (!this._subForRequestIdExists(response.requestId)) {
        var error = new Error("Received unexpected ".concat(response.constructor.name, " message ").concat(response.serialize()));
        this.emit('error', error);
      }

      return this.subForRequestId[response.requestId];
    }
  }, {
    key: "deleteDoneSubsByResponse",
    value: function deleteDoneSubsByResponse(response) {
      // TODO: replace with response.requestId
      if (response.type === _streamrClientProtocol.ControlLayer.ResendResponseResent.TYPE || response.type === _streamrClientProtocol.ControlLayer.ResendResponseNoResend.TYPE) {
        delete this.subForRequestId[response.requestId];
      }
    }
  }, {
    key: "registerResendRequestForSub",
    value: function registerResendRequestForSub(sub) {
      var requestId = this.generateRequestId();
      this.subForRequestId[requestId] = sub;
      sub.addPendingResendRequestId(requestId);
      return requestId;
    }
  }]);
  return ResendUtil;
}(_eventemitter["default"]);

exports["default"] = ResendUtil;
module.exports = exports.default;

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getStream = getStream;
exports.listStreams = listStreams;
exports.getStreamByName = getStreamByName;
exports.createStream = createStream;
exports.getOrCreateStream = getOrCreateStream;
exports.getStreamPublishers = getStreamPublishers;
exports.isStreamPublisher = isStreamPublisher;
exports.publishHttp = publishHttp;

var _regenerator = _interopRequireDefault(__webpack_require__(2));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(15));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(3));

var _http = __webpack_require__(49);

var _https = __webpack_require__(50);

var _qs = _interopRequireDefault(__webpack_require__(20));

var _debug = _interopRequireDefault(__webpack_require__(8));

var _Stream = _interopRequireDefault(__webpack_require__(17));

var _authFetch = _interopRequireDefault(__webpack_require__(14));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var debug = (0, _debug["default"])('StreamrClient');
var agentSettings = {
  keepAlive: true,
  keepAliveMsecs: 5000
};
var agentByProtocol = {
  http: new _http.Agent(agentSettings),
  https: new _https.Agent(agentSettings)
};

function getKeepAliveAgentForUrl(url) {
  if (url.startsWith('https')) {
    return agentByProtocol.https;
  }

  if (url.startsWith('http')) {
    return agentByProtocol.http;
  }

  throw new Error("Unknown protocol in URL: ".concat(url));
} // These function are mixed in to StreamrClient.prototype.
// In the below functions, 'this' is intended to be the StreamrClient


function getStream(_x) {
  return _getStream.apply(this, arguments);
}

function _getStream() {
  _getStream = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee(streamId) {
    var url, json;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            url = "".concat(this.options.restUrl, "/streams/").concat(streamId);
            _context.next = 3;
            return (0, _authFetch["default"])(url, this.session);

          case 3:
            json = _context.sent;
            return _context.abrupt("return", json ? new _Stream["default"](this, json) : undefined);

          case 5:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this);
  }));
  return _getStream.apply(this, arguments);
}

function listStreams() {
  return _listStreams.apply(this, arguments);
}

function _listStreams() {
  _listStreams = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee2() {
    var _this = this;

    var query,
        url,
        json,
        _args2 = arguments;
    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            query = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};
            url = "".concat(this.options.restUrl, "/streams?").concat(_qs["default"].stringify(query));
            _context2.next = 4;
            return (0, _authFetch["default"])(url, this.session);

          case 4:
            json = _context2.sent;
            return _context2.abrupt("return", json ? json.map(function (stream) {
              return new _Stream["default"](_this, stream);
            }) : []);

          case 6:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));
  return _listStreams.apply(this, arguments);
}

function getStreamByName(_x2) {
  return _getStreamByName.apply(this, arguments);
}

function _getStreamByName() {
  _getStreamByName = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee3(name) {
    var json;
    return _regenerator["default"].wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return this.listStreams({
              name: name,
              "public": false
            });

          case 2:
            json = _context3.sent;
            return _context3.abrupt("return", json[0] ? new _Stream["default"](this, json[0]) : undefined);

          case 4:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3, this);
  }));
  return _getStreamByName.apply(this, arguments);
}

function createStream(_x3) {
  return _createStream.apply(this, arguments);
}

function _createStream() {
  _createStream = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee4(props) {
    var json;
    return _regenerator["default"].wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            if (!(!props || !props.name)) {
              _context4.next = 2;
              break;
            }

            throw new Error('Stream properties must contain a "name" field!');

          case 2:
            _context4.next = 4;
            return (0, _authFetch["default"])("".concat(this.options.restUrl, "/streams"), this.session, {
              method: 'POST',
              body: JSON.stringify(props)
            });

          case 4:
            json = _context4.sent;
            return _context4.abrupt("return", json ? new _Stream["default"](this, json) : undefined);

          case 6:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4, this);
  }));
  return _createStream.apply(this, arguments);
}

function getOrCreateStream(_x4) {
  return _getOrCreateStream.apply(this, arguments);
}

function _getOrCreateStream() {
  _getOrCreateStream = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee5(props) {
    var json;
    return _regenerator["default"].wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            if (!props.id) {
              _context5.next = 6;
              break;
            }

            _context5.next = 3;
            return this.getStream(props.id);

          case 3:
            json = _context5.sent;
            _context5.next = 10;
            break;

          case 6:
            if (!props.name) {
              _context5.next = 10;
              break;
            }

            _context5.next = 9;
            return this.getStreamByName(props.name);

          case 9:
            json = _context5.sent;

          case 10:
            if (json) {
              _context5.next = 15;
              break;
            }

            _context5.next = 13;
            return this.createStream(props);

          case 13:
            json = _context5.sent;
            debug('Created stream: %s (%s)', props.name, json.id);

          case 15:
            if (json) {
              _context5.next = 19;
              break;
            }

            throw new Error("Unable to find or create stream: ".concat(props.name));

          case 19:
            return _context5.abrupt("return", new _Stream["default"](this, json));

          case 20:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5, this);
  }));
  return _getOrCreateStream.apply(this, arguments);
}

function getStreamPublishers(_x5) {
  return _getStreamPublishers.apply(this, arguments);
}

function _getStreamPublishers() {
  _getStreamPublishers = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee6(streamId) {
    var url, json;
    return _regenerator["default"].wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            url = "".concat(this.options.restUrl, "/streams/").concat(streamId, "/publishers");
            _context6.next = 3;
            return (0, _authFetch["default"])(url, this.session);

          case 3:
            json = _context6.sent;
            return _context6.abrupt("return", json.addresses.map(function (a) {
              return a.toLowerCase();
            }));

          case 5:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6, this);
  }));
  return _getStreamPublishers.apply(this, arguments);
}

function isStreamPublisher(_x6, _x7) {
  return _isStreamPublisher.apply(this, arguments);
}

function _isStreamPublisher() {
  _isStreamPublisher = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee7(streamId, ethAddress) {
    var url;
    return _regenerator["default"].wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            url = "".concat(this.options.restUrl, "/streams/").concat(streamId, "/publisher/").concat(ethAddress);
            _context7.prev = 1;
            _context7.next = 4;
            return (0, _authFetch["default"])(url, this.session);

          case 4:
            return _context7.abrupt("return", true);

          case 7:
            _context7.prev = 7;
            _context7.t0 = _context7["catch"](1);

            if (!(_context7.t0.response && _context7.t0.response.status === 404)) {
              _context7.next = 11;
              break;
            }

            return _context7.abrupt("return", false);

          case 11:
            throw _context7.t0;

          case 12:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7, this, [[1, 7]]);
  }));
  return _isStreamPublisher.apply(this, arguments);
}

function publishHttp(streamObjectOrId, data) {
  var requestOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var keepAlive = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;
  var streamId;

  if (streamObjectOrId instanceof _Stream["default"]) {
    streamId = streamObjectOrId.id;
  } else {
    streamId = streamObjectOrId;
  } // Send data to the stream


  return (0, _authFetch["default"])("".concat(this.options.restUrl, "/streams/").concat(streamId, "/data"), this.session, _objectSpread({}, requestOptions, {
    method: 'POST',
    body: JSON.stringify(data),
    agent: keepAlive ? getKeepAliveAgentForUrl(this.options.restUrl) : undefined
  }));
}

/***/ }),
/* 49 */
/***/ (function(module, exports) {

module.exports = require("http");

/***/ }),
/* 50 */
/***/ (function(module, exports) {

module.exports = require("https");

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getChallenge = getChallenge;
exports.sendChallengeResponse = sendChallengeResponse;
exports.loginWithChallengeResponse = loginWithChallengeResponse;
exports.loginWithApiKey = loginWithApiKey;
exports.loginWithUsernamePassword = loginWithUsernamePassword;
exports.getUserInfo = getUserInfo;
exports.logoutEndpoint = logoutEndpoint;

var _regenerator = _interopRequireDefault(__webpack_require__(2));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(3));

var _authFetch = _interopRequireDefault(__webpack_require__(14));

function getSessionToken(_x, _x2) {
  return _getSessionToken.apply(this, arguments);
}

function _getSessionToken() {
  _getSessionToken = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee(url, props) {
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            return _context.abrupt("return", (0, _authFetch["default"])(url, undefined, {
              method: 'POST',
              body: JSON.stringify(props),
              headers: {
                'Content-Type': 'application/json'
              }
            }));

          case 1:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _getSessionToken.apply(this, arguments);
}

function getChallenge(_x3) {
  return _getChallenge.apply(this, arguments);
}

function _getChallenge() {
  _getChallenge = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee2(address) {
    var url;
    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            url = "".concat(this.options.restUrl, "/login/challenge/").concat(address);
            return _context2.abrupt("return", (0, _authFetch["default"])(url, undefined, {
              method: 'POST'
            }));

          case 2:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));
  return _getChallenge.apply(this, arguments);
}

function sendChallengeResponse(_x4, _x5, _x6) {
  return _sendChallengeResponse.apply(this, arguments);
}

function _sendChallengeResponse() {
  _sendChallengeResponse = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee3(challenge, signature, address) {
    var url, props;
    return _regenerator["default"].wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            url = "".concat(this.options.restUrl, "/login/response");
            props = {
              challenge: challenge,
              signature: signature,
              address: address
            };
            return _context3.abrupt("return", getSessionToken(url, props));

          case 3:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3, this);
  }));
  return _sendChallengeResponse.apply(this, arguments);
}

function loginWithChallengeResponse(_x7, _x8) {
  return _loginWithChallengeResponse.apply(this, arguments);
}

function _loginWithChallengeResponse() {
  _loginWithChallengeResponse = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee4(signingFunction, address) {
    var challenge, signature;
    return _regenerator["default"].wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _context4.next = 2;
            return this.getChallenge(address);

          case 2:
            challenge = _context4.sent;
            _context4.next = 5;
            return signingFunction(challenge.challenge);

          case 5:
            signature = _context4.sent;
            return _context4.abrupt("return", this.sendChallengeResponse(challenge, signature, address));

          case 7:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4, this);
  }));
  return _loginWithChallengeResponse.apply(this, arguments);
}

function loginWithApiKey(_x9) {
  return _loginWithApiKey.apply(this, arguments);
}

function _loginWithApiKey() {
  _loginWithApiKey = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee5(apiKey) {
    var url, props;
    return _regenerator["default"].wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            url = "".concat(this.options.restUrl, "/login/apikey");
            props = {
              apiKey: apiKey
            };
            return _context5.abrupt("return", getSessionToken(url, props));

          case 3:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5, this);
  }));
  return _loginWithApiKey.apply(this, arguments);
}

function loginWithUsernamePassword(_x10, _x11) {
  return _loginWithUsernamePassword.apply(this, arguments);
}

function _loginWithUsernamePassword() {
  _loginWithUsernamePassword = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee6(username, password) {
    var url, props;
    return _regenerator["default"].wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            url = "".concat(this.options.restUrl, "/login/password");
            props = {
              username: username,
              password: password
            };
            return _context6.abrupt("return", getSessionToken(url, props));

          case 3:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6, this);
  }));
  return _loginWithUsernamePassword.apply(this, arguments);
}

function getUserInfo() {
  return _getUserInfo.apply(this, arguments);
}

function _getUserInfo() {
  _getUserInfo = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee7() {
    return _regenerator["default"].wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            return _context7.abrupt("return", (0, _authFetch["default"])("".concat(this.options.restUrl, "/users/me"), this.session));

          case 1:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7, this);
  }));
  return _getUserInfo.apply(this, arguments);
}

function logoutEndpoint() {
  return _logoutEndpoint.apply(this, arguments);
}

function _logoutEndpoint() {
  _logoutEndpoint = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee8() {
    return _regenerator["default"].wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            return _context8.abrupt("return", (0, _authFetch["default"])("".concat(this.options.restUrl, "/logout"), this.session, {
              method: 'POST'
            }));

          case 1:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8, this);
  }));
  return _logoutEndpoint.apply(this, arguments);
}

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(18);

var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deployCommunity = deployCommunity;
exports.communityIsReady = communityIsReady;
exports.createSecret = createSecret;
exports.joinCommunity = joinCommunity;
exports.hasJoined = hasJoined;
exports.getMemberStats = getMemberStats;
exports.getBalance = getBalance;
exports.getMembers = getMembers;
exports.getCommunityStats = getCommunityStats;
exports.validateProof = validateProof;
exports.withdraw = withdraw;
exports.getWithdrawTx = getWithdrawTx;
exports.withdrawFor = withdrawFor;
exports.getWithdrawTxFor = getWithdrawTxFor;
exports.withdrawTo = withdrawTo;
exports.getWithdrawTxTo = getWithdrawTxTo;
exports.kick = kick;
exports.addMembers = addMembers;

var _regenerator = _interopRequireDefault(__webpack_require__(2));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(3));

var _nodeFetch = _interopRequireDefault(__webpack_require__(26));

var _ethers = __webpack_require__(10);

var _debug = _interopRequireDefault(__webpack_require__(8));

var CommunityProduct = _interopRequireWildcard(__webpack_require__(53));

var _authFetch = _interopRequireDefault(__webpack_require__(14));

/**
 * Streamr community product related functions
 *
 * Table of Contents:
 *      admin: DEPLOY AND SETUP COMMUNITY   Functions for deploying the contract and adding secrets for smooth joining
 *      member: JOIN & QUERY COMMUNITY      Publicly available info about communities and their members (with earnings and proofs)
 *      member: WITHDRAW EARNINGS           Withdrawing functions, there's many: normal, agent, donate
 *      admin: MANAGE COMMUNITY             Kick and add members
 */
var BigNumber = _ethers.utils.BigNumber,
    computeAddress = _ethers.utils.computeAddress,
    getAddress = _ethers.utils.getAddress;
var debug = (0, _debug["default"])('StreamrClient::CommunityEndpoints');
/** @typedef {String} EthereumAddress */

function throwIfBadAddress(address, variableDescription) {
  try {
    return getAddress(address);
  } catch (e) {
    throw new Error("".concat(variableDescription || 'Error', ": Bad Ethereum address ").concat(address, ". Original error: ").concat(e.stack, "."));
  }
}

function throwIfNotContract(_x, _x2, _x3) {
  return _throwIfNotContract.apply(this, arguments);
}

function _throwIfNotContract() {
  _throwIfNotContract = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee(eth, address, variableDescription) {
    var addr;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            addr = throwIfBadAddress(address, variableDescription);
            _context.next = 3;
            return eth.getCode(address);

          case 3:
            _context.t0 = _context.sent;

            if (!(_context.t0 === '0x')) {
              _context.next = 6;
              break;
            }

            throw new Error("".concat(variableDescription || 'Error', ": No contract at ").concat(address));

          case 6:
            return _context.abrupt("return", addr);

          case 7:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _throwIfNotContract.apply(this, arguments);
}

function sleep(ms) {
  return new Promise(function (resolve) {
    setTimeout(resolve, ms);
  });
}

function get(_x4, _x5, _x6) {
  return _get.apply(this, arguments);
}

function _get() {
  _get = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee2(client, communityAddress, endpoint) {
    var url,
        _len,
        opts,
        _key,
        response,
        json,
        _args2 = arguments;

    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            url = "".concat(client.options.restUrl, "/communities/").concat(communityAddress).concat(endpoint);

            for (_len = _args2.length, opts = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
              opts[_key - 3] = _args2[_key];
            }

            _context2.next = 4;
            return _nodeFetch["default"].apply(void 0, [url].concat(opts));

          case 4:
            response = _context2.sent;
            _context2.next = 7;
            return response.json();

          case 7:
            json = _context2.sent;

            // server may return things like { code: "ConnectionPoolTimeoutException", message: "Timeout waiting for connection from pool" }
            //   they must still be handled as errors
            if (!response.ok && !json.error) {
              json.error = "Server returned ".concat(response.status, " ").concat(response.statusText);
            }

            if (json.code && !json.error) {
              json.error = json.code;
            }

            return _context2.abrupt("return", json);

          case 11:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _get.apply(this, arguments);
}

function getOrThrow() {
  return _getOrThrow.apply(this, arguments);
}
/**
 * @typedef {Object} EthereumOptions all optional, hence "options"
 * @property {Wallet | String} wallet or private key, default is currently logged in StreamrClient (if auth: privateKey)
 * @property {providers.Provider} provider to use in case wallet was a String, or omitted
 * @property {Number} confirmations, default is 1
 * @property {BigNumber} gasPrice in wei (part of ethers overrides), default is whatever the network recommends (ethers.js default)
 * @see https://docs.ethers.io/ethers.js/html/api-contract.html#overrides
 */
// TODO: gasPrice to overrides (not needed for browser, but would be useful in node.js)

/**
 * Get a wallet from options, e.g. by parsing something that looks like a private key
 * @param {StreamrClient} client this
 * @param {EthereumOptions} options includes wallet which is Wallet or private key, or provider so StreamrClient auth: privateKey will be used
 * @returns {Wallet} "wallet with provider" that can be used to sign and send transactions
 */


function _getOrThrow() {
  _getOrThrow = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee3() {
    var res,
        _args3 = arguments;
    return _regenerator["default"].wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return get.apply(void 0, _args3);

          case 2:
            res = _context3.sent;

            if (!res.error) {
              _context3.next = 5;
              break;
            }

            throw new Error(JSON.stringify(res));

          case 5:
            return _context3.abrupt("return", res);

          case 6:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _getOrThrow.apply(this, arguments);
}

function parseWalletFromOptions(client, options) {
  if (options.wallet instanceof _ethers.Wallet) {
    return options.wallet;
  }

  var key = typeof options.wallet === 'string' ? options.wallet : options.key || options.privateKey || client.options.auth.privateKey;

  if (key) {
    var provider = options.provider instanceof _ethers.providers.Provider ? options.provider : (0, _ethers.getDefaultProvider)();
    return new _ethers.Wallet(key, provider);
  } // TODO: check metamask before erroring!


  throw new Error("Please provide options.wallet, or options.privateKey string, if you're not authenticated using a privateKey");
} // //////////////////////////////////////////////////////////////////
//          admin: DEPLOY AND SETUP COMMUNITY
// //////////////////////////////////////////////////////////////////

/**
 * Deploy a new CommunityProduct contract and create the required joinPartStream
 * Note that the Promise resolves with an ethers.js TransactionResponse, so it's only sent to the chain at that point, but not yet deployed
 * @param {EthereumOptions} options such as blockFreezePeriodSeconds (default: 0), adminFee (default: 0)
 * @return {Promise<Contract>} has methods that can be awaited: contract is deployed (`.deployed()`), operator is started (`.isReady()`)
 */


function deployCommunity(_x7) {
  return _deployCommunity.apply(this, arguments);
}
/**
 * Await this function when you want to make sure a community is deployed and ready to use
 * @param {EthereumAddress} address of the community
 * @param {Number} pollingIntervalMs (optional, default: 1000) ask server if community is ready
 * @param {Number} retryTimeoutMs (optional, default: 60000) give up sending more retries
 * @return {Promise} resolves when community server is ready to operate the community (or fails with HTTP error)
 */


function _deployCommunity() {
  _deployCommunity = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee5(options) {
    var wallet, _options$blockFreezeP, blockFreezePeriodSeconds, _options$adminFee, adminFee, _options$tokenAddress, tokenAddress, _options$streamrNodeA, streamrNodeAddress, _options$streamrOpera, streamrOperatorAddress, adminFeeBN, stream, res1, res2, deployer, result, address, client;

    return _regenerator["default"].wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            wallet = parseWalletFromOptions(this, options);
            _options$blockFreezeP = options.blockFreezePeriodSeconds, blockFreezePeriodSeconds = _options$blockFreezeP === void 0 ? 0 : _options$blockFreezeP, _options$adminFee = options.adminFee, adminFee = _options$adminFee === void 0 ? 0 : _options$adminFee, _options$tokenAddress = options.tokenAddress, tokenAddress = _options$tokenAddress === void 0 ? this.options.tokenAddress : _options$tokenAddress, _options$streamrNodeA = options.streamrNodeAddress, streamrNodeAddress = _options$streamrNodeA === void 0 ? this.options.streamrNodeAddress : _options$streamrNodeA, _options$streamrOpera = options.streamrOperatorAddress, streamrOperatorAddress = _options$streamrOpera === void 0 ? this.options.streamrOperatorAddress : _options$streamrOpera;
            _context5.next = 4;
            return throwIfNotContract(wallet.provider, tokenAddress, 'options.tokenAddress');

          case 4:
            _context5.next = 6;
            return throwIfBadAddress(streamrNodeAddress, 'options.streamrNodeAddress');

          case 6:
            _context5.next = 8;
            return throwIfBadAddress(streamrOperatorAddress, 'options.streamrOperatorAddress');

          case 8:
            if (!(adminFee < 0 || adminFee > 1)) {
              _context5.next = 10;
              break;
            }

            throw new Error('options.adminFeeFraction must be a number between 0...1, got: ' + adminFee);

          case 10:
            adminFeeBN = new BigNumber((adminFee * 1e18).toFixed()); // last 2...3 decimals are going to be gibberish

            _context5.next = 13;
            return this.createStream({
              name: "Join-Part-".concat(wallet.address.slice(0, 10), "-").concat(Date.now())
            });

          case 13:
            stream = _context5.sent;
            debug("Stream created: ".concat(JSON.stringify(stream.toObject())));
            _context5.next = 17;
            return stream.grantPermission('read', null);

          case 17:
            res1 = _context5.sent;
            debug("Grant read permission response from server: ".concat(JSON.stringify(res1)));
            _context5.next = 21;
            return stream.grantPermission('write', streamrNodeAddress);

          case 21:
            res2 = _context5.sent;
            debug("Grant write permission response to ".concat(streamrNodeAddress, " from server: ").concat(JSON.stringify(res2)));
            deployer = new _ethers.ContractFactory(CommunityProduct.abi, CommunityProduct.bytecode, wallet);
            _context5.next = 26;
            return deployer.deploy(streamrOperatorAddress, stream.id, tokenAddress, blockFreezePeriodSeconds, adminFeeBN);

          case 26:
            result = _context5.sent;
            address = result.address; // this can be known in advance

            debug("Community contract @ ".concat(address, " deployment started")); // add the waiting method so that caller can await community being operated by server (so that EE calls work)

            client = this;

            result.isReady =
            /*#__PURE__*/
            function () {
              var _ref = (0, _asyncToGenerator2["default"])(
              /*#__PURE__*/
              _regenerator["default"].mark(function _callee4(pollingIntervalMs, timeoutMs) {
                return _regenerator["default"].wrap(function _callee4$(_context4) {
                  while (1) {
                    switch (_context4.prev = _context4.next) {
                      case 0:
                        return _context4.abrupt("return", client.communityIsReady(address, pollingIntervalMs, timeoutMs));

                      case 1:
                      case "end":
                        return _context4.stop();
                    }
                  }
                }, _callee4);
              }));

              return function (_x51, _x52) {
                return _ref.apply(this, arguments);
              };
            }();

            return _context5.abrupt("return", result);

          case 32:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5, this);
  }));
  return _deployCommunity.apply(this, arguments);
}

function communityIsReady(_x8) {
  return _communityIsReady.apply(this, arguments);
}
/**
 * Add a new community secret
 * @param {EthereumAddress} communityAddress
 * @param {String} secret password that can be used to join the community without manual verification
 * @param {String} name describes the secret
 */


function _communityIsReady() {
  _communityIsReady = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee6(address) {
    var pollingIntervalMs,
        retryTimeoutMs,
        stats,
        startTime,
        _args6 = arguments;
    return _regenerator["default"].wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            pollingIntervalMs = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : 1000;
            retryTimeoutMs = _args6.length > 2 && _args6[2] !== undefined ? _args6[2] : 60000;
            _context6.next = 4;
            return get(this, address, '/stats');

          case 4:
            stats = _context6.sent;
            startTime = Date.now();

          case 6:
            if (!(stats.error && Date.now() < startTime + retryTimeoutMs)) {
              _context6.next = 15;
              break;
            }

            debug("Waiting for community ".concat(address, " to start. Status: ").concat(JSON.stringify(stats)));
            _context6.next = 10;
            return sleep(pollingIntervalMs);

          case 10:
            _context6.next = 12;
            return get(this, address, '/stats');

          case 12:
            stats = _context6.sent;
            _context6.next = 6;
            break;

          case 15:
            if (!stats.error) {
              _context6.next = 17;
              break;
            }

            throw new Error("Community failed to start, retried for ".concat(retryTimeoutMs, " ms. Status: ").concat(JSON.stringify(stats)));

          case 17:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6, this);
  }));
  return _communityIsReady.apply(this, arguments);
}

function createSecret(_x9, _x10) {
  return _createSecret.apply(this, arguments);
} // //////////////////////////////////////////////////////////////////
//          member: JOIN & QUERY COMMUNITY
// //////////////////////////////////////////////////////////////////

/**
 * Send a joinRequest, or get into community instantly with a community secret
 * @param {EthereumAddress} communityAddress to join
 * @param {String} secret (optional) if given, and correct, join the community immediately
 */


function _createSecret() {
  _createSecret = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee7(communityAddress, secret) {
    var name,
        url,
        _args7 = arguments;
    return _regenerator["default"].wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            name = _args7.length > 2 && _args7[2] !== undefined ? _args7[2] : 'Untitled Community Secret';
            url = "".concat(this.options.restUrl, "/communities/").concat(communityAddress, "/secrets");
            return _context7.abrupt("return", (0, _authFetch["default"])(url, this.session, {
              method: 'POST',
              body: JSON.stringify({
                name: name,
                secret: secret
              }),
              headers: {
                'Content-Type': 'application/json'
              }
            }));

          case 3:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7, this);
  }));
  return _createSecret.apply(this, arguments);
}

function joinCommunity(_x11, _x12) {
  return _joinCommunity.apply(this, arguments);
}
/**
 * Await this function when you want to make sure a member is accepted in the community
 * @param {EthereumAddress} communityAddress
 * @param {EthereumAddress} memberAddress (optional, default is StreamrClient's auth: privateKey)
 * @param {Number} pollingIntervalMs (optional, default: 1000) ask server if member is in
 * @param {Number} retryTimeoutMs (optional, default: 60000) give up
 * @return {Promise} resolves when member is in the community (or fails with HTTP error)
 */


function _joinCommunity() {
  _joinCommunity = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee8(communityAddress, secret) {
    var authKey, body, url;
    return _regenerator["default"].wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            authKey = this.options.auth && this.options.auth.privateKey;

            if (authKey) {
              _context8.next = 3;
              break;
            }

            throw new Error('joinCommunity: StreamrClient must have auth: privateKey');

          case 3:
            body = {
              memberAddress: computeAddress(authKey)
            };

            if (secret) {
              body.secret = secret;
            }

            url = "".concat(this.options.restUrl, "/communities/").concat(communityAddress, "/joinRequests");
            return _context8.abrupt("return", (0, _authFetch["default"])(url, this.session, {
              method: 'POST',
              body: JSON.stringify(body),
              headers: {
                'Content-Type': 'application/json'
              }
            }));

          case 7:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8, this);
  }));
  return _joinCommunity.apply(this, arguments);
}

function hasJoined(_x13, _x14) {
  return _hasJoined.apply(this, arguments);
}
/**
 * Get stats of a single community member, including proof
 * @param {EthereumAddress} communityAddress to query
 * @param {EthereumAddress} memberAddress (optional) if not supplied, get the stats of currently logged in StreamrClient (if auth: privateKey)
 */


function _hasJoined() {
  _hasJoined = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee9(communityAddress, memberAddress) {
    var pollingIntervalMs,
        retryTimeoutMs,
        address,
        authKey,
        stats,
        startTime,
        _args9 = arguments;
    return _regenerator["default"].wrap(function _callee9$(_context9) {
      while (1) {
        switch (_context9.prev = _context9.next) {
          case 0:
            pollingIntervalMs = _args9.length > 2 && _args9[2] !== undefined ? _args9[2] : 1000;
            retryTimeoutMs = _args9.length > 3 && _args9[3] !== undefined ? _args9[3] : 60000;
            address = memberAddress;

            if (address) {
              _context9.next = 8;
              break;
            }

            authKey = this.options.auth && this.options.auth.privateKey;

            if (authKey) {
              _context9.next = 7;
              break;
            }

            throw new Error("StreamrClient wasn't authenticated with privateKey, and memberAddress argument not supplied");

          case 7:
            address = computeAddress(authKey);

          case 8:
            _context9.next = 10;
            return get(this, communityAddress, "/members/".concat(address));

          case 10:
            stats = _context9.sent;
            startTime = Date.now();

          case 12:
            if (!(stats.error && Date.now() < startTime + retryTimeoutMs)) {
              _context9.next = 21;
              break;
            }

            debug("Waiting for member ".concat(address, " to be accepted into community ").concat(communityAddress, ". Status: ").concat(JSON.stringify(stats)));
            _context9.next = 16;
            return sleep(pollingIntervalMs);

          case 16:
            _context9.next = 18;
            return get(this, communityAddress, "/members/".concat(address));

          case 18:
            stats = _context9.sent;
            _context9.next = 12;
            break;

          case 21:
            if (!stats.error) {
              _context9.next = 23;
              break;
            }

            throw new Error("Member failed to join, retried for ".concat(retryTimeoutMs, " ms. Status: ").concat(JSON.stringify(stats)));

          case 23:
          case "end":
            return _context9.stop();
        }
      }
    }, _callee9, this);
  }));
  return _hasJoined.apply(this, arguments);
}

function getMemberStats(_x15, _x16) {
  return _getMemberStats.apply(this, arguments);
}
/**
 * @typedef {Object} BalanceResponse
 * @property {BigNumber} total tokens earned less withdrawn previously, what you'd get once Operator commits the earnings to CommunityProduct contract
 * @property {BigNumber} withdrawable number of tokens that you'd get if you withdraw now
 */

/**
 * Calculate the amount of tokens the member would get from a successful withdraw
 * @param communityAddress
 * @param memberAddress
 * @return {Promise<BalanceResponse>} earnings minus withdrawn tokens
 */


function _getMemberStats() {
  _getMemberStats = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee10(communityAddress, memberAddress) {
    var address, authKey;
    return _regenerator["default"].wrap(function _callee10$(_context10) {
      while (1) {
        switch (_context10.prev = _context10.next) {
          case 0:
            address = memberAddress;

            if (address) {
              _context10.next = 6;
              break;
            }

            authKey = this.options.auth && this.options.auth.privateKey;

            if (authKey) {
              _context10.next = 5;
              break;
            }

            throw new Error("StreamrClient wasn't authenticated with privateKey, and memberAddress argument not supplied");

          case 5:
            address = computeAddress(authKey);

          case 6:
            return _context10.abrupt("return", getOrThrow(this, communityAddress, "/members/".concat(address)));

          case 7:
          case "end":
            return _context10.stop();
        }
      }
    }, _callee10, this);
  }));
  return _getMemberStats.apply(this, arguments);
}

function getBalance(_x17, _x18, _x19) {
  return _getBalance.apply(this, arguments);
} // TODO: filter? That JSON blob could be big


function _getBalance() {
  _getBalance = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee11(communityAddress, memberAddress, provider) {
    var address, authKey, stats, earningsBN, withdrawableEarningsBN, community, withdrawnBN, total, withdrawable;
    return _regenerator["default"].wrap(function _callee11$(_context11) {
      while (1) {
        switch (_context11.prev = _context11.next) {
          case 0:
            address = memberAddress;

            if (address) {
              _context11.next = 6;
              break;
            }

            authKey = this.options.auth && this.options.auth.privateKey;

            if (authKey) {
              _context11.next = 5;
              break;
            }

            throw new Error("StreamrClient wasn't authenticated with privateKey, and memberAddress argument not supplied");

          case 5:
            address = computeAddress(authKey);

          case 6:
            _context11.next = 8;
            return get(this, communityAddress, "/members/".concat(address));

          case 8:
            stats = _context11.sent;

            if (!(stats.error || stats.earnings === '0')) {
              _context11.next = 11;
              break;
            }

            return _context11.abrupt("return", {
              total: BigNumber.ZERO,
              withdrawable: BigNumber.ZERO
            });

          case 11:
            earningsBN = new BigNumber(stats.earnings);

            if (!(stats.withdrawableEarnings === '0')) {
              _context11.next = 14;
              break;
            }

            return _context11.abrupt("return", {
              total: earningsBN,
              withdrawable: BigNumber.ZERO
            });

          case 14:
            withdrawableEarningsBN = new BigNumber(stats.withdrawableEarnings);
            community = new _ethers.Contract(communityAddress, CommunityProduct.abi, provider || (0, _ethers.getDefaultProvider)());
            _context11.next = 18;
            return community.withdrawn(address);

          case 18:
            withdrawnBN = _context11.sent;
            total = earningsBN.sub(withdrawnBN);
            withdrawable = withdrawableEarningsBN.sub(withdrawnBN);
            return _context11.abrupt("return", {
              total: total,
              withdrawable: withdrawable
            });

          case 22:
          case "end":
            return _context11.stop();
        }
      }
    }, _callee11, this);
  }));
  return _getBalance.apply(this, arguments);
}

function getMembers(_x20) {
  return _getMembers.apply(this, arguments);
}

function _getMembers() {
  _getMembers = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee12(communityAddress) {
    return _regenerator["default"].wrap(function _callee12$(_context12) {
      while (1) {
        switch (_context12.prev = _context12.next) {
          case 0:
            return _context12.abrupt("return", getOrThrow(this, communityAddress, '/members'));

          case 1:
          case "end":
            return _context12.stop();
        }
      }
    }, _callee12, this);
  }));
  return _getMembers.apply(this, arguments);
}

function getCommunityStats(_x21) {
  return _getCommunityStats.apply(this, arguments);
} // //////////////////////////////////////////////////////////////////
//          member: WITHDRAW EARNINGS
// //////////////////////////////////////////////////////////////////

/**
 * Validate the proof given by the server with the smart contract (ground truth)
 * @param {EthereumAddress} communityAddress to query
 * @param {EthereumAddress} memberAddress to query
 * @param {providers.Provider} provider (optional) e.g. `wallet.provider`, default is `ethers.getDefaultProvider()` (mainnet)
 * @return {Boolean} true if proof is correct
 */


function _getCommunityStats() {
  _getCommunityStats = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee13(communityAddress) {
    return _regenerator["default"].wrap(function _callee13$(_context13) {
      while (1) {
        switch (_context13.prev = _context13.next) {
          case 0:
            return _context13.abrupt("return", getOrThrow(this, communityAddress, '/stats'));

          case 1:
          case "end":
            return _context13.stop();
        }
      }
    }, _callee13, this);
  }));
  return _getCommunityStats.apply(this, arguments);
}

function validateProof(_x22, _x23) {
  return _validateProof.apply(this, arguments);
}
/**
 * Withdraw all your earnings
 * @param {EthereumAddress} communityAddress
 * @param {EthereumOptions} options
 * @returns {Promise<providers.TransactionReceipt>} get receipt once withdraw transaction is confirmed
 */


function _validateProof() {
  _validateProof = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee14(communityAddress, options) {
    var wallet, stats, contract;
    return _regenerator["default"].wrap(function _callee14$(_context14) {
      while (1) {
        switch (_context14.prev = _context14.next) {
          case 0:
            wallet = parseWalletFromOptions(this, options);
            _context14.next = 3;
            return this.getMemberStats(communityAddress, wallet.address);

          case 3:
            stats = _context14.sent;

            if (stats.withdrawableBlockNumber) {
              _context14.next = 6;
              break;
            }

            throw new Error('No earnings to withdraw.');

          case 6:
            contract = new _ethers.Contract(communityAddress, CommunityProduct.abi, wallet);
            return _context14.abrupt("return", contract.proofIsCorrect(stats.withdrawableBlockNumber, wallet.address, stats.withdrawableEarnings, stats.proof));

          case 8:
          case "end":
            return _context14.stop();
        }
      }
    }, _callee14, this);
  }));
  return _validateProof.apply(this, arguments);
}

function withdraw(_x24, _x25) {
  return _withdraw.apply(this, arguments);
}
/**
 * Get the tx promise for withdrawing all your earnings
 * @param {EthereumAddress} communityAddress
 * @param {EthereumOptions} options
 * @returns {Promise<providers.TransactionResponse>} await on call .wait to actually send the tx
 */


function _withdraw() {
  _withdraw = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee15(communityAddress, options) {
    var tx;
    return _regenerator["default"].wrap(function _callee15$(_context15) {
      while (1) {
        switch (_context15.prev = _context15.next) {
          case 0:
            _context15.next = 2;
            return this.getWithdrawTx(communityAddress, options);

          case 2:
            tx = _context15.sent;
            return _context15.abrupt("return", tx.wait(options.confirmations || 1));

          case 4:
          case "end":
            return _context15.stop();
        }
      }
    }, _callee15, this);
  }));
  return _withdraw.apply(this, arguments);
}

function getWithdrawTx(_x26, _x27) {
  return _getWithdrawTx.apply(this, arguments);
}
/**
 * Withdraw earnings (pay gas) on behalf of another member
 * @param {EthereumAddress} memberAddress the other member who gets its tokens out of the Community
 * @param {EthereumAddress} communityAddress
 * @param {EthereumOptions} options
 * @returns {Promise<providers.TransactionReceipt>} get receipt once withdraw transaction is confirmed
 */


function _getWithdrawTx() {
  _getWithdrawTx = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee16(communityAddress, options) {
    var wallet, stats, contract;
    return _regenerator["default"].wrap(function _callee16$(_context16) {
      while (1) {
        switch (_context16.prev = _context16.next) {
          case 0:
            wallet = parseWalletFromOptions(this, options);
            _context16.next = 3;
            return this.getMemberStats(communityAddress, wallet.address);

          case 3:
            stats = _context16.sent;

            if (stats.withdrawableBlockNumber) {
              _context16.next = 6;
              break;
            }

            throw new Error("No earnings to withdraw. Server response: ".concat(JSON.stringify(stats)));

          case 6:
            contract = new _ethers.Contract(communityAddress, CommunityProduct.abi, wallet);
            return _context16.abrupt("return", contract.withdrawAll(stats.withdrawableBlockNumber, stats.withdrawableEarnings, stats.proof));

          case 8:
          case "end":
            return _context16.stop();
        }
      }
    }, _callee16, this);
  }));
  return _getWithdrawTx.apply(this, arguments);
}

function withdrawFor(_x28, _x29, _x30) {
  return _withdrawFor.apply(this, arguments);
}
/**
 * Get the tx promise for withdrawing all earnings on behalf of another member
 * @param {EthereumAddress} communityAddress
 * @param {EthereumOptions} options
 * @returns {Promise<providers.TransactionResponse>} await on call .wait to actually send the tx
 */


function _withdrawFor() {
  _withdrawFor = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee17(memberAddress, communityAddress, options) {
    var tx;
    return _regenerator["default"].wrap(function _callee17$(_context17) {
      while (1) {
        switch (_context17.prev = _context17.next) {
          case 0:
            _context17.next = 2;
            return this.getWithdrawTxFor(memberAddress, communityAddress, options);

          case 2:
            tx = _context17.sent;
            return _context17.abrupt("return", tx.wait(options.confirmations || 1));

          case 4:
          case "end":
            return _context17.stop();
        }
      }
    }, _callee17, this);
  }));
  return _withdrawFor.apply(this, arguments);
}

function getWithdrawTxFor(_x31, _x32, _x33) {
  return _getWithdrawTxFor.apply(this, arguments);
}
/**
 * Withdraw earnings and "donate" them to the given address
 * @param {EthereumAddress} communityAddress
 * @param {EthereumAddress} recipientAddress the other member who gets its tokens out of the Community
 * @param {EthereumOptions} options
 * @returns {Promise<providers.TransactionReceipt>} get receipt once withdraw transaction is confirmed
 */


function _getWithdrawTxFor() {
  _getWithdrawTxFor = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee18(memberAddress, communityAddress, options) {
    var stats, wallet, contract;
    return _regenerator["default"].wrap(function _callee18$(_context18) {
      while (1) {
        switch (_context18.prev = _context18.next) {
          case 0:
            _context18.next = 2;
            return this.getMemberStats(communityAddress, memberAddress);

          case 2:
            stats = _context18.sent;

            if (stats.withdrawableBlockNumber) {
              _context18.next = 5;
              break;
            }

            throw new Error("No earnings to withdraw. Server response: ".concat(JSON.stringify(stats)));

          case 5:
            wallet = parseWalletFromOptions(this, options);
            contract = new _ethers.Contract(communityAddress, CommunityProduct.abi, wallet);
            return _context18.abrupt("return", contract.withdrawAllFor(memberAddress, stats.withdrawableBlockNumber, stats.withdrawableEarnings, stats.proof));

          case 8:
          case "end":
            return _context18.stop();
        }
      }
    }, _callee18, this);
  }));
  return _getWithdrawTxFor.apply(this, arguments);
}

function withdrawTo(_x34, _x35, _x36) {
  return _withdrawTo.apply(this, arguments);
}
/**
 * Withdraw earnings and "donate" them to the given address
 * @param {EthereumAddress} communityAddress
 * @param {EthereumAddress} recipientAddress the other member who gets its tokens out of the Community
 * @param {EthereumOptions} options
 * @returns {Promise<providers.TransactionResponse>} await on call .wait to actually send the tx
 */


function _withdrawTo() {
  _withdrawTo = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee19(recipientAddress, communityAddress, options) {
    var tx;
    return _regenerator["default"].wrap(function _callee19$(_context19) {
      while (1) {
        switch (_context19.prev = _context19.next) {
          case 0:
            _context19.next = 2;
            return this.getWithdrawTxTo(recipientAddress, communityAddress, options);

          case 2:
            tx = _context19.sent;
            return _context19.abrupt("return", tx.wait(options.confirmations || 1));

          case 4:
          case "end":
            return _context19.stop();
        }
      }
    }, _callee19, this);
  }));
  return _withdrawTo.apply(this, arguments);
}

function getWithdrawTxTo(_x37, _x38, _x39) {
  return _getWithdrawTxTo.apply(this, arguments);
} // //////////////////////////////////////////////////////////////////
//          admin: MANAGE COMMUNITY
// //////////////////////////////////////////////////////////////////

/**
 * Directly poke into joinPartStream, circumventing EE joinRequest tools etc.
 * Obviously requires write access to the stream, so only available to admins
 * TODO: find a way to check that the join/part has gone through and been registered by the server
 */


function _getWithdrawTxTo() {
  _getWithdrawTxTo = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee20(recipientAddress, communityAddress, options) {
    var wallet, stats, contract;
    return _regenerator["default"].wrap(function _callee20$(_context20) {
      while (1) {
        switch (_context20.prev = _context20.next) {
          case 0:
            wallet = parseWalletFromOptions(this, options);
            _context20.next = 3;
            return this.getMemberStats(communityAddress, wallet.address);

          case 3:
            stats = _context20.sent;

            if (stats.withdrawableBlockNumber) {
              _context20.next = 6;
              break;
            }

            throw new Error("No earnings to withdraw. Server response: ".concat(JSON.stringify(stats)));

          case 6:
            contract = new _ethers.Contract(communityAddress, CommunityProduct.abi, wallet);
            return _context20.abrupt("return", contract.withdrawAllTo(recipientAddress, stats.withdrawableBlockNumber, stats.withdrawableEarnings, stats.proof, options));

          case 8:
          case "end":
            return _context20.stop();
        }
      }
    }, _callee20, this);
  }));
  return _getWithdrawTxTo.apply(this, arguments);
}

function sendToJoinPartStream(_x40, _x41, _x42, _x43, _x44) {
  return _sendToJoinPartStream.apply(this, arguments);
}
/**
 * Kick given members from community
 * @param {EthereumAddress} communityAddress to manage
 * @param {List<EthereumAddress>} memberAddressList to kick
 * @param {providers.Provider} provider (optional) default is mainnet
 */


function _sendToJoinPartStream() {
  _sendToJoinPartStream = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee21(client, type, communityAddress, addresses, provider) {
    var contract, joinPartStreamId;
    return _regenerator["default"].wrap(function _callee21$(_context21) {
      while (1) {
        switch (_context21.prev = _context21.next) {
          case 0:
            contract = new _ethers.Contract(communityAddress, CommunityProduct.abi, provider || (0, _ethers.getDefaultProvider)());
            _context21.next = 3;
            return contract.joinPartStream();

          case 3:
            joinPartStreamId = _context21.sent;
            return _context21.abrupt("return", client.publish(joinPartStreamId, {
              type: type,
              addresses: addresses
            }));

          case 5:
          case "end":
            return _context21.stop();
        }
      }
    }, _callee21);
  }));
  return _sendToJoinPartStream.apply(this, arguments);
}

function kick(_x45, _x46, _x47) {
  return _kick.apply(this, arguments);
}
/**
 * Add given Ethereum addresses as community members
 * @param {EthereumAddress} communityAddress to manage
 * @param {List<EthereumAddress>} memberAddressList to kick
 * @param {providers.Provider} provider (optional) default is mainnet
 */


function _kick() {
  _kick = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee22(communityAddress, memberAddressList, provider) {
    return _regenerator["default"].wrap(function _callee22$(_context22) {
      while (1) {
        switch (_context22.prev = _context22.next) {
          case 0:
            return _context22.abrupt("return", sendToJoinPartStream(this, 'part', communityAddress, memberAddressList, provider));

          case 1:
          case "end":
            return _context22.stop();
        }
      }
    }, _callee22, this);
  }));
  return _kick.apply(this, arguments);
}

function addMembers(_x48, _x49, _x50) {
  return _addMembers.apply(this, arguments);
}

function _addMembers() {
  _addMembers = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee23(communityAddress, memberAddressList, provider) {
    return _regenerator["default"].wrap(function _callee23$(_context23) {
      while (1) {
        switch (_context23.prev = _context23.next) {
          case 0:
            return _context23.abrupt("return", sendToJoinPartStream(this, 'join', communityAddress, memberAddressList, provider));

          case 1:
          case "end":
            return _context23.stop();
        }
      }
    }, _callee23, this);
  }));
  return _addMembers.apply(this, arguments);
}

/***/ }),
/* 53 */
/***/ (function(module) {

module.exports = JSON.parse("{\"contractName\":\"CommunityProduct\",\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"name\":\"totalEarnings\",\"type\":\"uint256\"},{\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"withdrawAllTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"balance\",\"type\":\"uint256\"},{\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"prove\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"name\":\"totalEarnings\",\"type\":\"uint256\"},{\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalWithdrawn\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"joinPartStream\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"earnings\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"name\":\"totalEarnings\",\"type\":\"uint256\"},{\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"withdrawAllFor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"others\",\"type\":\"bytes32[]\"}],\"name\":\"calculateRootHash\",\"outputs\":[{\"name\":\"root\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawn\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"blockFreezeSeconds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"blockTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"blockHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_adminFee\",\"type\":\"uint256\"}],\"name\":\"setAdminFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"adminFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalProven\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"name\":\"rootHash\",\"type\":\"bytes32\"},{\"name\":\"ipfsHash\",\"type\":\"string\"}],\"name\":\"commit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"balance\",\"type\":\"uint256\"},{\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"proofIsCorrect\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"operator\",\"type\":\"address\"},{\"name\":\"joinPartStreamId\",\"type\":\"string\"},{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"blockFreezePeriodSeconds\",\"type\":\"uint256\"},{\"name\":\"adminFeeFraction\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"OperatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"adminFee\",\"type\":\"uint256\"}],\"name\":\"AdminFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"rootHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"ipfsHash\",\"type\":\"string\"}],\"name\":\"BlockCreated\",\"type\":\"event\"}],\"bytecode\":\"0x60806040523480156200001157600080fd5b506040516200267d3803806200267d833981018060405281019080805190602001909291908051820192919060200180519060200190929190805190602001909291908051906020019092919050505082828233600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160038190555082600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001488162000189640100000000026401000000009004565b505050620001658562000339640100000000026401000000009004565b83600c90805190602001906200017d92919062000486565b50505050505062000535565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156200024f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f6f6e6c794f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b670de0b6b3a764000060065411151515620002f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f41646d696e206665652063616e6e6f742062652067726561746572207468616e81526020017f203100000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b806006819055507f11a80b766155f9b8f16a7da44d66269fd694cb1c247f4814244586f68dd53487816040518082815260200191505060405180910390a150565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515620003ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f6f6e6c794f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5460405160405180910390a250565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004c957805160ff1916838001178555620004fa565b82800160010185558215620004fa579182015b82811115620004f9578251825591602001919060010190620004dc565b5b5090506200050991906200050d565b5090565b6200053291905b808211156200052e57600081600090555060010162000514565b5090565b90565b61213880620005456000396000f30060806040526004361061015f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063270231cc146101645780632e1a7d4d146101d357806332ef2b24146102005780634942e4cf1461029a5780634b319713146102e95780634beb62b7146103145780634e71e0c8146103a4578063543fd313146103bb578063570ca735146104125780636c7a9d24146104695780636dd4a7c9146105035780636ef610921461059357806371b15013146105ea57806373d8903b1461061557806385df51fd146106565780638beb60b61461069f5780638da5cb5b146106cc578063a0be06f914610723578063b3ab15fb1461074e578063b74d784e14610791578063c3ac610d146107bc578063c3b35a7e1461080f578063cb9b51c81461087c578063db518db21461092e578063e30c39781461097b578063f2fde38b146109d2578063fc0c546a14610a15575b600080fd5b34801561017057600080fd5b506101d1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001908201803590602001919091929391929390505050610a6c565b005b3480156101df57600080fd5b506101fe60048036038101908080359060200190929190505050610b10565b005b34801561020c57600080fd5b5061029860048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050610b1e565b005b3480156102a657600080fd5b506102e76004803603810190808035906020019092919080359060200190929190803590602001908201803590602001919091929391929390505050610baf565b005b3480156102f557600080fd5b506102fe610bf0565b6040518082815260200191505060405180910390f35b34801561032057600080fd5b50610329610bf6565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561036957808201518184015260208101905061034e565b50505050905090810190601f1680156103965780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103b057600080fd5b506103b9610c94565b005b3480156103c757600080fd5b506103fc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e9e565b6040518082815260200191505060405180910390f35b34801561041e57600080fd5b50610427610eb6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561047557600080fd5b50610501600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050610edc565b005b34801561050f57600080fd5b50610575600480360381019080803560001916906020019092919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050610f50565b60405180826000191660001916815260200191505060405180910390f35b34801561059f57600080fd5b506105d4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110ff565b6040518082815260200191505060405180910390f35b3480156105f657600080fd5b506105ff611117565b6040518082815260200191505060405180910390f35b34801561062157600080fd5b506106406004803603810190808035906020019092919050505061111d565b6040518082815260200191505060405180910390f35b34801561066257600080fd5b5061068160048036038101908080359060200190929190505050611135565b60405180826000191660001916815260200191505060405180910390f35b3480156106ab57600080fd5b506106ca6004803603810190808035906020019092919050505061114d565b005b3480156106d857600080fd5b506106e16112fb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561072f57600080fd5b50610738611321565b6040518082815260200191505060405180910390f35b34801561075a57600080fd5b5061078f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611327565b005b34801561079d57600080fd5b506107a6611473565b6040518082815260200191505060405180910390f35b3480156107c857600080fd5b5061080d600480360381019080803590602001909291908035600019169060200190929190803590602001908201803590602001919091929391929390505050611479565b005b34801561081b57600080fd5b5061087a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611622565b005b34801561088857600080fd5b5061091460048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929050505061197f565b604051808215151515815260200191505060405180910390f35b34801561093a57600080fd5b50610979600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b00565b005b34801561098757600080fd5b50610990611b0f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156109de57600080fd5b50610a13600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b35565b005b348015610a2157600080fd5b50610a2a611c3e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000610aa9853386868680806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050610b1e565b610afb600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205485611c6490919063ffffffff16565b9050610b08863383611622565b505050505050565b610b1b333383611622565b50565b610b2a8484848461197f565b1515610b9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f6572726f725f70726f6f6600000000000000000000000000000000000000000081525060200191505060405180910390fd5b610ba9848484611c85565b50505050565b610bea338585858580806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050610edc565b50505050565b600a5481565b600c8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c8c5780601f10610c6157610100808354040283529160200191610c8c565b820191906000526020600020905b815481529060010190602001808311610c6f57829003601f168201915b505050505081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d59576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f6f6e6c7950656e64696e674f776e65720000000000000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60086020528060005260406000206000915090505481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610eea84868585610b1e565b610f3c600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484611c6490919063ffffffff16565b9050610f49858683611622565b5050505050565b6000806000849250600091505b83518260ff1610156110f757838260ff16815181101515610f7a57fe5b906020019060200201519050600060010281600019161415610f9b576110ea565b80600019168360001916101561104c5782816040516020018083600019166000191681526020018260001916600019168152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156110185780518252602082019150602081019050602083039250610ff3565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902092506110e9565b80836040516020018083600019166000191681526020018260001916600019168152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156110b95780518252602082019150602081019050602083039250611094565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902092505b5b8180600101925050610f5d565b505092915050565b60096020528060005260406000206000915090505481565b60035481565b60046020528060005260406000206000915090505481565b60006020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611212576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f6f6e6c794f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b670de0b6b3a7640000600654111515156112ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f41646d696e206665652063616e6e6f742062652067726561746572207468616e81526020017f203100000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b806006819055507f11a80b766155f9b8f16a7da44d66269fd694cb1c247f4814244586f68dd53487816040518082815260200191505060405180910390a150565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f6f6e6c794f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5460405160405180910390a250565b600b5481565b60606000600102600080878152602001908152602001600020546000191614151561150c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6572726f725f6f7665727772697465000000000000000000000000000000000081525060200191505060405180910390fd5b82828080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050905061154c858583612009565b8360008087815260200190815260200160002081600019169055507f4268b0369742123cb8066ef715ccf53f3f1f710b5894e43e1ba1d159ed64e4c185858360405180848152602001836000191660001916815260200180602001828103825283818151815260200191508051906020019080838360005b838110156115df5780820151818401526020810190506115c4565b50505050905090810190601f16801561160c5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a15050505050565b6000808211151561169b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6572726f725f7a65726f5769746864726177000000000000000000000000000081525060200191505060405180910390fd5b6116ed82600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546120eb90919063ffffffff16565b9050600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481111515156117a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6572726f725f6f7665726472616674000000000000000000000000000000000081525060200191505060405180910390fd5b80600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506117ff82600a546120eb90919063ffffffff16565b600a81905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156118ca57600080fd5b505af11580156118de573d6000803e3d6000fd5b505050506040513d60208110156118f457600080fd5b81019080805190602001909291905050501515611979576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f6572726f725f7472616e7366657200000000000000000000000000000000000081525060200191505060405180910390fd5b50505050565b60008060008585604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083101515611a1c57805182526020820191506020810190506020830392506119f7565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902091506000808881526020019081526020016000205490506000600102816000191614151515611ae0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6572726f725f626c6f636b4e6f74466f756e640000000000000000000000000081525060200191505060405180910390fd5b611aea8285610f50565b6000191681600019161492505050949350505050565b611b0b828383611622565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611bfa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f6f6e6c794f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080838311151515611c7657600080fd5b82840390508091505092915050565b600060046000858152602001908152602001600020549050600354810142111515611d18576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f6572726f725f66726f7a656e000000000000000000000000000000000000000081525060200191505060405180910390fd5b81600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515611dce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6572726f725f6f6c644561726e696e677300000000000000000000000000000081525060200191505060405180910390fd5b611e34600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e2684600b546120eb90919063ffffffff16565b611c6490919063ffffffff16565b600b81905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015611ef757600080fd5b505af1158015611f0b573d6000803e3d6000fd5b505050506040513d6020811015611f2157600080fd5b8101908080519060200190929190505050611f49600a54600b54611c6490919063ffffffff16565b11151515611fbf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6572726f725f6d697373696e6742616c616e636500000000000000000000000081525060200191505060405180910390fd5b81600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156120ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6572726f725f6e6f745065726d6974746564000000000000000000000000000081525060200191505060405180910390fd5b426004600085815260200190815260200160002081905550505050565b600080828401905083811015151561210257600080fd5b80915050929150505600a165627a7a72305820f639b0bb3911390662ef6be207c48280821a3429d59a459fb7a3ee03262554600029\",\"deployedBytecode\":\"0x60806040526004361061015f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063270231cc146101645780632e1a7d4d146101d357806332ef2b24146102005780634942e4cf1461029a5780634b319713146102e95780634beb62b7146103145780634e71e0c8146103a4578063543fd313146103bb578063570ca735146104125780636c7a9d24146104695780636dd4a7c9146105035780636ef610921461059357806371b15013146105ea57806373d8903b1461061557806385df51fd146106565780638beb60b61461069f5780638da5cb5b146106cc578063a0be06f914610723578063b3ab15fb1461074e578063b74d784e14610791578063c3ac610d146107bc578063c3b35a7e1461080f578063cb9b51c81461087c578063db518db21461092e578063e30c39781461097b578063f2fde38b146109d2578063fc0c546a14610a15575b600080fd5b34801561017057600080fd5b506101d1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001908201803590602001919091929391929390505050610a6c565b005b3480156101df57600080fd5b506101fe60048036038101908080359060200190929190505050610b10565b005b34801561020c57600080fd5b5061029860048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050610b1e565b005b3480156102a657600080fd5b506102e76004803603810190808035906020019092919080359060200190929190803590602001908201803590602001919091929391929390505050610baf565b005b3480156102f557600080fd5b506102fe610bf0565b6040518082815260200191505060405180910390f35b34801561032057600080fd5b50610329610bf6565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561036957808201518184015260208101905061034e565b50505050905090810190601f1680156103965780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103b057600080fd5b506103b9610c94565b005b3480156103c757600080fd5b506103fc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e9e565b6040518082815260200191505060405180910390f35b34801561041e57600080fd5b50610427610eb6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561047557600080fd5b50610501600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050610edc565b005b34801561050f57600080fd5b50610575600480360381019080803560001916906020019092919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050610f50565b60405180826000191660001916815260200191505060405180910390f35b34801561059f57600080fd5b506105d4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110ff565b6040518082815260200191505060405180910390f35b3480156105f657600080fd5b506105ff611117565b6040518082815260200191505060405180910390f35b34801561062157600080fd5b506106406004803603810190808035906020019092919050505061111d565b6040518082815260200191505060405180910390f35b34801561066257600080fd5b5061068160048036038101908080359060200190929190505050611135565b60405180826000191660001916815260200191505060405180910390f35b3480156106ab57600080fd5b506106ca6004803603810190808035906020019092919050505061114d565b005b3480156106d857600080fd5b506106e16112fb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561072f57600080fd5b50610738611321565b6040518082815260200191505060405180910390f35b34801561075a57600080fd5b5061078f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611327565b005b34801561079d57600080fd5b506107a6611473565b6040518082815260200191505060405180910390f35b3480156107c857600080fd5b5061080d600480360381019080803590602001909291908035600019169060200190929190803590602001908201803590602001919091929391929390505050611479565b005b34801561081b57600080fd5b5061087a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611622565b005b34801561088857600080fd5b5061091460048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929050505061197f565b604051808215151515815260200191505060405180910390f35b34801561093a57600080fd5b50610979600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b00565b005b34801561098757600080fd5b50610990611b0f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156109de57600080fd5b50610a13600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b35565b005b348015610a2157600080fd5b50610a2a611c3e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000610aa9853386868680806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050610b1e565b610afb600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205485611c6490919063ffffffff16565b9050610b08863383611622565b505050505050565b610b1b333383611622565b50565b610b2a8484848461197f565b1515610b9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f6572726f725f70726f6f6600000000000000000000000000000000000000000081525060200191505060405180910390fd5b610ba9848484611c85565b50505050565b610bea338585858580806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050610edc565b50505050565b600a5481565b600c8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c8c5780601f10610c6157610100808354040283529160200191610c8c565b820191906000526020600020905b815481529060010190602001808311610c6f57829003601f168201915b505050505081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d59576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f6f6e6c7950656e64696e674f776e65720000000000000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60086020528060005260406000206000915090505481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610eea84868585610b1e565b610f3c600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484611c6490919063ffffffff16565b9050610f49858683611622565b5050505050565b6000806000849250600091505b83518260ff1610156110f757838260ff16815181101515610f7a57fe5b906020019060200201519050600060010281600019161415610f9b576110ea565b80600019168360001916101561104c5782816040516020018083600019166000191681526020018260001916600019168152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156110185780518252602082019150602081019050602083039250610ff3565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902092506110e9565b80836040516020018083600019166000191681526020018260001916600019168152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156110b95780518252602082019150602081019050602083039250611094565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902092505b5b8180600101925050610f5d565b505092915050565b60096020528060005260406000206000915090505481565b60035481565b60046020528060005260406000206000915090505481565b60006020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611212576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f6f6e6c794f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b670de0b6b3a7640000600654111515156112ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f41646d696e206665652063616e6e6f742062652067726561746572207468616e81526020017f203100000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b806006819055507f11a80b766155f9b8f16a7da44d66269fd694cb1c247f4814244586f68dd53487816040518082815260200191505060405180910390a150565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f6f6e6c794f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5460405160405180910390a250565b600b5481565b60606000600102600080878152602001908152602001600020546000191614151561150c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6572726f725f6f7665727772697465000000000000000000000000000000000081525060200191505060405180910390fd5b82828080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050905061154c858583612009565b8360008087815260200190815260200160002081600019169055507f4268b0369742123cb8066ef715ccf53f3f1f710b5894e43e1ba1d159ed64e4c185858360405180848152602001836000191660001916815260200180602001828103825283818151815260200191508051906020019080838360005b838110156115df5780820151818401526020810190506115c4565b50505050905090810190601f16801561160c5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a15050505050565b6000808211151561169b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6572726f725f7a65726f5769746864726177000000000000000000000000000081525060200191505060405180910390fd5b6116ed82600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546120eb90919063ffffffff16565b9050600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481111515156117a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6572726f725f6f7665726472616674000000000000000000000000000000000081525060200191505060405180910390fd5b80600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506117ff82600a546120eb90919063ffffffff16565b600a81905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156118ca57600080fd5b505af11580156118de573d6000803e3d6000fd5b505050506040513d60208110156118f457600080fd5b81019080805190602001909291905050501515611979576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f6572726f725f7472616e7366657200000000000000000000000000000000000081525060200191505060405180910390fd5b50505050565b60008060008585604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083101515611a1c57805182526020820191506020810190506020830392506119f7565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902091506000808881526020019081526020016000205490506000600102816000191614151515611ae0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6572726f725f626c6f636b4e6f74466f756e640000000000000000000000000081525060200191505060405180910390fd5b611aea8285610f50565b6000191681600019161492505050949350505050565b611b0b828383611622565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611bfa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f6f6e6c794f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080838311151515611c7657600080fd5b82840390508091505092915050565b600060046000858152602001908152602001600020549050600354810142111515611d18576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f6572726f725f66726f7a656e000000000000000000000000000000000000000081525060200191505060405180910390fd5b81600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515611dce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6572726f725f6f6c644561726e696e677300000000000000000000000000000081525060200191505060405180910390fd5b611e34600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e2684600b546120eb90919063ffffffff16565b611c6490919063ffffffff16565b600b81905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015611ef757600080fd5b505af1158015611f0b573d6000803e3d6000fd5b505050506040513d6020811015611f2157600080fd5b8101908080519060200190929190505050611f49600a54600b54611c6490919063ffffffff16565b11151515611fbf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6572726f725f6d697373696e6742616c616e636500000000000000000000000081525060200191505060405180910390fd5b81600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156120ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6572726f725f6e6f745065726d6974746564000000000000000000000000000081525060200191505060405180910390fd5b426004600085815260200190815260200160002081905550505050565b600080828401905083811015151561210257600080fd5b80915050929150505600a165627a7a72305820f639b0bb3911390662ef6be207c48280821a3429d59a459fb7a3ee03262554600029\",\"sourceMap\":\"73:376:0:-;;;155:292;8:9:-1;5:2;;;30:1;27;20:12;5:2;155:292:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;301:12;315:24;341:16;574:10:4;566:5;;:18;;;;;;;;;;;;;;;;;;1952:24:3;1931:18;:45;;;;2001:12;1986:5;;:28;;;;;;;;;;;;;;;;;;2035:10;2024:8;;:21;;;;;;;;;;;;;;;;;;2055:22;2067:9;2055:11;;;:22;;;:::i;:::-;1833:251;;;376:21:0;388:8;376:11;;;:21;;;:::i;:::-;424:16;407:14;:33;;;;;;;;;;;;:::i;:::-;;155:292;;;;;73:376;;2440:208:3;732:5:4;;;;;;;;;;;718:19;;:10;:19;;;710:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2524:7:3;2512:8;;:19;;2504:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2591:9;2580:8;:20;;;;2615:26;2631:9;2615:26;;;;;;;;;;;;;;;;;;2440:208;:::o;2090:141::-;732:5:4;;;;;;;;;;;718:19;;:10;:19;;;710:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2170:11:3;2159:8;;:22;;;;;;;;;;;;;;;;;;2212:11;2196:28;;;;;;;;;;;;2090:141;:::o;73:376:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;\",\"deployedSourceMap\":\"73:376:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5181:302:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5181:302:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5591:97;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5591:97:3;;;;;;;;;;;;;;;;;;;;;;;;;;3684:244:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3684:244:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3897:163:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3897:163:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1771:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1771:26:3;;;;;;;;;;;;;;;;;;;;;;;120:28:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;120:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;120:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:226:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1116:226:4;;;;;;1676:41:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1676:41:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1557:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1557:23:3;;;;;;;;;;;;;;;;;;;;;;;;;;;4483:298;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4483:298:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4576:502:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4576:502:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1723:42:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1723:42:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1176:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1176:30:3;;;;;;;;;;;;;;;;;;;;;;;1506:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1506:44:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1959:42:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1959:42:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2440:208:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2440:208:3;;;;;;;;;;;;;;;;;;;;;;;;;;239:20:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;239:20:4;;;;;;;;;;;;;;;;;;;;;;;;;;;1623::3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1623:20:3;;;;;;;;;;;;;;;;;;;;;;;2090:141;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2090:141:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1803:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1803:23:3;;;;;;;;;;;;;;;;;;;;;;;2996:338:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2996:338:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6245:398:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6245:398:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4039:367:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4039:367:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5873:117:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5873:117:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;265:27:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;265:27:4;;;;;;;;;;;;;;;;;;;;;;;;;;;922:102;;8:9:-1;5:2;;;30:1;27;20:12;5:2;922:102:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;1650:19:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1650:19:3;;;;;;;;;;;;;;;;;;;;;;;;;;;5181:302;5359:17;5297:52;5303:11;5316:10;5328:13;5343:5;;5297:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:5;:52::i;:::-;5379:40;5397:9;:21;5407:10;5397:21;;;;;;;;;;;;;;;;5379:13;:17;;:40;;;;:::i;:::-;5359:60;;5429:47;5440:9;5451:10;5463:12;5429:10;:47::i;:::-;5181:302;;;;;;:::o;5591:97::-;5639:42;5650:10;5662;5674:6;5639:10;:42::i;:::-;5591:97;:::o;3684:244:2:-;3797:52;3812:11;3825:7;3834;3843:5;3797:14;:52::i;:::-;3789:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3875:46;3891:11;3904:7;3913;3875:15;:46::i;:::-;3684:244;;;;:::o;3897:163:3:-;3992:61;4007:10;4019:11;4032:13;4047:5;;3992:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:61::i;:::-;3897:163;;;;:::o;1771:26::-;;;;:::o;120:28:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1116:226:4:-;1181:12;;;;;;;;;;;1167:26;;:10;:26;;;1159:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1257:12;;;;;;;;;;;1229:41;;1250:5;;;;;;;;;;;1229:41;;;;;;;;;;;;1288:12;;;;;;;;;;;1280:5;;:20;;;;;;;;;;;;;;;;;;1333:1;1310:12;;:25;;;;;;;;;;;;;;;;;;1116:226::o;1676:41:3:-;;;;;;;;;;;;;;;;;:::o;1557:23::-;;;;;;;;;;;;;:::o;4483:298::-;4659:17;4598:51;4604:11;4617:9;4628:13;4643:5;4598;:51::i;:::-;4679:39;4697:9;:20;4707:9;4697:20;;;;;;;;;;;;;;;;4679:13;:17;;:39;;;;:::i;:::-;4659:59;;4728:46;4739:9;4750;4761:12;4728:10;:46::i;:::-;4483:298;;;;;:::o;4576:502:2:-;4663:12;4713:7;4764:13;4694:4;4687:11;;4723:1;4713:11;;4708:364;4730:6;:13;4726:1;:17;;;4708:364;;;4780:6;4787:1;4780:9;;;;;;;;;;;;;;;;;;;;4764:25;;4816:3;4807:12;;:5;:12;;;;4803:26;;;4821:8;;4803:26;4889:5;4882:12;;;:4;:12;;;;4878:184;;;4948:4;4954:5;4931:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4931:29:2;;;4921:40;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4921:40:2;;;;;;;;;;;;;;;;4914:47;;4878:184;;;5034:5;5041:4;5017:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5017:29:2;;;5007:40;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5007:40:2;;;;;;;;;;;;;;;;5000:47;;4878:184;4708:364;4745:3;;;;;;;4708:364;;;4576:502;;;;;;:::o;1723:42:3:-;;;;;;;;;;;;;;;;;:::o;1176:30::-;;;;:::o;1506:44::-;;;;;;;;;;;;;;;;;:::o;1959:42:2:-;;;;;;;;;;;;;;;;;:::o;2440:208:3:-;732:5:4;;;;;;;;;;;718:19;;:10;:19;;;710:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2524:7:3;2512:8;;:19;;2504:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2591:9;2580:8;:20;;;;2615:26;2631:9;2615:26;;;;;;;;;;;;;;;;;;2440:208;:::o;239:20:4:-;;;;;;;;;;;;;:::o;1623::3:-;;;;:::o;2090:141::-;732:5:4;;;;;;;;;;;718:19;;:10;:19;;;710:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2170:11:3;2159:8;;:22;;;;;;;;;;;;;;;;;;2212:11;2196:28;;;;;;;;;;;;2090:141;:::o;1803:23::-;;;;:::o;2996:338:2:-;3149:19;3118:1;3092:27;;:9;:22;3102:11;3092:22;;;;;;;;;;;;:27;;;;3084:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3171:8;;3149:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3189:38;3198:11;3211:8;3221:5;3189:8;:38::i;:::-;3262:8;3237:9;:22;3247:11;3237:22;;;;;;;;;;;:33;;;;;;;3285:42;3298:11;3311:8;3321:5;3285:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3285:42:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2996:338;;;;;:::o;6245:398:3:-;6382:6;6348:1;6339:6;:10;6331:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6391:30;6414:6;6391:9;:18;6401:7;6391:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;6382:39;;6444:8;:17;6453:7;6444:17;;;;;;;;;;;;;;;;6439:1;:22;;6431:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6512:1;6491:9;:18;6501:7;6491:18;;;;;;;;;;;;;;;:22;;;;6540:26;6559:6;6540:14;;:18;;:26;;;;:::i;:::-;6523:14;:43;;;;6584:5;;;;;;;;;;;:14;;;6599:9;6610:6;6584:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6584:33:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6584:33:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6584:33:3;;;;;;;;;;;;;;;;6576:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6245:398;;;;:::o;4039:367:2:-;4156:4;4172:12;4242:16;4214:7;4223;4197:34;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4197:34:2;;;4187:45;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4187:45:2;;;;;;;;;;;;;;;;4172:60;;4261:9;:22;4271:11;4261:22;;;;;;;;;;;;4242:41;;4313:3;4301:15;;:8;:15;;;;;4293:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4369:30;4387:4;4393:5;4369:17;:30::i;:::-;4357:42;;;:8;:42;;;;4350:49;;4039:367;;;;;;;;:::o;5873:117:3:-;5943:40;5954:9;5965;5976:6;5943:10;:40::i;:::-;5873:117;;:::o;265:27:4:-;;;;;;;;;;;;;:::o;922:102::-;732:5;;;;;;;;;;;718:19;;:10;:19;;;710:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1009:8;994:12;;:23;;;;;;;;;;;;;;;;;;922:102;:::o;1650:19:3:-;;;;;;;;;;;;;:::o;1078:131:7:-;1136:7;1172:9;1164:1;1159;:6;;1151:15;;;;;;;;1188:1;1184;:5;1172:17;;1203:1;1196:8;;1078:131;;;;;:::o;3116:519:3:-;3213:21;3237:14;:27;3252:11;3237:27;;;;;;;;;;;;3213:51;;3307:18;;3288:16;:37;3282:3;:43;3274:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3380:11;3360:8;:17;3369:7;3360:17;;;;;;;;;;;;;;;;:31;3352:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3437:51;3470:8;:17;3479:7;3470:17;;;;;;;;;;;;;;;;3437:28;3453:11;3437;;:15;;:28;;;;:::i;:::-;:32;;:51;;;;:::i;:::-;3423:11;:65;;;;3541:5;;;;;;;;;;;:15;;;3557:4;3541:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3541:21:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3541:21:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3541:21:3;;;;;;;;;;;;;;;;3506:31;3522:14;;3506:11;;:15;;:31;;;;:::i;:::-;:56;;3498:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3617:11;3597:8;:17;3606:7;3597:17;;;;;;;;;;;;;;;:31;;;;3116:519;;;;:::o;2716:175::-;2810:8;;;;;;;;;;;2796:22;;:10;:22;;;2788:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2881:3;2851:14;:27;2866:11;2851:27;;;;;;;;;;;:33;;;;2716:175;;;:::o;1272:131:7:-;1330:7;1345:9;1361:1;1357;:5;1345:17;;1381:1;1376;:6;;1368:15;;;;;;;;1397:1;1390:8;;1272:131;;;;;:::o\",\"source\":\"pragma solidity ^0.4.24;\\n\\nimport \\\"monoplasma/contracts/Monoplasma.sol\\\";\\n\\ncontract CommunityProduct is Monoplasma {\\n\\n    string public joinPartStream;\\n\\n    constructor(address operator, string joinPartStreamId, address tokenAddress, uint blockFreezePeriodSeconds, uint adminFeeFraction)\\n    Monoplasma(tokenAddress, blockFreezePeriodSeconds, adminFeeFraction) public {\\n        setOperator(operator);\\n        joinPartStream = joinPartStreamId;\\n    }\\n}\",\"sourcePath\":\"/home/fj/isentropy/streamr/streamr-community-products/contracts/CommunityProduct.sol\",\"ast\":{\"absolutePath\":\"/home/fj/isentropy/streamr/streamr-community-products/contracts/CommunityProduct.sol\",\"exportedSymbols\":{\"CommunityProduct\":[34]},\"id\":35,\"nodeType\":\"SourceUnit\",\"nodes\":[{\"id\":1,\"literals\":[\"solidity\",\"^\",\"0.4\",\".24\"],\"nodeType\":\"PragmaDirective\",\"src\":\"0:24:0\"},{\"absolutePath\":\"monoplasma/contracts/Monoplasma.sol\",\"file\":\"monoplasma/contracts/Monoplasma.sol\",\"id\":2,\"nodeType\":\"ImportDirective\",\"scope\":35,\"sourceUnit\":658,\"src\":\"26:45:0\",\"symbolAliases\":[],\"unitAlias\":\"\"},{\"baseContracts\":[{\"arguments\":null,\"baseName\":{\"contractScope\":null,\"id\":3,\"name\":\"Monoplasma\",\"nodeType\":\"UserDefinedTypeName\",\"referencedDeclaration\":657,\"src\":\"102:10:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_contract$_Monoplasma_$657\",\"typeString\":\"contract Monoplasma\"}},\"id\":4,\"nodeType\":\"InheritanceSpecifier\",\"src\":\"102:10:0\"}],\"contractDependencies\":[277,657,730],\"contractKind\":\"contract\",\"documentation\":null,\"fullyImplemented\":true,\"id\":34,\"linearizedBaseContracts\":[34,657,730,277],\"name\":\"CommunityProduct\",\"nodeType\":\"ContractDefinition\",\"nodes\":[{\"constant\":false,\"id\":6,\"name\":\"joinPartStream\",\"nodeType\":\"VariableDeclaration\",\"scope\":34,\"src\":\"120:28:0\",\"stateVariable\":true,\"storageLocation\":\"default\",\"typeDescriptions\":{\"typeIdentifier\":\"t_string_storage\",\"typeString\":\"string\"},\"typeName\":{\"id\":5,\"name\":\"string\",\"nodeType\":\"ElementaryTypeName\",\"src\":\"120:6:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_string_storage_ptr\",\"typeString\":\"string\"}},\"value\":null,\"visibility\":\"public\"},{\"body\":{\"id\":32,\"nodeType\":\"Block\",\"src\":\"366:81:0\",\"statements\":[{\"expression\":{\"argumentTypes\":null,\"arguments\":[{\"argumentTypes\":null,\"id\":25,\"name\":\"operator\",\"nodeType\":\"Identifier\",\"overloadedDeclarations\":[],\"referencedDeclaration\":8,\"src\":\"388:8:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_address\",\"typeString\":\"address\"}}],\"expression\":{\"argumentTypes\":[{\"typeIdentifier\":\"t_address\",\"typeString\":\"address\"}],\"id\":24,\"name\":\"setOperator\",\"nodeType\":\"Identifier\",\"overloadedDeclarations\":[],\"referencedDeclaration\":367,\"src\":\"376:11:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_function_internal_nonpayable$_t_address_$returns$__$\",\"typeString\":\"function (address)\"}},\"id\":26,\"isConstant\":false,\"isLValue\":false,\"isPure\":false,\"kind\":\"functionCall\",\"lValueRequested\":false,\"names\":[],\"nodeType\":\"FunctionCall\",\"src\":\"376:21:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_tuple$__$\",\"typeString\":\"tuple()\"}},\"id\":27,\"nodeType\":\"ExpressionStatement\",\"src\":\"376:21:0\"},{\"expression\":{\"argumentTypes\":null,\"id\":30,\"isConstant\":false,\"isLValue\":false,\"isPure\":false,\"lValueRequested\":false,\"leftHandSide\":{\"argumentTypes\":null,\"id\":28,\"name\":\"joinPartStream\",\"nodeType\":\"Identifier\",\"overloadedDeclarations\":[],\"referencedDeclaration\":6,\"src\":\"407:14:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_string_storage\",\"typeString\":\"string storage ref\"}},\"nodeType\":\"Assignment\",\"operator\":\"=\",\"rightHandSide\":{\"argumentTypes\":null,\"id\":29,\"name\":\"joinPartStreamId\",\"nodeType\":\"Identifier\",\"overloadedDeclarations\":[],\"referencedDeclaration\":10,\"src\":\"424:16:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_string_memory_ptr\",\"typeString\":\"string memory\"}},\"src\":\"407:33:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_string_storage\",\"typeString\":\"string storage ref\"}},\"id\":31,\"nodeType\":\"ExpressionStatement\",\"src\":\"407:33:0\"}]},\"documentation\":null,\"id\":33,\"implemented\":true,\"isConstructor\":true,\"isDeclaredConst\":false,\"modifiers\":[{\"arguments\":[{\"argumentTypes\":null,\"id\":19,\"name\":\"tokenAddress\",\"nodeType\":\"Identifier\",\"overloadedDeclarations\":[],\"referencedDeclaration\":12,\"src\":\"301:12:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_address\",\"typeString\":\"address\"}},{\"argumentTypes\":null,\"id\":20,\"name\":\"blockFreezePeriodSeconds\",\"nodeType\":\"Identifier\",\"overloadedDeclarations\":[],\"referencedDeclaration\":14,\"src\":\"315:24:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_uint256\",\"typeString\":\"uint256\"}},{\"argumentTypes\":null,\"id\":21,\"name\":\"adminFeeFraction\",\"nodeType\":\"Identifier\",\"overloadedDeclarations\":[],\"referencedDeclaration\":16,\"src\":\"341:16:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_uint256\",\"typeString\":\"uint256\"}}],\"id\":22,\"modifierName\":{\"argumentTypes\":null,\"id\":18,\"name\":\"Monoplasma\",\"nodeType\":\"Identifier\",\"overloadedDeclarations\":[],\"referencedDeclaration\":657,\"src\":\"290:10:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_type$_t_contract$_Monoplasma_$657_$\",\"typeString\":\"type(contract Monoplasma)\"}},\"nodeType\":\"ModifierInvocation\",\"src\":\"290:68:0\"}],\"name\":\"\",\"nodeType\":\"FunctionDefinition\",\"parameters\":{\"id\":17,\"nodeType\":\"ParameterList\",\"parameters\":[{\"constant\":false,\"id\":8,\"name\":\"operator\",\"nodeType\":\"VariableDeclaration\",\"scope\":33,\"src\":\"167:16:0\",\"stateVariable\":false,\"storageLocation\":\"default\",\"typeDescriptions\":{\"typeIdentifier\":\"t_address\",\"typeString\":\"address\"},\"typeName\":{\"id\":7,\"name\":\"address\",\"nodeType\":\"ElementaryTypeName\",\"src\":\"167:7:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_address\",\"typeString\":\"address\"}},\"value\":null,\"visibility\":\"internal\"},{\"constant\":false,\"id\":10,\"name\":\"joinPartStreamId\",\"nodeType\":\"VariableDeclaration\",\"scope\":33,\"src\":\"185:23:0\",\"stateVariable\":false,\"storageLocation\":\"default\",\"typeDescriptions\":{\"typeIdentifier\":\"t_string_memory_ptr\",\"typeString\":\"string\"},\"typeName\":{\"id\":9,\"name\":\"string\",\"nodeType\":\"ElementaryTypeName\",\"src\":\"185:6:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_string_storage_ptr\",\"typeString\":\"string\"}},\"value\":null,\"visibility\":\"internal\"},{\"constant\":false,\"id\":12,\"name\":\"tokenAddress\",\"nodeType\":\"VariableDeclaration\",\"scope\":33,\"src\":\"210:20:0\",\"stateVariable\":false,\"storageLocation\":\"default\",\"typeDescriptions\":{\"typeIdentifier\":\"t_address\",\"typeString\":\"address\"},\"typeName\":{\"id\":11,\"name\":\"address\",\"nodeType\":\"ElementaryTypeName\",\"src\":\"210:7:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_address\",\"typeString\":\"address\"}},\"value\":null,\"visibility\":\"internal\"},{\"constant\":false,\"id\":14,\"name\":\"blockFreezePeriodSeconds\",\"nodeType\":\"VariableDeclaration\",\"scope\":33,\"src\":\"232:29:0\",\"stateVariable\":false,\"storageLocation\":\"default\",\"typeDescriptions\":{\"typeIdentifier\":\"t_uint256\",\"typeString\":\"uint256\"},\"typeName\":{\"id\":13,\"name\":\"uint\",\"nodeType\":\"ElementaryTypeName\",\"src\":\"232:4:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_uint256\",\"typeString\":\"uint256\"}},\"value\":null,\"visibility\":\"internal\"},{\"constant\":false,\"id\":16,\"name\":\"adminFeeFraction\",\"nodeType\":\"VariableDeclaration\",\"scope\":33,\"src\":\"263:21:0\",\"stateVariable\":false,\"storageLocation\":\"default\",\"typeDescriptions\":{\"typeIdentifier\":\"t_uint256\",\"typeString\":\"uint256\"},\"typeName\":{\"id\":15,\"name\":\"uint\",\"nodeType\":\"ElementaryTypeName\",\"src\":\"263:4:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_uint256\",\"typeString\":\"uint256\"}},\"value\":null,\"visibility\":\"internal\"}],\"src\":\"166:119:0\"},\"payable\":false,\"returnParameters\":{\"id\":23,\"nodeType\":\"ParameterList\",\"parameters\":[],\"src\":\"366:0:0\"},\"scope\":34,\"src\":\"155:292:0\",\"stateMutability\":\"nonpayable\",\"superFunction\":null,\"visibility\":\"public\"}],\"scope\":35,\"src\":\"73:376:0\"}],\"src\":\"0:449:0\"},\"legacyAST\":{\"absolutePath\":\"/home/fj/isentropy/streamr/streamr-community-products/contracts/CommunityProduct.sol\",\"exportedSymbols\":{\"CommunityProduct\":[34]},\"id\":35,\"nodeType\":\"SourceUnit\",\"nodes\":[{\"id\":1,\"literals\":[\"solidity\",\"^\",\"0.4\",\".24\"],\"nodeType\":\"PragmaDirective\",\"src\":\"0:24:0\"},{\"absolutePath\":\"monoplasma/contracts/Monoplasma.sol\",\"file\":\"monoplasma/contracts/Monoplasma.sol\",\"id\":2,\"nodeType\":\"ImportDirective\",\"scope\":35,\"sourceUnit\":658,\"src\":\"26:45:0\",\"symbolAliases\":[],\"unitAlias\":\"\"},{\"baseContracts\":[{\"arguments\":null,\"baseName\":{\"contractScope\":null,\"id\":3,\"name\":\"Monoplasma\",\"nodeType\":\"UserDefinedTypeName\",\"referencedDeclaration\":657,\"src\":\"102:10:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_contract$_Monoplasma_$657\",\"typeString\":\"contract Monoplasma\"}},\"id\":4,\"nodeType\":\"InheritanceSpecifier\",\"src\":\"102:10:0\"}],\"contractDependencies\":[277,657,730],\"contractKind\":\"contract\",\"documentation\":null,\"fullyImplemented\":true,\"id\":34,\"linearizedBaseContracts\":[34,657,730,277],\"name\":\"CommunityProduct\",\"nodeType\":\"ContractDefinition\",\"nodes\":[{\"constant\":false,\"id\":6,\"name\":\"joinPartStream\",\"nodeType\":\"VariableDeclaration\",\"scope\":34,\"src\":\"120:28:0\",\"stateVariable\":true,\"storageLocation\":\"default\",\"typeDescriptions\":{\"typeIdentifier\":\"t_string_storage\",\"typeString\":\"string\"},\"typeName\":{\"id\":5,\"name\":\"string\",\"nodeType\":\"ElementaryTypeName\",\"src\":\"120:6:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_string_storage_ptr\",\"typeString\":\"string\"}},\"value\":null,\"visibility\":\"public\"},{\"body\":{\"id\":32,\"nodeType\":\"Block\",\"src\":\"366:81:0\",\"statements\":[{\"expression\":{\"argumentTypes\":null,\"arguments\":[{\"argumentTypes\":null,\"id\":25,\"name\":\"operator\",\"nodeType\":\"Identifier\",\"overloadedDeclarations\":[],\"referencedDeclaration\":8,\"src\":\"388:8:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_address\",\"typeString\":\"address\"}}],\"expression\":{\"argumentTypes\":[{\"typeIdentifier\":\"t_address\",\"typeString\":\"address\"}],\"id\":24,\"name\":\"setOperator\",\"nodeType\":\"Identifier\",\"overloadedDeclarations\":[],\"referencedDeclaration\":367,\"src\":\"376:11:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_function_internal_nonpayable$_t_address_$returns$__$\",\"typeString\":\"function (address)\"}},\"id\":26,\"isConstant\":false,\"isLValue\":false,\"isPure\":false,\"kind\":\"functionCall\",\"lValueRequested\":false,\"names\":[],\"nodeType\":\"FunctionCall\",\"src\":\"376:21:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_tuple$__$\",\"typeString\":\"tuple()\"}},\"id\":27,\"nodeType\":\"ExpressionStatement\",\"src\":\"376:21:0\"},{\"expression\":{\"argumentTypes\":null,\"id\":30,\"isConstant\":false,\"isLValue\":false,\"isPure\":false,\"lValueRequested\":false,\"leftHandSide\":{\"argumentTypes\":null,\"id\":28,\"name\":\"joinPartStream\",\"nodeType\":\"Identifier\",\"overloadedDeclarations\":[],\"referencedDeclaration\":6,\"src\":\"407:14:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_string_storage\",\"typeString\":\"string storage ref\"}},\"nodeType\":\"Assignment\",\"operator\":\"=\",\"rightHandSide\":{\"argumentTypes\":null,\"id\":29,\"name\":\"joinPartStreamId\",\"nodeType\":\"Identifier\",\"overloadedDeclarations\":[],\"referencedDeclaration\":10,\"src\":\"424:16:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_string_memory_ptr\",\"typeString\":\"string memory\"}},\"src\":\"407:33:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_string_storage\",\"typeString\":\"string storage ref\"}},\"id\":31,\"nodeType\":\"ExpressionStatement\",\"src\":\"407:33:0\"}]},\"documentation\":null,\"id\":33,\"implemented\":true,\"isConstructor\":true,\"isDeclaredConst\":false,\"modifiers\":[{\"arguments\":[{\"argumentTypes\":null,\"id\":19,\"name\":\"tokenAddress\",\"nodeType\":\"Identifier\",\"overloadedDeclarations\":[],\"referencedDeclaration\":12,\"src\":\"301:12:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_address\",\"typeString\":\"address\"}},{\"argumentTypes\":null,\"id\":20,\"name\":\"blockFreezePeriodSeconds\",\"nodeType\":\"Identifier\",\"overloadedDeclarations\":[],\"referencedDeclaration\":14,\"src\":\"315:24:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_uint256\",\"typeString\":\"uint256\"}},{\"argumentTypes\":null,\"id\":21,\"name\":\"adminFeeFraction\",\"nodeType\":\"Identifier\",\"overloadedDeclarations\":[],\"referencedDeclaration\":16,\"src\":\"341:16:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_uint256\",\"typeString\":\"uint256\"}}],\"id\":22,\"modifierName\":{\"argumentTypes\":null,\"id\":18,\"name\":\"Monoplasma\",\"nodeType\":\"Identifier\",\"overloadedDeclarations\":[],\"referencedDeclaration\":657,\"src\":\"290:10:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_type$_t_contract$_Monoplasma_$657_$\",\"typeString\":\"type(contract Monoplasma)\"}},\"nodeType\":\"ModifierInvocation\",\"src\":\"290:68:0\"}],\"name\":\"\",\"nodeType\":\"FunctionDefinition\",\"parameters\":{\"id\":17,\"nodeType\":\"ParameterList\",\"parameters\":[{\"constant\":false,\"id\":8,\"name\":\"operator\",\"nodeType\":\"VariableDeclaration\",\"scope\":33,\"src\":\"167:16:0\",\"stateVariable\":false,\"storageLocation\":\"default\",\"typeDescriptions\":{\"typeIdentifier\":\"t_address\",\"typeString\":\"address\"},\"typeName\":{\"id\":7,\"name\":\"address\",\"nodeType\":\"ElementaryTypeName\",\"src\":\"167:7:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_address\",\"typeString\":\"address\"}},\"value\":null,\"visibility\":\"internal\"},{\"constant\":false,\"id\":10,\"name\":\"joinPartStreamId\",\"nodeType\":\"VariableDeclaration\",\"scope\":33,\"src\":\"185:23:0\",\"stateVariable\":false,\"storageLocation\":\"default\",\"typeDescriptions\":{\"typeIdentifier\":\"t_string_memory_ptr\",\"typeString\":\"string\"},\"typeName\":{\"id\":9,\"name\":\"string\",\"nodeType\":\"ElementaryTypeName\",\"src\":\"185:6:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_string_storage_ptr\",\"typeString\":\"string\"}},\"value\":null,\"visibility\":\"internal\"},{\"constant\":false,\"id\":12,\"name\":\"tokenAddress\",\"nodeType\":\"VariableDeclaration\",\"scope\":33,\"src\":\"210:20:0\",\"stateVariable\":false,\"storageLocation\":\"default\",\"typeDescriptions\":{\"typeIdentifier\":\"t_address\",\"typeString\":\"address\"},\"typeName\":{\"id\":11,\"name\":\"address\",\"nodeType\":\"ElementaryTypeName\",\"src\":\"210:7:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_address\",\"typeString\":\"address\"}},\"value\":null,\"visibility\":\"internal\"},{\"constant\":false,\"id\":14,\"name\":\"blockFreezePeriodSeconds\",\"nodeType\":\"VariableDeclaration\",\"scope\":33,\"src\":\"232:29:0\",\"stateVariable\":false,\"storageLocation\":\"default\",\"typeDescriptions\":{\"typeIdentifier\":\"t_uint256\",\"typeString\":\"uint256\"},\"typeName\":{\"id\":13,\"name\":\"uint\",\"nodeType\":\"ElementaryTypeName\",\"src\":\"232:4:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_uint256\",\"typeString\":\"uint256\"}},\"value\":null,\"visibility\":\"internal\"},{\"constant\":false,\"id\":16,\"name\":\"adminFeeFraction\",\"nodeType\":\"VariableDeclaration\",\"scope\":33,\"src\":\"263:21:0\",\"stateVariable\":false,\"storageLocation\":\"default\",\"typeDescriptions\":{\"typeIdentifier\":\"t_uint256\",\"typeString\":\"uint256\"},\"typeName\":{\"id\":15,\"name\":\"uint\",\"nodeType\":\"ElementaryTypeName\",\"src\":\"263:4:0\",\"typeDescriptions\":{\"typeIdentifier\":\"t_uint256\",\"typeString\":\"uint256\"}},\"value\":null,\"visibility\":\"internal\"}],\"src\":\"166:119:0\"},\"payable\":false,\"returnParameters\":{\"id\":23,\"nodeType\":\"ParameterList\",\"parameters\":[],\"src\":\"366:0:0\"},\"scope\":34,\"src\":\"155:292:0\",\"stateMutability\":\"nonpayable\",\"superFunction\":null,\"visibility\":\"public\"}],\"scope\":35,\"src\":\"73:376:0\"}],\"src\":\"0:449:0\"},\"compiler\":{\"name\":\"solc\",\"version\":\"0.4.24+commit.e67f0147.Emscripten.clang\"},\"networks\":{},\"schemaVersion\":\"1.1.1\",\"updatedAt\":\"2019-09-18T03:40:05.107Z\"}");

/***/ })
/******/ ]);
//# sourceMappingURL=streamr-client.js.map