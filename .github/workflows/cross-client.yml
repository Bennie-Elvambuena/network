name: Cross-Client

# Be sure to update both workflow files if you edit any env or trigger config
env:
  CI: true
  DEBUG_COLORS: true
  DEBUG: "Streamr*"
on:
  push:
    tags:
      - '*'
    branches:
      - main
  pull_request:
    branches:
      - '*'
  schedule:
    # run every day at 00:00
    - cron:  '0 0 * * *'

# Be sure to update both workflow files if you edit any env or trigger config

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
  streamr-client-testing-tool:
    name: ${{ matrix.config-name }} ${{ matrix.test-name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test-name:
          - stream-cleartext-unsigned
          - stream-cleartext-signed
          - stream-encrypted-shared-signed
          - stream-encrypted-shared-rotating-signed
          - stream-encrypted-exchanged-rotating-signed
        config-name:
          - default
          - js-only
          - java-only
          - realtime-only
          - js-realtime-only
          - java-realtime-only
    env:
      NUM_MESSAGES: 20
      TEST_NAME: ${{ matrix.test-name }}
      CONFIG_NAME: ${{ matrix.config-name }}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: "14.x"
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-${{ matrix.node-version }}
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: npm ci
        working-directory: './'
        run: |
          npm ci
          npx lerna bootstrap --scope streamr-client --include-dependencies
      - uses: actions/checkout@v2
        with:
          repository: streamr-dev/streamr-client-testing
          path: streamr-client-testing
      - uses: actions/setup-java@v1
        with:
          java-version: '8'
      - name: setup-client-testing
        working-directory: streamr-client-testing
        run: |
          mkdir -p node_modules
          # manually link streamr-client, prerelease versions in monorepo won't npm link.
          ln -fs ../../packages/client/dist node_modules/streamr-client
          ## npm install is used because package-lock.json could be from a previous client version.
          npm install
      - name: build-client-testing
        working-directory: streamr-client-testing
        run: ./gradlew fatjar
      - name: Start Streamr Docker Stack
        uses: streamr-dev/streamr-docker-dev-action@v1.0.0-alpha.3
        with:
          services-to-start: "mysql redis core-api cassandra parity-node0 parity-sidechain-node0 bridge brokers trackers nginx smtp"
      - uses: nick-invision/retry@v2
        name: run-client-testing
        with:
          max_attempts: 5
          timeout_minutes: 15
          retry_on: error
          command: cd streamr-client-testing && DEBUG='' java -jar build/libs/client_testing-1.0-SNAPSHOT.jar -s $TEST_NAME -c config/$CONFIG_NAME.conf -n $NUM_MESSAGES
      - name: Collect docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v1
        with:
          dest: 'streamr-client-testing/logs'
      - name: Upload logs to GitHub
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: docker-logs-${{ github.job }}-${{ github.run_number }}-${{ github.run_id }}
          path: streamr-client-testing/logs
